{"version":3,"file":"static/webpack/static\\development\\pages\\vendor.js.a23328eefb80129f92b3.hot-update.js","sources":["webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        {props.isVariableProduct && props.isVariationsSaved ?\r\n                            <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                    <Select\r\n                                        options={groupedOptions}\r\n                                        components={{ Group }}\r\n                                        value={props.customFieldNameSelected}\r\n                                        onChange={props.fieldNameHandler}\r\n                                    />\r\n                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                        Add New\r\n                                </Nav.Link>\r\n\r\n                                    <AddNewFieldNameModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Value\"\r\n                                            name=\"sku\"\r\n                                            value={props.value}\r\n                                            onChange={props.fieldValueHandler}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Label style={styles.label}>\r\n                                    {/* <span>For Multiple Values add | between values</span> */}\r\n                                    {props.isVariableProduct ?\r\n                                        <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                        : null\r\n                                    }\r\n                                    <span style={{ color: 'red' }}>\r\n                                        {props.error}</span>\r\n                                </Form.Label>\r\n                                <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                    onClick={props.addFieldHandler}>Add Field</Button>\r\n                            </Form.Row>\r\n                            : null\r\n                        }\r\n\r\n\r\n                        {/* Map */}\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.name}\r\n                                            onChange={() => data.name}\r\n                                        >\r\n                                            <option>{data.name}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.value}\r\n                                                onChange={() => data.value}\r\n                                            />\r\n                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"],"mappings":"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","sourceRoot":""}