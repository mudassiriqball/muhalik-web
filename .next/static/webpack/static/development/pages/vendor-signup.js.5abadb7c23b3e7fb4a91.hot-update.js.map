{"version":3,"file":"static/webpack/static\\development\\pages\\vendor-signup.js.5abadb7c23b3e7fb4a91.hot-update.js","sources":["webpack:///./pages/vendor-signup.js","webpack:///./sdk/muhalik.config.js"],"sourcesContent":["// import React, { Component } from 'react';\r\n// import Link from 'next/link';\r\n// import axios from 'axios';\r\n// import { Navbar, Container, Form, Col, Row, InputGroup, Button, Image } from 'react-bootstrap';\r\n\r\n// import { Formik } from 'formik';\r\n// import * as yup from 'yup';\r\n\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// import GlobalStyleSheet from '../styleSheet';\r\n\r\n// // RegEx for phone number validation\r\n// const phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\n// const schema = yup.object({\r\n//     mobile: yup.string().required(\"Enter Mobile Number\")\r\n//         .matches(phoneRegExp, \"Phone number is not valid\"),\r\n\r\n//     fullName: yup.string().required(\"Enter Full Name\")\r\n//         .min(5, \"Full Name must have at least 5 characters\")\r\n//         .max(20, \"Full Name can't be longer than 20 characters\"),\r\n\r\n//     verificationCode: yup.string().required(\"Enter Verification Code\"),\r\n\r\n//     email: yup.string().email(\"Must be a valid email address\")\r\n//         .max(100, \"Email must be less than 100 characters\"),\r\n\r\n//     password: yup.string().required(\"Enter Password\")\r\n//         .min(8, \"Password must have at least 8 characters\")\r\n//         .max(20, \"Password can't be longer than 20 characters\"),\r\n\r\n//     confirmPassword: yup.string().required(\"Enter Confirm Password\").when(\"password\", {\r\n//         is: val => (val && val.length > 0 ? true : false),\r\n//         then: yup.string().oneOf(\r\n//             [yup.ref(\"password\")],\r\n//             \"Passwords must match\"\r\n//         )\r\n//     }),\r\n\r\n//     shopName: yup.string().required(\"Enter Shop Name\")\r\n//         .min(3, \"Shop Name must have at least 3 characters\")\r\n//         .max(20, \"Shop Name can't be longer than 20 characters\"),\r\n\r\n//     category: yup.string().required(\"Enter Category\"),\r\n\r\n//     shopAddress: yup.string().required(\"Enter Shop Address\")\r\n//         .min(5, \"Shop Address must have at least 5 characters\")\r\n//         .max(30, \"Shop Address can't be longer than 30 characters\"),\r\n\r\n//     countary: yup.string().required(\"Enter Countary\"),\r\n//     city: yup.string().required(\"Enter City\"),\r\n//     role: yup.string()\r\n// });\r\n\r\n// class VendorSignup extends Component {\r\n\r\n//     state = {\r\n//         hide: true\r\n//     };\r\n//     showPassword = ev => {\r\n//         this.setState({ hide: !this.state.hide })\r\n//     }\r\n\r\n//     uploadData(data) {\r\n//         const url = MuhalikConfig.PATH + '/api/users/register';\r\n//         axios.post(url, {\r\n//             data\r\n//           }).then(function (response) {\r\n//             alert(response.data.message);\r\n//           }).catch(function (error) {\r\n//             alert(error);\r\n//         });\r\n//     }\r\n\r\n//     render() {\r\n//         const { hide } = this.state;\r\n//         let eyeBtn;\r\n//         if (this.state.hide) {\r\n//             eyeBtn = <FontAwesomeIcon icon={faEye} style={styles.fontawesome} />;\r\n//         } else {\r\n//             eyeBtn = <FontAwesomeIcon icon={faEyeSlash} style={styles.fontawesome} />;\r\n//         }\r\n//         return (\r\n//             <Formik\r\n//                 validationSchema={schema}\r\n//                 initialValues={{\r\n//                     mobile: '', fullName: '', verificationCode: '', email: '', password: '', confirmPassword: '',\r\n//                     shopName: '', category: '', shopAddress: '', countary: '', city: '', role: 'vendor'\r\n//                 }}\r\n//                 onSubmit={(values, { setSubmitting, resetForm }) => {\r\n//                     // When button submits form and form is in the process of submitting, submit button is disabled\r\n//                     setSubmitting(true);\r\n//                     // Resets form after submission is complete\r\n//                     resetForm();\r\n//                     // Sets setSubmitting to false after form is reset\r\n//                     setSubmitting(false);\r\n\r\n//                     ssetTimeout(() => {\r\n//                         this.uploadData(values);\r\n//                         resetForm();\r\n//                         setSubmitting(false);\r\n//                     }, 500);\r\n//                 }}\r\n//             >\r\n//                 {\r\n//                     ({\r\n//                         handleSubmit,\r\n//                         handleChange,\r\n//                         values,\r\n//                         touched,\r\n//                         isValid,\r\n//                         errors,\r\n//                         handleBlur,\r\n//                         isSubmitting\r\n//                     }) => (\r\n//                             <div style={styles.body}>\r\n//                                 <Navbar variant=\"dark\" style={{ background: `${GlobalStyleSheet.primry_color}` }}>\r\n//                                     <Navbar.Brand href=\"/\" className=\"mr-auto\" > Muhalik </Navbar.Brand>\r\n//                                 </Navbar>\r\n\r\n//                                 <Container>\r\n//                                     <Row>\r\n//                                         <Col lg={1} md={0} sm={0} xs={0} style={styles.side_column}></Col>\r\n//                                         <Col style={styles.center_column}>\r\n//                                             <p>\r\n//                                                 <Image src=\"/static/muhalik.jpg\" roundedCircle thumbnail fluid style={{ width: '25%', maxWidth: '150px' }} />\r\n//                                             </p>\r\n//                                             <h6 className=\"text-center\" style={{ width: '100%', paddingBottom: '10px' }}>Register Your Shop</h6>\r\n//                                             <Form noValidate onSubmit={handleSubmit}>\r\n//                                                 <Form.Row>\r\n//                                                     <Form.Group as={Col} md=\"6\" controlId=\"validationMobile\">\r\n//                                                         <Form.Label style={styles.label}>Mobile Number <span>*</span></Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type=\"text\"\r\n//                                                                 placeholder=\"+966590911891\"\r\n//                                                                 aria-describedby=\"mobile\"\r\n//                                                                 name=\"mobile\"\r\n//                                                                 value={values.mobile}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.mobile && errors.mobile}\r\n//                                                             />\r\n//                                                             <InputGroup.Prepend>\r\n//                                                                 <Button id=\"sndCodeBtn\" disabled={!touched.mobile && errors.mobile} style={styles.buttons}>Send Code</Button>\r\n//                                                             </InputGroup.Prepend>\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.mobile}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} md=\"6\" controlId=\"validationFullName\">\r\n//                                                         <Form.Label style={styles.label}>Full Name<span>*</span></Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type=\"text\"\r\n//                                                                 placeholder=\"Full Name\"\r\n//                                                                 aria-describedby=\"fullName\"\r\n//                                                                 name=\"fullName\"\r\n//                                                                 value={values.fullName}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.fullName && errors.fullName}\r\n//                                                             />\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.fullName}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                 </Form.Row>\r\n\r\n//                                                 <Form.Row>\r\n//                                                     <Form.Group as={Col} md=\"6\" controlId=\"validationVerificationCode\">\r\n//                                                         <Form.Label style={styles.label}>Verification Code\r\n//                                                         <span> * </span></Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             type=\"text\"\r\n//                                                             placeholder=\"Verification Code\"\r\n//                                                             name=\"verificationCode\"\r\n//                                                             value={values.verificationCode}\r\n//                                                             onChange={handleChange}\r\n//                                                             isInvalid={touched.verificationCode && errors.verificationCode}\r\n//                                                         />\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {errors.verificationCode}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} md=\"6\" controlId=\"validationEmail\">\r\n//                                                         <Form.Label style={styles.label}>Email Address</Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             type=\"email\"\r\n//                                                             placeholder=\"mr.x@gmail.com\"\r\n//                                                             name=\"email\"\r\n//                                                             value={values.email}\r\n//                                                             onChange={handleChange}\r\n//                                                             isInvalid={touched.email && errors.email}\r\n//                                                         />\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {errors.email}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </Form.Group>\r\n//                                                 </Form.Row>\r\n\r\n//                                                 <Form.Row>\r\n//                                                     <Form.Group as={Col} md={6} controlId=\"validationPassword\">\r\n//                                                         <Form.Label style={styles.label}>Password <span>*</span></Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type={hide ? 'password' : 'text'}\r\n//                                                                 placeholder=\"Enter Password\"\r\n//                                                                 aria-describedby=\"inputGroup\"\r\n//                                                                 name=\"password\"\r\n//                                                                 value={values.password}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.password && errors.password}\r\n//                                                             />\r\n//                                                             <InputGroup.Prepend>\r\n//                                                                 <Button id=\"passwordEyeBtn\" onClick={this.showPassword} style={styles.buttons}>\r\n//                                                                     {eyeBtn}\r\n//                                                                 </Button>\r\n//                                                             </InputGroup.Prepend>\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.password}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} md={6} controlId=\"validationConfirmPassword\">\r\n//                                                         <Form.Label style={styles.label}>Confirm Password <span>*</span></Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type={hide ? 'password' : 'text'}\r\n//                                                                 placeholder=\"Re-enter Password\"\r\n//                                                                 aria-describedby=\"confirmPassword\"\r\n//                                                                 name=\"confirmPassword\"\r\n//                                                                 value={values.confirmPassword}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.confirmPassword && errors.confirmPassword}\r\n//                                                             />\r\n//                                                             <InputGroup.Prepend>\r\n//                                                                 <Button id=\"confirmPasswordEyeBtn\" onClick={this.showPassword} style={styles.buttons}>\r\n//                                                                     {eyeBtn}\r\n//                                                                 </Button>\r\n//                                                             </InputGroup.Prepend>\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.confirmPassword}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                 </Form.Row>\r\n\r\n//                                                 {/* 4th Row */}\r\n//                                                 <Form.Row>\r\n//                                                     <Form.Group as={Col} lg={3} md={3}>\r\n//                                                         <Form.Label style={styles.label}>Shop Name<span>*</span></Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type=\"text\"\r\n//                                                                 placeholder=\"Shop Name\"\r\n//                                                                 aria-describedby=\"shopName\"\r\n//                                                                 name=\"shopName\"\r\n//                                                                 value={values.shopName}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.shopName && errors.shopName}\r\n//                                                             />\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.shopName}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} lg={3} md={3} controlId=\"category\">\r\n//                                                         <Form.Label style={styles.label}>Category\r\n//                                                             <span> * </span>\r\n//                                                         </Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             as=\"select\"\r\n//                                                             aria-describedby=\"countary\"\r\n//                                                             name=\"countary\"\r\n//                                                             value={values.countary}\r\n//                                                             onChange={handleChange}\r\n//                                                             isInvalid={touched.countary && errors.countary}\r\n//                                                         >\r\n//                                                             <option>Select</option>\r\n//                                                             <option> KSA </option>\r\n//                                                             <option> Pak </option>\r\n//                                                         </Form.Control>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {errors.countary}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} lg={6} md={6}>\r\n//                                                         <Form.Label style={styles.label}>Shop Address\r\n//                                                         <span> * </span>\r\n//                                                         </Form.Label>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type=\"text\"\r\n//                                                                 placeholder=\"Shop Address\"\r\n//                                                                 aria-describedby=\"shopAddress\"\r\n//                                                                 name=\"shopAddress\"\r\n//                                                                 value={values.shopAddress}\r\n//                                                                 onChange={handleChange}\r\n//                                                                 isInvalid={touched.shopAddress && errors.shopAddress}\r\n//                                                             />\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {errors.shopAddress}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n\r\n\r\n//                                                 </Form.Row>\r\n//                                                 {/* End of 4th Row */}\r\n\r\n\r\n//                                                 {/* 5th Row */}\r\n//                                                 <Form.Row>\r\n//                                                     <Form.Group as={Col} lg={2} md={3} controlId=\"countary\">\r\n//                                                         <Form.Label style={styles.label}>Countary\r\n//                                                         <span> * </span>\r\n//                                                         </Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             as=\"select\"\r\n//                                                             aria-describedby=\"countary\"\r\n//                                                             name=\"countary\"\r\n//                                                             value={values.countary}\r\n//                                                             onChange={handleChange}\r\n//                                                             isInvalid={touched.countary && errors.countary}\r\n\r\n//                                                         >\r\n//                                                             <option>Select</option>\r\n//                                                             <option> KSA </option>\r\n//                                                             <option> Pak </option>\r\n//                                                         </Form.Control>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {errors.countary}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} lg={2} md={3} controlId=\"city\">\r\n//                                                         <Form.Label style={styles.label}>City\r\n//                                                         <span> * </span>\r\n//                                                         </Form.Label>\r\n//                                                         <Form.Control\r\n//                                                             as=\"select\"\r\n//                                                             aria-describedby=\"city\"\r\n//                                                             name=\"city\"\r\n//                                                             value={values.city}\r\n//                                                             onChange={handleChange}\r\n//                                                             isInvalid={touched.city && errors.city}\r\n//                                                         >\r\n//                                                             <option>Select</option>\r\n//                                                             <option> Male </option>\r\n//                                                             <option> Female </option>\r\n//                                                             <option> Other </option>\r\n//                                                         </Form.Control>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {errors.countary}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </Form.Group>\r\n//                                                     <Col>\r\n//                                                         <Form.Group >\r\n//                                                             <Form.Label style={{color: 'white', fontSize: '0.1px'}}> . </Form.Label>\r\n//                                                             <Form.Label className=\"text-center\" style={styles.term_condition_label}>\r\n//                                                                 By Registering your shop, you agree to Muhalik's\r\n//                                                                 <span>\r\n//                                                                     <Link href=\"./help/terms-and-conditions\"><a>Terms & Conditions</a></Link>\r\n//                                                                 </span>\r\n//                                                                 and\r\n//                                                                 <span>\r\n//                                                                     <Link href=\"./help/privacy-statement\"><a>Privacy Statement</a></Link>\r\n//                                                                 </span>\r\n//                                                             </Form.Label>\r\n//                                                         </Form.Group>\r\n//                                                     </Col>\r\n//                                                     <Form.Group as={Col} lg={4} controlId=\"loginGrop\">\r\n//                                                         <Form.Label className=\"text-center\" style={styles.label}>\r\n//                                                             Already have an account...\r\n//                                                             <span>\r\n//                                                                 <Link href=\"login\"><a>Login</a></Link>\r\n//                                                             </span>\r\n//                                                         </Form.Label>\r\n//                                                         <Button type=\"submit\" onSubmit={handleSubmit} block style={styles.submit_btn}>Signup</Button>\r\n//                                                     </Form.Group>\r\n//                                                 </Form.Row>\r\n//                                                 {/* End 4th Row */}\r\n//                                             </Form>\r\n//                                         </Col>\r\n//                                         <Col lg={1} md={0} sm={0} xs={0} style={styles.side_column}></Col>\r\n//                                     </Row>\r\n//                                 </Container>\r\n//                                 <style jsx>\r\n//                                     {`\r\n//                                         span {\r\n//                                             color: red;\r\n//                                         }\r\n//                                         p {\r\n//                                             text-align: center; \r\n//                                             margin: 0px;\r\n//                                         }\r\n//                                     `}\r\n//                                 </style>\r\n//                             </div>\r\n//                         )}\r\n//             </Formik>\r\n//         );\r\n//     }\r\n// }\r\n\r\n// const styles = {\r\n//     body: {\r\n//         background: `${GlobalStyleSheet.body_color}`,\r\n//         position: 'absolute',\r\n//         top: '0',\r\n//         left: '0',\r\n//         right: '0',\r\n//         bottom: '-100',\r\n\r\n//     },\r\n//     buttons: {\r\n//         background: `${GlobalStyleSheet.primry_color}`,\r\n//         border: 'none',\r\n//         fontSize: '10px',\r\n//     },\r\n//     submit_btn: {\r\n//         background: `${GlobalStyleSheet.primry_color}`,\r\n//     },\r\n//     center_column: {\r\n//         background: 'white',\r\n//         padding: '20px 30px',\r\n//         margin: '3% 3%',\r\n//     },\r\n//     side_column: {\r\n//         margin: '0 2%',\r\n//     },\r\n//     label: {\r\n//         width: '100%',\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//     },\r\n//     term_condition_label: {\r\n//         width: '100%',\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         paddingTop: '-10px',\r\n//         marginTop: '-10px',\r\n//     },\r\n//     fontawesome: {\r\n//         color: `${GlobalStyleSheet.primary_text_color}`,\r\n//         width: '15px',\r\n//         height: '15px',\r\n//         maxHeight: '15px',\r\n//         maxWidth: '15px',\r\n//     },\r\n// }\r\n\r\n// export default VendorSignup;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport axios from 'axios';\r\nimport { Navbar, Container, Form, Col, Row, InputGroup, Button, Image } from 'react-bootstrap';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye, faEyeSlash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../styleSheet';\r\nimport MuhalikConfig from '../sdk/muhalik.config';\r\n// RegEx for phone number validation\r\nconst phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/\r\n\r\nconst schema = yup.object({\r\n    mobile: yup.string().required(\"Enter Mobile Number\")\r\n        .matches(phoneRegExp, \"Phone number is not valid\"),\r\n\r\n    fullName: yup.string().required(\"Enter Full Name\")\r\n        .min(5, \"Full Name must have at least 5 characters\")\r\n        .max(20, \"Full Name can't be longer than 20 characters\"),\r\n\r\n    verificationCode: yup.string().required(\"Enter Verification Code\"),\r\n\r\n    email: yup.string().email(\"Must be a valid email address\")\r\n        .max(100, \"Email must be less than 100 characters\"),\r\n\r\n    password: yup.string().required(\"Enter Password\")\r\n        .min(8, \"Password must have at least 8 characters\")\r\n        .max(20, \"Password can't be longer than 20 characters\"),\r\n\r\n    confirmPassword: yup.string().required(\"Enter Confirm Password\").when(\"password\", {\r\n        is: val => (val && val.length > 0 ? true : false),\r\n        then: yup.string().oneOf(\r\n            [yup.ref(\"password\")],\r\n            \"Passwords must match\"\r\n        )\r\n    }),\r\n\r\n    countary: yup.string().required(\"Enter Countary\"),\r\n    role: yup.string(),\r\n    gender: yup.string().required(\"Enter Gender\"),\r\n});\r\n\r\nclass Signup extends Component {\r\n\r\n    state = {\r\n        hide: true\r\n    };\r\n    showPassword = ev => {\r\n        this.setState({ hide: !this.state.hide })\r\n    }\r\n\r\n    uploadData(data) {\r\n        const url = MuhalikConfig.PATH + '/api/users/register';\r\n        axios.post(url, {\r\n            data\r\n        }).then(function (response) {\r\n            alert(response.data.message);\r\n        }).catch(function (error) {\r\n            alert(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { hide } = this.state;\r\n        let eyeBtn;\r\n        if (this.state.hide) {\r\n            eyeBtn = <FontAwesomeIcon icon={faEye} style={styles.fontawesome} />;\r\n        } else {\r\n            eyeBtn = <FontAwesomeIcon icon={faEyeSlash} style={styles.fontawesome} />;\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={{\r\n                    mobile: '', fullName: '', verificationCode: '', email: '', password: '', confirmPassword: '',\r\n                    countary: '', gender: '', role: 'customer'\r\n                }}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    // When button submits form and form is in the process of submitting, submit button is disabled\r\n                    setSubmitting(true);\r\n                    // Resets form after submission is complete\r\n                    resetForm();\r\n                    // Sets setSubmitting to false after form is reset\r\n                    setSubmitting(false);\r\n\r\n                    setTimeout(() => {\r\n                        this.uploadData(values);\r\n                        resetForm();\r\n                        setSubmitting(false);\r\n                    }, 500);\r\n                }}\r\n            >\r\n                {\r\n                    ({\r\n                        handleSubmit,\r\n                        handleChange,\r\n                        values,\r\n                        touched,\r\n                        isValid,\r\n                        errors,\r\n                        handleBlur,\r\n                        isSubmitting\r\n                    }) => (\r\n                            <div style={styles.body}>\r\n                                <Navbar variant=\"dark\" style={{ background: `${GlobalStyleSheet.primry_color}` }}>\r\n                                    <Navbar.Brand href=\"/\" className=\"mr-auto\" > Muhalik </Navbar.Brand>\r\n                                </Navbar>\r\n\r\n                                <Container>\r\n                                    <Row>\r\n                                        <Col lg={1} md={1} sm={0} xs={0} style={styles.side_column}></Col>\r\n                                        <Col style={styles.center_column}>\r\n                                            <p>\r\n                                                <Image src=\"/static/muhalik.jpg\" roundedCircle thumbnail fluid style={{ width: '25%', maxWidth: '150px' }} />\r\n                                            </p>\r\n                                            <h6 className=\"text-center\" style={{ width: '100%', paddingBottom: '10px' }}>Create Your Acount</h6>\r\n                                            <Form noValidate onSubmit={handleSubmit}>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"validationMobile\">\r\n                                                        <Form.Label style={styles.label}>Mobile Number <span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"+966590911891\"\r\n                                                                aria-describedby=\"mobile\"\r\n                                                                name=\"mobile\"\r\n                                                                value={values.mobile}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={touched.mobile && errors.mobile}\r\n                                                            />\r\n                                                            <InputGroup.Prepend>\r\n                                                                <Button id=\"sndCodeBtn\" style={styles.buttons}>Send Code</Button>\r\n                                                            </InputGroup.Prepend>\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.mobile}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"validationFullName\">\r\n                                                        <Form.Label style={styles.label}>Full Name<span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Full Name\"\r\n                                                                aria-describedby=\"fullName\"\r\n                                                                name=\"fullName\"\r\n                                                                value={values.fullName}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={touched.fullName && errors.fullName}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.fullName}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"validationVerificationCode\">\r\n                                                        <Form.Label style={styles.label}>Verification Code\r\n                                                        <span> * </span></Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Verification Code\"\r\n                                                            name=\"verificationCode\"\r\n                                                            value={values.verificationCode}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={touched.verificationCode && errors.verificationCode}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.verificationCode}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md=\"6\" controlId=\"validationEmail\">\r\n                                                        <Form.Label style={styles.label}>Email Address</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"email\"\r\n                                                            placeholder=\"mr.x@gmail.com\"\r\n                                                            name=\"email\"\r\n                                                            value={values.email}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={touched.email && errors.email}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.email}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} md={6} controlId=\"validationPassword\">\r\n                                                        <Form.Label style={styles.label}>Password <span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type={hide ? 'password' : 'text'}\r\n                                                                placeholder=\"Enter Password\"\r\n                                                                aria-describedby=\"inputGroup\"\r\n                                                                name=\"password\"\r\n                                                                value={values.password}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={touched.password && errors.password}\r\n                                                            />\r\n                                                            <InputGroup.Prepend>\r\n                                                                <Button id=\"passwordEyeBtn\" onClick={this.showPassword} style={styles.buttons}>\r\n                                                                    {eyeBtn}\r\n                                                                </Button>\r\n                                                            </InputGroup.Prepend>\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.password}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} md={6} controlId=\"validationConfirmPassword\">\r\n                                                        <Form.Label style={styles.label}>Confirm Password <span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type={hide ? 'password' : 'text'}\r\n                                                                placeholder=\"Re-enter Password\"\r\n                                                                aria-describedby=\"confirmPassword\"\r\n                                                                name=\"confirmPassword\"\r\n                                                                value={values.confirmPassword}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={touched.confirmPassword && errors.confirmPassword}\r\n                                                            />\r\n                                                            <InputGroup.Prepend>\r\n                                                                <Button id=\"confirmPasswordEyeBtn\" onClick={this.showPassword} style={styles.buttons}>\r\n                                                                    {eyeBtn}\r\n                                                                </Button>\r\n                                                            </InputGroup.Prepend>\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.confirmPassword}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n\r\n\r\n                                                {/* 4th Row */}\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} lg={2} md={3} controlId=\"countary\">\r\n                                                        <Form.Label style={styles.label}>Countary\r\n                                                        <span> * </span>\r\n                                                        </Form.Label>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            aria-describedby=\"countary\"\r\n                                                            name=\"countary\"\r\n                                                            value={values.countary}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={touched.countary && errors.countary}\r\n\r\n                                                        >\r\n                                                            <option>Select</option>\r\n                                                            <option> KSA </option>\r\n                                                            <option> Pak </option>\r\n                                                        </Form.Control>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.countary}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} lg={2} md={3} controlId=\"gender\">\r\n                                                        <Form.Label style={styles.label}>Gender\r\n                                                        <span> * </span>\r\n                                                        </Form.Label>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            aria-describedby=\"gender\"\r\n                                                            name=\"gender\"\r\n                                                            value={values.gender}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={touched.gender && errors.gender}\r\n                                                        >\r\n                                                            <option>Select</option>\r\n                                                            <option> Male </option>\r\n                                                            <option> Female </option>\r\n                                                            <option> Other </option>\r\n                                                        </Form.Control>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.gender}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </Form.Group>\r\n                                                    <Col>\r\n                                                        <Form.Group >\r\n                                                            <Form.Label style={{ color: 'white', fontSize: '0.1px' }}> . </Form.Label>\r\n                                                            <Form.Label className=\"text-center\" style={styles.term_condition_label}>\r\n                                                                By creating acount, you agree to Muhalik's\r\n                                                                <span>\r\n                                                                    <Link href=\"./help/terms-and-conditions\"><a>Terms & Conditions</a></Link>\r\n                                                                </span>\r\n                                                                and\r\n                                                                <span>\r\n                                                                    <Link href=\"./help/privacy-statement\"><a>Privacy Statement</a></Link>\r\n                                                                </span>\r\n                                                            </Form.Label>\r\n                                                        </Form.Group>\r\n                                                    </Col>\r\n                                                    <Form.Group as={Col} lg={4} controlId=\"loginGrop\">\r\n                                                        <Form.Label className=\"text-center\" style={styles.label}>\r\n                                                            Already have an account...\r\n                                                            <span>\r\n                                                                <Link href=\"login\"><a>Login</a></Link>\r\n                                                            </span>\r\n                                                        </Form.Label>\r\n                                                        <Button type=\"submit\" onSubmit={handleSubmit} block style={styles.submit_btn}>Signup</Button>\r\n                                                    </Form.Group>\r\n                                                </Form.Row>\r\n                                                {/* End 4th Row */}\r\n                                            </Form>\r\n                                        </Col>\r\n                                        <Col lg={1} md={1} sm={0} xs={0} style={styles.side_column}></Col>\r\n                                    </Row>\r\n                                </Container>\r\n                                <style jsx>\r\n                                    {`\r\n                                        span {\r\n                                            color: red;\r\n                                        }\r\n                                        p {\r\n                                            text-align: center; \r\n                                            margin: 0px;\r\n                                        }\r\n                                    `}\r\n                                </style>\r\n                            </div>\r\n                        )}\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    body: {\r\n        background: `${GlobalStyleSheet.body_color}`,\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        right: '0',\r\n        bottom: '-100',\r\n\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    submit_btn: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n    },\r\n    center_column: {\r\n        background: 'white',\r\n        // border: `0.5px solid ${GlobalStyleSheet.primry_color}`,\r\n        padding: '20px 30px',\r\n        margin: '3% 3%',\r\n    },\r\n    side_column: {\r\n        margin: '0 2%',\r\n    },\r\n    label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\n\r\nexport default Signup;","// export default class MuhalikConfig {\r\n    // const path = 'https://muhalik.herokuapp.com';\r\n    const path = 'http://localhost:5000';\r\n  \r\n//     static getPath() {\r\n//       return MySouqConfig.path;\r\n//     }\r\n//   }\r\n\r\nconst MuhalikConfig = {\r\n    PATH: path,\r\n}\r\n\r\nexport default MuhalikConfig;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAYA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAIA;AAEA;AAGA;AAIA;AACA;AAAA;AAAA;AACA;AAFA;AAQA;AACA;AACA;AA3BA;AACA;AA6BA;;;;;;;;;;;;;;;;AAEA;AACA;AADA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAnBA;AAshSA;AACA;AAkSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AArCA;AA8CA;;;;;;;;;;;;AC/0BA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}