{"version":3,"file":"static/webpack/static\\development\\pages\\vendor.js.f4e76bbcd06e4044d5f5.hot-update.js","sources":["webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\n// import ViewProduct from './all-products-contents/view-product'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\nimport CardAccordion from '../../../../card_accordion';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\nimport TitleRow from '../../../../title-row';\r\nclass AllProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productsArray: [],\r\n            viewProduct: false,\r\n            data: {},\r\n        }\r\n    }\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products/';\r\n        try {\r\n            const response = await axios.get(url);\r\n            console.log('data:', response.data.data.docs)\r\n            this.setState({ productsArray: response.data.data.docs })\r\n        } catch (error) {\r\n            console.log('Data Fetching Eror:', error);\r\n        }\r\n    }\r\n\r\n    handleViewProduct(index) {\r\n        // let dataa;\r\n        // Simple Product\r\n        // if (i == -1) {\r\n        this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n\r\n        // } else { // Variable Product\r\n        // dataa = Object.assign([], this.state.productsArray[index])\r\n        // dataa.product_variations = dataa.product_variations[i];\r\n        //     this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n        // }\r\n        // console.log('datadata:', data)\r\n        // Router.push({\r\n        //     pathname: '/view-product',\r\n        //     query: { data: data },\r\n        // }, '/vendor/view-product?' + data.product_name);\r\n    }\r\n\r\n    isVariableProduct(element) {\r\n        if (element.product_type != \"simple-product\") {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.viewProduct ?\r\n                    <ViewProduct\r\n                        data={this.state.data}\r\n                        back={() => this.setState({ viewProduct: false, data: {} })}\r\n                        isVariableProduct={this.state.data.product_type != \"simple-product\"}\r\n                    />\r\n                    :\r\n                    <>\r\n                        <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\r\n\r\n                        <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n                            <Table responsive bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{ textAlign: 'center' }}>\r\n                                            <Form.Check type=\"checkbox\" />\r\n                                        </th>\r\n                                        <th style={{ textAlign: 'center' }}>Name</th>\r\n                                        <th style={{ textAlign: 'center' }}>SKU</th>\r\n                                        <th style={{ textAlign: 'center' }}>Stock</th>\r\n                                        <th style={{ textAlign: 'center' }}>Price</th>\r\n                                        <th style={{ textAlign: 'center' }}>Categories</th>\r\n                                        <th style={{ textAlign: 'center' }}>Tags</th>\r\n                                        <th style={{ textAlign: 'center' }}>Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productsArray && this.state.productsArray.map((element, index) =>\r\n                                        <>\r\n                                            {this.isVariableProduct(element) ?\r\n                                                <tr key={index}>\r\n                                                    <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n                                                    <td className=\"td\">\r\n                                                        {element.product_name}\r\n                                                        <div className=\"mr-auto\"></div>\r\n                                                        <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}> View </Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link}>Delete</Nav.Link>\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.product_price}</td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_category && element.product_category.map(e =>\r\n                                                            e.value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_tags && element.product_tags.map(e =>\r\n                                                            e.value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_entry_date}\r\n                                                    </td>\r\n                                                </tr>\r\n                                                :\r\n                                                <>\r\n                                                    <tr>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            <Form.Check type=\"checkbox\" />\r\n                                                        </td>\r\n                                                        <td className=\"td\">\r\n                                                            {element.product_name}\r\n                                                            <div className=\"mr-auto\"></div>\r\n                                                            <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}>View</Nav.Link>\r\n                                                            <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n                                                            <Nav.Link style={styles.nav_link}>Delete</Nav.Link>\r\n                                                        </td>\r\n                                                        <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            {element.product_variations.map(e =>\r\n                                                                e.item[e.item.length - 2].value + ','\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            {element.product_variations.map(e =>\r\n                                                                e.item[e.item.length - 3].value + ','\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            {element.product_category && element.product_category.map(e =>\r\n                                                                e.value + ','\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            {element.product_tags && element.product_tags.map(e =>\r\n                                                                e.value + ','\r\n                                                            )}\r\n                                                        </td>\r\n                                                        <td align=\"center\" style={styles.label}>\r\n                                                            {element.product_entry_date}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Row >\r\n                    </>\r\n                }\r\n                <style jsx>\r\n                    {`\r\n                        .td {\r\n                            display: flex;\r\n                            flex-direction: row;\r\n                            align-items: center;\r\n                            font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n                        }\r\n                    `}\r\n                </style>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst ViewProduct = props => {\r\n    const [imgPreview, setImgPreview] = React.useState(false);\r\n    const [index, setIndex] = React.useState('')\r\n    const [imgData, setImgData] = React.useState('')\r\n    console.log('1111111:', props.data)\r\n\r\n    const len = props.data.product_image_link.length;\r\n\r\n    function prevImage() {\r\n        if (index > 0) {\r\n            setIndex(index - 1)\r\n        }\r\n    }\r\n\r\n    function nextImage() {\r\n        if (index < (len - 1)) {\r\n            setIndex(index + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\r\n            <Form.Row style={{ margin: '2%' }} >\r\n                <FontAwesomeIcon className=\"fontawesome\" icon={faArrowLeft} style={styles.fontawesome} onClick={props.back} className=\"mr-auto\" />\r\n                <div className=\"mr-auto\" style={styles.title}> {props.data.product_name}</div>\r\n                <div style={styles.title}> Prev </div>\r\n                <div style={styles.title}> Next </div>\r\n            </Form.Row>\r\n            <CardAccordion title={'General Info'}>\r\n                <Row>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Product Name:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Brand Name:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>SKU:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Warranty (month):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Warranty Type:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Discount (%):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control as=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Description:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Row>\r\n            </CardAccordion>\r\n\r\n            {props.isVariableProduct ?\r\n                <CardAccordion title={'Product Variations'}>\r\n                    {props.data.product_variations && props.data.product_variations.map(element =>\r\n                        <>\r\n                            <Row >\r\n                                {element.item.map(e =>\r\n                                    <>\r\n                                        <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                            <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        {e.img_link && e.img_link.map((img, i) =>\r\n                                            <Row>\r\n                                                <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={img.value} alt=\"Product Image\"\r\n                                                    onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\r\n                                            </Row>\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </Row>\r\n                            <hr />\r\n                        </>\r\n                    )}\r\n                </CardAccordion>\r\n                :\r\n                <CardAccordion title={'Product Images'}>\r\n                    {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\r\n                        <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={element.value}\r\n                            alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\r\n                    )}\r\n                </CardAccordion>\r\n            }\r\n            <CardAccordion title={'Shipping Details'}>\r\n                <Row>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Length (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Width (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Height (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Weight (kg):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Row>\r\n            </CardAccordion>\r\n            <CardAccordion title={'Product Categories'}>\r\n                <Form.Group>\r\n                    <Form.Label size=\"sm\">Product Categories</Form.Label>\r\n                    <InputGroup>\r\n                        {props.data.product_category && props.data.product_category.map(element =>\r\n                            <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n                        )}\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label size=\"sm\">Product Tags</Form.Label>\r\n                    <InputGroup>\r\n                        {props.data.product_tags && props.data.product_tags.map(element =>\r\n                            <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n                        )}\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label>Dangerous Goods</Form.Label>\r\n                    <InputGroup>\r\n                        {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\r\n                            <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n                        )}\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </CardAccordion>\r\n\r\n            {/* Image Preview */}\r\n            {imgPreview ?\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"close-modal\">\r\n                            <div className=\"mr-auto\"></div>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\r\n                                onClick={() => prevImage} />\r\n                            <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\r\n                                onClick={nextImage} />\r\n                            <div className=\"mr-auto\"></div>\r\n                            <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\r\n                                onClick={() => setImgPreview(false)} />\r\n                        </div>\r\n                        <div className=\"image-container\">\r\n                            <img\r\n                                src={imgData[index].value}\r\n                                style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                : null\r\n            }\r\n            <style jsx>\r\n                {`\r\n                   .modal-overlay {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        bottom: 0;\r\n                        right: 0;\r\n                        z-index: 10;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        background: rgba(21, 21, 21, 0.75);\r\n                    }\r\n                     .modal-body {\r\n                        position: relative;\r\n                        z-index: 11;\r\n                        margin: 2.5%;\r\n                        overflow: hidden;\r\n                        max-width: 100%;\r\n                        max-height: 100%;\r\n                    }\r\n                    .close-modal {\r\n                        position: fixed;\r\n                        display: flex;\r\n                        top: 10px;\r\n                        left: 0;\r\n                        right: 0;\r\n                        width: 100%;\r\n                    }\r\n                    .image-container {\r\n                        display: grid;\r\n                        height: 100%;\r\n                        // display: flex;\r\n                        // justify-content: center;\r\n                        // align-items: center;\r\n                    }\r\n                `}\r\n            </style>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    nav_link: {\r\n        paddingLeft: '10px',\r\n        paddingRight: '5px',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '2%'\r\n    },\r\n    row: {\r\n        margin: '2%', padding: '0%'\r\n    },\r\n    img_preview_fontawesome: {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        fontWeight: 'lighter',\r\n        width: '30px',\r\n        height: '30px',\r\n        maxHeight: '30px',\r\n        maxWidth: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    general_info_label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        width: '100%',\r\n        borderBottom: '1px solid gray'\r\n    },\r\n    field_label: {\r\n        border: `1px solid ${GlobalStyleSheet.body_color}`,\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        margin: '0%',\r\n        width: '100%',\r\n        padding: '2px 5px'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n        border: '1px solid lightgray'\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n}\r\n\r\nexport default AllProducts;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAOA;AACA;AACA;;;;;;;;;AACA;;;AAEA;AACA;;AADA;AACA;AACA;AAAA;AAAA;;;;;;;AAEA;AACA;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/DA;AA5BA;AAAA;AAAA;AAAA;AAoHA;;;;AArKA;AACA;AAwiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApBA;AAyzLA;AAAA;AAAA;AA0OA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AAHA;AAMA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAOA;;;;A","sourceRoot":""}