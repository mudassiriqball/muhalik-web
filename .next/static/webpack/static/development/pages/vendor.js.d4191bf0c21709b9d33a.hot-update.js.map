{"version":3,"file":"static/webpack/static\\development\\pages\\vendor.js.d4191bf0c21709b9d33a.hot-update.js","sources":["webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Modal, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n// import ViewProduct from './all-products-contents/view-product'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\nimport CardAccordion from '../../../../card_accordion';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\nimport TitleRow from '../../../../title-row';\r\nimport AddNew from './add-new'\r\nimport AlertModal from '../../../../alert-modal'\r\n\r\nclass AllProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            confirmDeleteProduct: false,\r\n            showToast: false,\r\n            productsArray: [],\r\n            showProduct: false,\r\n            data: {},\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products/'\r\n        const currentComponent = this\r\n\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            console.log('data:', response.data.data)\r\n            currentComponent.setState({ productsArray: response.data.data })\r\n        }).catch((error) => {\r\n            alert('Data Fetchig Error: ', error)\r\n        });\r\n    }\r\n\r\n\r\n    handleEditProduct(index) {\r\n        console.log('edit called')\r\n        let element = []\r\n        if (index == -1) {\r\n            element = this.state.data\r\n        } else {\r\n            element = this.state.productsArray[index]\r\n        }\r\n        if (element.product_type != 'simple-product') {\r\n            let array = [];\r\n            let variations = element.product_variations\r\n            variations.forEach((element, i) => {\r\n                array.push({\r\n                    item: element.item, price: element.price, stock: element.stock, image_link: element.image_link,\r\n                    price_error: '', stock_error: '', image_link_error: '', custom_fields: element.custom_fields\r\n                })\r\n            })\r\n            element.product_variations = array\r\n        } else {\r\n            element.product_variations = []\r\n        }\r\n\r\n        this.setState({ data: element, showProduct: 'edit' })\r\n\r\n    }\r\n\r\n    async handleDeleteProduct() {\r\n        const url = MuhalikConfig.PATH + `/api/products/${_id}`;\r\n        const _id = this.state.data._id;\r\n        const currentComponent = this\r\n\r\n        await axios.delete(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            copyArray.forEach((element, i) => {\r\n                if (element._id == _id) {\r\n                    array.splice(i, 1)\r\n                }\r\n            })\r\n            currentComponent.setState({ productsArray: array, showToast: true })\r\n        }).catch(function (error) {\r\n            try {\r\n                alert('Error Message: ', error.response.data.message);\r\n            } catch (err) {\r\n                alert('Error: ', error);\r\n            }\r\n        });\r\n    }\r\n\r\n    isVariableProduct(element) {\r\n        if (element.product_type != \"simple-product\") {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    renderSwitch(param) {\r\n        switch (param) {\r\n            case 'view':\r\n                return <ViewProduct\r\n                    data={this.state.data}\r\n                    back={() => this.setState({ showProduct: false, data: {} })}\r\n                    isVariableProduct={this.state.data.product_type != \"simple-product\"}\r\n                    delete={() => this.setState({ confirmDeleteProduct: true })}\r\n                    edit={() => this.handleEditProduct(-1)}\r\n                />\r\n                break;\r\n            case 'edit':\r\n                return <AddNew\r\n                    title={'Vendor Dashboard / All Products / Update'}\r\n                    isUpdateProduct={true}\r\n                    _id={this.state.data._id}\r\n                    isVariableProduct={this.state.data.product_type != 'simple-product'}\r\n\r\n                    back={() => this.setState({ showProduct: false, data: {} })}\r\n                    view={() => this.setState({ showProduct: 'view' })}\r\n                    delete={() => this.handleDeleteProduct(-1)}\r\n\r\n                    productCategories={this.state.data.product_category}\r\n                    productSubCategories={this.state.data.product_sub_category}\r\n\r\n                    productTags={this.state.data.product_tags}\r\n                    warrantyType={this.state.data.warranty_type}\r\n                    simple_product_image_link={this.state.data.product_image_link}\r\n                    variationsArray={this.state.data.product_variations}\r\n                    dangerousGoodsArray={this.state.data.dangerous_goods}\r\n\r\n                    product_name={this.state.data.product_name}\r\n                    product_description={this.state.data.product_description}\r\n                    product_type={'variable-product'}\r\n                    product_type={this.state.data.product_type}\r\n                    sku={this.state.data.sku}\r\n                    product_price={this.state.data.product_price}\r\n                    product_in_stock={this.state.data.product_in_stock}\r\n                    product_brand_name={this.state.data.product_brand_name}\r\n\r\n                    product_warranty={this.state.data.product_warranty}\r\n                    warranty_type={this.state.data.warranty_type}\r\n                    product_discount={this.state.data.product_discount}\r\n                    purchase_note={this.state.data.purchase_note}\r\n                    product_weight={this.state.data.product_weight}\r\n                    dimension_length={this.state.data.dimension_length}\r\n                    dimension_width={this.state.data.dimension_width}\r\n                    dimension_height={this.state.data.dimension_height}\r\n                    shipping_charges={this.state.data.shipping_charges}\r\n                    handling_fee={this.state.data.handling_fee}\r\n                />\r\n                break;\r\n            default:\r\n                return <>\r\n                    <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\r\n                    <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n                        <Table responsive bordered hover size=\"sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={{ textAlign: 'center' }}>\r\n                                        <Form.Check type=\"checkbox\" />\r\n                                    </th>\r\n                                    <th style={{ textAlign: 'center' }}>Name</th>\r\n                                    <th style={{ textAlign: 'center' }}>Product Type</th>\r\n                                    <th style={{ textAlign: 'center' }}>SKU</th>\r\n                                    <th style={{ textAlign: 'center' }}>Stock</th>\r\n                                    <th style={{ textAlign: 'center' }}>Price</th>\r\n                                    <th style={{ textAlign: 'center' }}>Categories</th>\r\n                                    <th style={{ textAlign: 'center' }}>Tags</th>\r\n                                    <th style={{ textAlign: 'center' }}>Date</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.productsArray && this.state.productsArray.map((element, index) =>\r\n                                    <>\r\n                                        {this.isVariableProduct(element) ?\r\n                                            <tr key={index}>\r\n                                                <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n                                                <td className=\"td\">\r\n                                                    {element.product_name}\r\n                                                    <div className=\"mr-auto\"></div>\r\n                                                    <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}> View </Nav.Link>\r\n                                                    <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\r\n                                                    <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, confirmDeleteProduct: true, showProduct: false })}>Delete</Nav.Link>\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>{element.product_type}</td>\r\n                                                <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_variations.map(e =>\r\n                                                        e.stock + ','\r\n                                                    )}\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_variations.map(e =>\r\n                                                        e.price + ','\r\n                                                    )}\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_category.value + ' => ' + element.product_sub_category.value}\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_tags && element.product_tags.map(e =>\r\n                                                        e.value + ','\r\n                                                    )}\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_entry_date}\r\n                                                </td>\r\n                                            </tr>\r\n                                            :\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        <Form.Check type=\"checkbox\" />\r\n                                                    </td>\r\n                                                    <td className=\"td\">\r\n                                                        {element.product_name}\r\n                                                        <div className=\"mr-auto\"></div>\r\n                                                        <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}>View</Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, confirmDeleteProduct: true, showProduct: false })}>Delete</Nav.Link>\r\n                                                        {/* <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link> */}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.product_type}</td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_in_stock}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_price}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_category.value + ' => ' + element.product_sub_category.value}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_tags && element.product_tags.map(e =>\r\n                                                            e.value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_entry_date}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                        }\r\n                                    </>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Row >\r\n                    <style jsx >\r\n                        {`\r\n                        .td {\r\n                            display: flex;\r\n                            flex-direction: row;\r\n                            align-items: center;\r\n                            font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n                        }\r\n                    `}\r\n                    </style>\r\n                </>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ConfirmDeleteModal\r\n                    onHide={() => this.setState({ confirmDeleteProduct: false })}\r\n                    show={this.state.confirmDeleteProduct}\r\n                    _id={this.state.data._id}\r\n                    product_name={this.state.data.product_name}\r\n                    confirmDelete={() => { this.handleDeleteProduct.bind(this), this.setState({ confirmDeleteProduct: false }) }}\r\n                />\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showToast: false })}\r\n                    show={this.state.showToast}\r\n                    header={'Success'}\r\n                    message={'Product Deleted Successfully.'}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <div>\r\n                    {this.renderSwitch(this.state.showProduct)}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst ViewProduct = props => {\r\n    const [imgPreview, setImgPreview] = React.useState(false);\r\n    const [index, setIndex] = React.useState('')\r\n    const [imgData, setImgData] = React.useState('')\r\n\r\n    const len = props.data.product_image_link.length;\r\n\r\n    function prevImage() {\r\n        if (index > 0) {\r\n            setIndex(index - 1)\r\n        }\r\n    }\r\n\r\n    function nextImage() {\r\n        if (index < (len - 1)) {\r\n            setIndex(index + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\r\n            <Form.Row style={{ margin: ' 0% 2%', display: 'flex', alignItems: 'center' }} >\r\n                <Nav.Link style={{ fontSize: '14px' }} className=\"mr-auto\" onClick={props.back}>Back</Nav.Link>\r\n                <div className=\"mr-auto\" style={{ fontSize: '14px' }}> {props.data.product_name}</div>\r\n                <Nav.Link style={{ fontSize: '14px' }} onClick={props.edit}> Edit </Nav.Link>\r\n                <Nav.Link style={{ fontSize: '14px' }} onClick={props.delete}> Delete </Nav.Link>\r\n            </Form.Row>\r\n            <CardAccordion title={'General Info'}>\r\n                <Row>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Product Name:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Brand Name:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>SKU:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    {props.isVariableProduct ?\r\n                        null :\r\n                        <>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <Form.Label style={styles.label}>Price:</Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <Form.Label style={styles.label}>Product In Stock:</Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                        </>\r\n                    }\r\n\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Warranty (month):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Warranty Type:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Discount (%):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Description:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Row>\r\n            </CardAccordion>\r\n\r\n            {props.isVariableProduct ?\r\n                <CardAccordion title={'Product Variations'}>\r\n                    {props.data.product_variations && props.data.product_variations.map(element =>\r\n                        <>\r\n                            <Row >\r\n                                <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                    <Form.Label style={styles.label}>Price</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                    <Form.Label style={styles.label}>Stock</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                {element.item && element.item.map(e =>\r\n                                    <>\r\n                                        <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                            <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </>\r\n                                )}\r\n                                {element.custom_fields && element.custom_fields.map(e =>\r\n                                    <>\r\n                                        <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                            <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </>\r\n                                )}\r\n                                {/* {element.image_link && element.image_link.map((img, i) =>\r\n                                    <Row>\r\n                                        <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\r\n                                            onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\r\n                                    </Row>\r\n                                )} */}\r\n                            </Row>\r\n                            <hr />\r\n                        </>\r\n                    )}\r\n                </CardAccordion>\r\n                :\r\n                <>\r\n                    <CardAccordion title={'Custom Fields'}>\r\n                        {props.data.custom_fields && props.data.custom_fields.map(element =>\r\n                            <Row>\r\n                                <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n                                    <Form.Label style={styles.label}>{element.name}</Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control type=\"text\" size=\"sm\" value={element.value} disabled={true} />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                            </Row>\r\n                        )}\r\n                    </CardAccordion>\r\n                    <CardAccordion title={'Product Images'}>\r\n                        {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\r\n                            <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id=${element.value}`}\r\n                                alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\r\n                        )}\r\n                    </CardAccordion>\r\n                </>\r\n            }\r\n            <CardAccordion title={'Shipping Details'}>\r\n                <Row>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Length (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Width (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Height (cm):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Weight (kg):</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                        <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                </Row>\r\n            </CardAccordion>\r\n            <CardAccordion title={'Product Categories'}>\r\n                <Form.Group>\r\n                    <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Categories:</Form.Label>\r\n                    <InputGroup>\r\n                        <Form.Label style={styles.label}>\r\n                            {props.data.product_category.value + ' => ' + props.data.product_sub_category.value}\r\n                        </Form.Label>\r\n                    </InputGroup>\r\n                </Form.Group >\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Tags:</Form.Label>\r\n                    <InputGroup>\r\n                        {props.data.product_tags && props.data.product_tags.map(element =>\r\n                            <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n                        )}\r\n                    </InputGroup>\r\n                </ Form.Group >\r\n                <hr />\r\n                <Form.Group>\r\n                    <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Dangerous Goods:</Form.Label>\r\n                    <InputGroup>\r\n                        {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\r\n                            <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n                        )}\r\n                    </InputGroup>\r\n                </Form.Group>\r\n            </CardAccordion >\r\n\r\n            {/* Image Preview */}\r\n            {\r\n                imgPreview ?\r\n                    <div className=\"modal-overlay\">\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"close-modal\">\r\n                                <div className=\"mr-auto\"></div>\r\n                                <div className=\"mr-auto\"></div>\r\n                                <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\r\n                                    onClick={() => prevImage} />\r\n                                <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\r\n                                    onClick={nextImage} />\r\n                                <div className=\"mr-auto\"></div>\r\n                                <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\r\n                                    onClick={() => setImgPreview(false)} />\r\n                            </div>\r\n                            <div className=\"image-container\">\r\n                                <img\r\n                                    src={imgData[index].value}\r\n                                    style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n            }\r\n            <style jsx>\r\n                {`\r\n                   .modal-overlay {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        bottom: 0;\r\n                        right: 0;\r\n                        z-index: 10;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        background: rgba(21, 21, 21, 0.75);\r\n                    }\r\n                     .modal-body {\r\n                        position: relative;\r\n                        z-index: 11;\r\n                        margin: 2.5%;\r\n                        overflow: hidden;\r\n                        max-width: 100%;\r\n                        max-height: 100%;\r\n                    }\r\n                    .close-modal {\r\n                        position: fixed;\r\n                        display: flex;\r\n                        top: 10px;\r\n                        left: 0;\r\n                        right: 0;\r\n                        width: 100%;\r\n                    }\r\n                    .image-container {\r\n                        display: grid;\r\n                        height: 100%;\r\n                        // display: flex;\r\n                        // justify-content: center;\r\n                        // align-items: center;\r\n                    }\r\n                `}\r\n            </style>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    nav_link: {\r\n        paddingLeft: '10px',\r\n        paddingRight: '5px',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '2%'\r\n    },\r\n    row: {\r\n        margin: '2%', padding: '0%'\r\n    },\r\n    img_preview_fontawesome: {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        fontWeight: 'lighter',\r\n        width: '30px',\r\n        height: '30px',\r\n        maxHeight: '30px',\r\n        maxWidth: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    general_info_label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        width: '100%',\r\n        borderBottom: '1px solid gray'\r\n    },\r\n    field_label: {\r\n        border: `1px solid ${GlobalStyleSheet.body_color}`,\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        margin: '0%',\r\n        width: '100%',\r\n        padding: '2px 5px'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n        border: '1px solid lightgray'\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n}\r\n\r\nexport default AllProducts;\r\n\r\n\r\nfunction ConfirmDeleteModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"alert-modal\"\r\n            centered\r\n        >\r\n            <div style={{\r\n                border: '1px solid #ff3333', borderRadius: '5px'\r\n            }}>\r\n                <Modal.Header closeButton style={{ color: '#ff3333', borderBottom: '1px solid #ff3333' }}>\r\n                    <FontAwesomeIcon icon={faTrash} style={{\r\n                        color: '#ff3333',\r\n                        marginRight: '10px',\r\n                        width: '35px',\r\n                        height: '35px',\r\n                        maxHeight: '35px',\r\n                        maxWidth: '35px',\r\n                    }} ></FontAwesomeIcon>\r\n                    <Modal.Title id=\"alert-modal\">\r\n                        {'Delete Product ?'}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body >\r\n                    <Form.Label style={{ fontSize: '14px', padding: '0%', margin: '0%' }}>\r\n                        {`Product Name: ${props.product_name}`}\r\n                        {`Product ID: ${props._id}`}\r\n                    </Form.Label>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button size=\"sm\" variant='outline-danger' className='mr-auto' onClick={() => { props.confirmDelete, props.onHide }}>Confirm</Button>\r\n                    <Button size=\"sm\" variant='outline-primary' onClick={props.onHide}>Cancel</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\n// import React, { Component } from 'react';\r\n\r\n// import CreatableSelect from 'react-select/creatable';\r\n// const colourOptions = [{ label: '111', value: '111' }]\r\n\r\n// export default class AllProducts extends Component {\r\n//     handleChange = (newValue) => {\r\n//         console.log('Value Changed', newValue);\r\n//     };\r\n\r\n//     render() {\r\n//         return (\r\n//             <CreatableSelect\r\n//                 isMulti\r\n//                 onChange={this.handleChange}\r\n//                 options={colourOptions}\r\n//             />\r\n//         );\r\n//     }\r\n// }"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAFA;AASA;AACA;;;;;;;;;AAEA;AACA;;AAEA;AAAA;;AACA;AACA;;;;AADA;;;AAAA;;AADA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;AAGA;AACA;AACA;;AAEA;AAAA;;AACA;AACA;;;;AADA;;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AArBA;AAAA;AAAA;AAAA;AAAA;AAulEA;AApBA;AAAA;AAAA;AAAA;AApDA;AAiKA;;;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA/QA;AACA;AAkiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1CA;AAghPA;AAAA;AAAA;AAiSA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AASA;AACA;AACA;AAHA;AAMA;AAAA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAFA;AAKA;AACA;AACA;AAHA;AAOA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}