{"version":3,"file":"static/webpack/static\\development\\pages\\vendor.js.b59c51c66d61312bc1f4.hot-update.js","sources":["webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js","webpack:///./src/sdk/consts/fields-data.js"],"sourcesContent":["\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { colourOptions, groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nconst groupStyles = {\r\n    border: `2px dotted yellow`,\r\n    borderRadius: '5px',\r\n    background: '#f2fcff',\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        {/* <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.fieldName}\r\n                                            onChange={() => data.customFieldName}\r\n                                        >\r\n                                            <option>Aaaa</option>\r\n                                            <option>Bbb</option>\r\n                                            <option>Ccc</option>\r\n                                        </Form.Control> */}\r\n                                        <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.customFieldValue}\r\n                                                onChange={() => data.fieldValue}\r\n                                            />\r\n                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                        <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                            <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                {/* <Form.Control\r\n                                    as=\"select\"\r\n                                    size=\"sm\"\r\n                                    value={props.name}\r\n                                    onChange={props.fieldNameHandler}\r\n                                >\r\n                                    <option>Select</option>\r\n                                    <option>Aaaa</option>\r\n                                    <option>Bbb</option>\r\n                                    <option>Ccc</option>\r\n                                </Form.Control> */}\r\n                                <Select\r\n                                    options={groupedOptions}\r\n                                    components={{ Group }}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Value\"\r\n                                        name=\"sku\"\r\n                                        value={props.value}\r\n                                        onChange={props.fieldValueHandler}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Label style={styles.label}>\r\n                                {/* <span>For Multiple Values add | between values</span> */}\r\n                                {props.isVariableProduct ?\r\n                                    <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                    : null\r\n                                }\r\n                                <span style={{ color: 'red' }}>\r\n                                    {props.error}</span>\r\n                            </Form.Label>\r\n                            <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                onClick={props.addFieldHandler}>Add Field</Button>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;","export const colourOptions = [\r\n    { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n    { value: 'blue', label: 'Blue', color: '#0052CC', isDisabled: true },\r\n    { value: 'purple', label: 'Purple', color: '#5243AA' },\r\n    { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\r\n    { value: 'orange', label: 'Orange', color: '#FF8B00' },\r\n    { value: 'yellow', label: 'Yellow', color: '#FFC400' },\r\n    { value: 'green', label: 'Green', color: '#36B37E' },\r\n    { value: 'forest', label: 'Forest', color: '#00875A' },\r\n    { value: 'slate', label: 'Slate', color: '#253858' },\r\n    { value: 'silver', label: 'Silver', color: '#666666' },\r\n];\r\n\r\nexport const flavourOptions = [\r\n    { value: 'vanilla', label: 'Vanilla', rating: 'safe' },\r\n    { value: 'chocolate', label: 'Chocolate', rating: 'good' },\r\n    { value: 'strawberry', label: 'Strawberry', rating: 'wild' },\r\n    { value: 'salted-caramel', label: 'Salted Caramel', rating: 'crazy' },\r\n];\r\n\r\nexport const stateOptions = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'DC', label: 'District Of Columbia' },\r\n    { value: 'FM', label: 'Federated States Of Micronesia' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'HI', label: 'Hawaii' },\r\n    { value: 'ID', label: 'Idaho' },\r\n    { value: 'IL', label: 'Illinois' },\r\n    { value: 'IN', label: 'Indiana' },\r\n    { value: 'IA', label: 'Iowa' },\r\n    { value: 'KS', label: 'Kansas' },\r\n    { value: 'KY', label: 'Kentucky' },\r\n    { value: 'LA', label: 'Louisiana' },\r\n    { value: 'ME', label: 'Maine' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MD', label: 'Maryland' },\r\n    { value: 'MA', label: 'Massachusetts' },\r\n    { value: 'MI', label: 'Michigan' },\r\n    { value: 'MN', label: 'Minnesota' },\r\n    { value: 'MS', label: 'Mississippi' },\r\n    { value: 'MO', label: 'Missouri' },\r\n    { value: 'MT', label: 'Montana' },\r\n    { value: 'NE', label: 'Nebraska' },\r\n    { value: 'NV', label: 'Nevada' },\r\n    { value: 'NH', label: 'New Hampshire' },\r\n    { value: 'NJ', label: 'New Jersey' },\r\n    { value: 'NM', label: 'New Mexico' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'NC', label: 'North Carolina' },\r\n    { value: 'ND', label: 'North Dakota' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'OH', label: 'Ohio' },\r\n    { value: 'OK', label: 'Oklahoma' },\r\n    { value: 'OR', label: 'Oregon' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PA', label: 'Pennsylvania' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'RI', label: 'Rhode Island' },\r\n    { value: 'SC', label: 'South Carolina' },\r\n    { value: 'SD', label: 'South Dakota' },\r\n    { value: 'TN', label: 'Tennessee' },\r\n    { value: 'TX', label: 'Texas' },\r\n    { value: 'UT', label: 'Utah' },\r\n    { value: 'VT', label: 'Vermont' },\r\n    { value: 'VI', label: 'Virgin Islands' },\r\n    { value: 'VA', label: 'Virginia' },\r\n    { value: 'WA', label: 'Washington' },\r\n    { value: 'WV', label: 'West Virginia' },\r\n    { value: 'WI', label: 'Wisconsin' },\r\n    { value: 'WY', label: 'Wyoming' },\r\n];\r\n\r\nexport const optionLength = [\r\n    { value: 1, label: 'general' },\r\n    {\r\n        value: 2,\r\n        label:\r\n            'Evil is the moment when I lack the strength to be true to the Good that compels me.',\r\n    },\r\n    {\r\n        value: 3,\r\n        label:\r\n            \"It is now an easy matter to spell out the ethic of a truth: 'Do all that you can to persevere in that which exceeds your perseverance. Persevere in the interruption. Seize in your being that which has seized and broken you.\",\r\n    },\r\n];\r\n\r\nexport const dogOptions = [\r\n    { id: 1, label: 'Chihuahua' },\r\n    { id: 2, label: 'Bulldog' },\r\n    { id: 3, label: 'Dachshund' },\r\n    { id: 4, label: 'Akita' },\r\n];\r\n\r\n// let bigOptions = [];\r\n// for (let i = 0; i < 10000; i++) {\r\n// \tbigOptions = bigOptions.concat(colourOptions);\r\n// }\r\n\r\nexport const groupedOptions = [\r\n    {\r\n        label: 'Colours',\r\n        options: colourOptions,\r\n    },\r\n    {\r\n        label: 'Flavours',\r\n        options: flavourOptions,\r\n    },\r\n    ,\r\n    {\r\n        label: 'States',\r\n        options: stateOptions,\r\n    },\r\n];"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAmCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAalBA;AA2BA;;;;;;;;;;;;ACpsourceRoot":""}