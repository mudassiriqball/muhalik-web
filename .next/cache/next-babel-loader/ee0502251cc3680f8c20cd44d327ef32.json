{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n// import React, { Component } from 'react';\n// import { Row, Modal, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\n// import axios from 'axios'\n// import { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\n// // import ViewProduct from './all-products-contents/view-product'\n// import Link from 'next/link'\n// import Router from 'next/router'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH, faTrash } from '@fortawesome/free-solid-svg-icons';\n// import { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n// import CardAccordion from '../../../../card_accordion';\n// import MuhalikConfig from '../../../../../../sdk/muhalik.config'\n// import GlobalStyleSheet from '../../../../../../styleSheet'\n// import TitleRow from '../../../../title-row';\n// import AddNew from './add-new'\n// import AlertModal from '../../../../alert-modal'\n// class AllProducts extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             showConfirmDeleteModal: false,\n//             showToast: false,\n//             productsArray: [],\n//             showProduct: false,\n//             data: {},\n//         }\n//     }\n//     async componentDidMount() {\n//         const url = MuhalikConfig.PATH + '/api/products/'\n//         const currentComponent = this\n//         await axios.get(url, {\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         }).then((response) => {\n//             console.log('data:', response.data.data)\n//             currentComponent.setState({ productsArray: response.data.data })\n//         }).catch((error) => {\n//             alert('Data Fetchig Error: ', error)\n//         });\n//     }\n//     handleEditProduct(index) {\n//         console.log('edit called')\n//         let element = []\n//         if (index == -1) {\n//             element = this.state.data\n//         } else {\n//             element = this.state.productsArray[index]\n//         }\n//         if (element.product_type != 'simple-product') {\n//             let array = [];\n//             let variations = element.product_variations\n//             variations.forEach((element, i) => {\n//                 array.push({\n//                     item: element.item, price: element.price, stock: element.stock, image_link: element.image_link,\n//                     price_error: '', stock_error: '', image_link_error: '', custom_fields: element.custom_fields\n//                 })\n//             })\n//             element.product_variations = array\n//         } else {\n//             element.product_variations = []\n//         }\n//         this.setState({ data: element, showProduct: 'edit' })\n//     }\n//     async handleDeleteProduct() {\n//         const _id = this.state.data._id;\n//         console.log('fuck fuck', _id)\n//         const url = MuhalikConfig.PATH + `/api/products/${_id}`;\n//         this.setState({ showConfirmDeleteModal: false })\n//         const currentComponent = this\n//         await axios.delete(url, {\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         }).then(function (response) {\n//             const copyArray = Object.assign([], currentComponent.state.productsArray)\n//             let array = copyArray\n//             copyArray.forEach((element, i) => {\n//                 if (element._id == _id) {\n//                     array.splice(i, 1)\n//                     return\n//                 }\n//             })\n//             currentComponent.setState({ productsArray: array, showToast: true })\n//         }).catch(function (error) {\n//             try {\n//                 alert('Error Message: ', error.response.data.message);\n//             } catch (err) {\n//                 console.log('Error: ', error);\n//             }\n//         });\n//     }\n//     isVariableProduct(element) {\n//         if (element.product_type != \"simple-product\") {\n//             return true\n//         } else {\n//             return false\n//         }\n//     }\n//     renderSwitch(param) {\n//         switch (param) {\n//             case 'view':\n//                 return <ViewProduct\n//                     data={this.state.data}\n//                     back={() => this.setState({ showProduct: false, data: {} })}\n//                     isVariableProduct={this.state.data.product_type != \"simple-product\"}\n//                     delete={() => this.setState({ showConfirmDeleteModal: true })}\n//                     edit={() => this.handleEditProduct(-1)}\n//                 />\n//                 break;\n//             case 'edit':\n//                 return <AddNew\n//                     title={'Vendor Dashboard / All Products / Update'}\n//                     isUpdateProduct={true}\n//                     _id={this.state.data._id}\n//                     isVariableProduct={this.state.data.product_type != 'simple-product'}\n//                     back={() => this.setState({ showProduct: false, data: {} })}\n//                     view={() => this.setState({ showProduct: 'view' })}\n//                     delete={() => this.setState({ showConfirmDeleteModal: true, showProduct: false })}\n//                     productCategories={this.state.data.product_category}\n//                     productSubCategories={this.state.data.product_sub_category}\n//                     productTags={this.state.data.product_tags}\n//                     warrantyType={this.state.data.warranty_type}\n//                     simple_product_image_link={this.state.data.product_image_link}\n//                     variationsArray={this.state.data.product_variations}\n//                     dangerousGoodsArray={this.state.data.dangerous_goods}\n//                     product_name={this.state.data.product_name}\n//                     product_description={this.state.data.product_description}\n//                     product_type={'variable-product'}\n//                     product_type={this.state.data.product_type}\n//                     sku={this.state.data.sku}\n//                     product_price={this.state.data.product_price}\n//                     product_in_stock={this.state.data.product_in_stock}\n//                     product_brand_name={this.state.data.product_brand_name}\n//                     product_warranty={this.state.data.product_warranty}\n//                     warranty_type={this.state.data.warranty_type}\n//                     product_discount={this.state.data.product_discount}\n//                     purchase_note={this.state.data.purchase_note}\n//                     product_weight={this.state.data.product_weight}\n//                     dimension_length={this.state.data.dimension_length}\n//                     dimension_width={this.state.data.dimension_width}\n//                     dimension_height={this.state.data.dimension_height}\n//                     shipping_charges={this.state.data.shipping_charges}\n//                     handling_fee={this.state.data.handling_fee}\n//                 />\n//                 break;\n//             default:\n//                 return <>\n//                     <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\n//                     <Row noGutters style={{ margin: '2%', background: 'white' }}>\n//                         <Table responsive bordered hover size=\"sm\">\n//                             <thead>\n//                                 <tr>\n//                                     <th style={{ textAlign: 'center' }}>#</th>\n//                                     <th style={{ textAlign: 'center' }}>Name</th>\n//                                     <th style={{ textAlign: 'center' }}>Product ID</th>\n//                                     <th style={{ textAlign: 'center' }}>Product Type</th>\n//                                     <th style={{ textAlign: 'center' }}>SKU</th>\n//                                     <th style={{ textAlign: 'center' }}>Stock</th>\n//                                     <th style={{ textAlign: 'center' }}>Price</th>\n//                                     <th style={{ textAlign: 'center' }}>Categories</th>\n//                                     {/* <th style={{ textAlign: 'center' }}>Tags</th> */}\n//                                     <th style={{ textAlign: 'center' }}>Date</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {this.state.productsArray && this.state.productsArray.map((element, index) =>\n//                                     <>\n//                                         {this.isVariableProduct(element) ?\n//                                             <tr key={index}>\n//                                                 <td align=\"center\" >{index + 1}</td>\n//                                                 <td className=\"td\">\n//                                                     {element.product_name}\n//                                                     <div className=\"mr-auto\"></div>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}> View </Nav.Link>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showConfirmDeleteModal: true, showProduct: false })}>Delete</Nav.Link>\n//                                                 </td>\n//                                                 <td align=\"center\" >{element._id}</td>\n//                                                 <td align=\"center\" >{element.product_type}</td>\n//                                                 <td align=\"center\" >{element.sku ? element.sku : '-'}</td>\n//                                                 <td align=\"center\" >\n//                                                     {element.product_variations.map(e =>\n//                                                         e.stock + ','\n//                                                     )}\n//                                                 </td>\n//                                                 <td align=\"center\" >\n//                                                     {element.product_variations.map(e =>\n//                                                         e.price + ','\n//                                                     )}\n//                                                 </td>\n//                                                 <td align=\"center\" >\n//                                                     {element.product_category.value + ' => ' + element.product_sub_category.value}\n//                                                 </td>\n//                                                 {/* <td align=\"center\" >\n//                                                     {element.product_tags && element.product_tags.map(e =>\n//                                                         e.value + ','\n//                                                     )}\n//                                                 </td> */}\n//                                                 <td align=\"center\" >\n//                                                     {element.product_entry_date}\n//                                                 </td>\n//                                             </tr>\n//                                             :\n//                                             <>\n//                                                 <tr>\n//                                                     <td align=\"center\" >{index + 1}</td>\n//                                                     <td className=\"td\">\n//                                                         {element.product_name}\n//                                                         <div className=\"mr-auto\"></div>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}>View</Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showConfirmDeleteModal: true, showProduct: false })}>Delete</Nav.Link>\n//                                                         {/* <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link> */}\n//                                                     </td>\n//                                                     <td align=\"center\" >{element._id}</td>\n//                                                     <td align=\"center\" >{element.product_type}</td>\n//                                                     <td align=\"center\" >{element.sku ? element.sku : '-'}</td>\n//                                                     <td align=\"center\" >\n//                                                         {element.product_in_stock}\n//                                                     </td>\n//                                                     <td align=\"center\" >\n//                                                         {element.product_price}\n//                                                     </td>\n//                                                     <td align=\"center\" >\n//                                                         {element.product_category.value + ' => ' + element.product_sub_category.value}\n//                                                     </td>\n//                                                     {/* <td align=\"center\" >\n//                                                         {element.product_tags && element.product_tags.map(e =>\n//                                                             e.value + ','\n//                                                         )}\n//                                                     </td> */}\n//                                                     <td align=\"center\" >\n//                                                         {element.product_entry_date}\n//                                                     </td>\n//                                                 </tr>\n//                                             </>\n//                                         }\n//                                     </>\n//                                 )}\n//                             </tbody>\n//                         </Table>\n//                     </Row >\n//                     <style jsx >\n//                         {`\n//                         .td {\n//                             display: flex;\n//                             flex-direction: row;\n//                             align-items: center;\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\n//                         }\n//                         td {\n//                             vertical-align: middle;\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\n//                         }\n//                     `}\n//                     </style>\n//                 </>\n//         }\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <ConfirmDeleteModal\n//                     onHide={() => this.setState({ showConfirmDeleteModal: false })}\n//                     show={this.state.showConfirmDeleteModal}\n//                     _id={this.state.data._id}\n//                     product_name={this.state.data.product_name}\n//                     confirmDelete={this.handleDeleteProduct.bind(this)}\n//                 />\n//                 <AlertModal\n//                     onHide={(e) => this.setState({ showToast: false })}\n//                     show={this.state.showToast}\n//                     header={'Success'}\n//                     message={'Product Deleted Successfully.'}\n//                     iconName={faThumbsUp}\n//                     color={\"#00b300\"}\n//                 />\n//                 <div>\n//                     {this.renderSwitch(this.state.showProduct)}\n//                 </div>\n//             </>\n//         );\n//     }\n// }\n// const ViewProduct = props => {\n//     const [imgPreview, setImgPreview] = React.useState(false);\n//     const [index, setIndex] = React.useState('')\n//     const [imgData, setImgData] = React.useState('')\n//     const len = props.data.product_image_link.length;\n//     function prevImage() {\n//         if (index > 0) {\n//             setIndex(index - 1)\n//         }\n//     }\n//     function nextImage() {\n//         if (index < (len - 1)) {\n//             setIndex(index + 1)\n//         }\n//     }\n//     return (\n//         <>\n//             <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\n//             <Form.Row style={{ margin: ' 0% 2%', display: 'flex', alignItems: 'center' }} >\n//                 <Nav.Link style={{ fontSize: '14px' }} className=\"mr-auto\" onClick={props.back}>Back</Nav.Link>\n//                 <div className=\"mr-auto\" style={{ fontSize: '14px' }}> {props.data.product_name}</div>\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.edit}> Edit </Nav.Link>\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.delete}> Delete </Nav.Link>\n//             </Form.Row>\n//             <CardAccordion title={'General Info'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Product Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Brand Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>SKU:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     {props.isVariableProduct ?\n//                         null :\n//                         <>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Price:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Product In Stock:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                         </>\n//                     }\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty (month):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty Type:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Discount (%):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\n//                         <Form.Label style={styles.label}>Description:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             {props.isVariableProduct ?\n//                 <CardAccordion title={'Product Variations'}>\n//                     {props.data.product_variations && props.data.product_variations.map(element =>\n//                         <>\n//                             <Row >\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Price</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Stock</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 {element.item && element.item.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {element.custom_fields && element.custom_fields.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {/* {element.image_link && element.image_link.map((img, i) =>\n//                                     <Row>\n//                                         <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\n//                                             onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\n//                                     </Row>\n//                                 )} */}\n//                             </Row>\n//                             <hr />\n//                         </>\n//                     )}\n//                 </CardAccordion>\n//                 :\n//                 <>\n//                     <CardAccordion title={'Custom Fields'}>\n//                         {props.data.custom_fields && props.data.custom_fields.map(element =>\n//                             <Row>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>{element.name}</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.value} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                             </Row>\n//                         )}\n//                     </CardAccordion>\n//                     <CardAccordion title={'Product Images'}>\n//                         {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\n//                             <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id=${element.value}`}\n//                                 alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\n//                         )}\n//                     </CardAccordion>\n//                 </>\n//             }\n//             <CardAccordion title={'Shipping Details'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Length (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Width (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Height (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Weight (kg):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             <CardAccordion title={'Product Categories'}>\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Categories:</Form.Label>\n//                     <InputGroup>\n//                         <Form.Label style={styles.label}>\n//                             {props.data.product_category.value + ' => ' + props.data.product_sub_category.value}\n//                         </Form.Label>\n//                     </InputGroup>\n//                 </Form.Group >\n//                 <hr />\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Tags:</Form.Label>\n//                     <InputGroup>\n//                         {props.data.product_tags && props.data.product_tags.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </ Form.Group >\n//                 <hr />\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Dangerous Goods:</Form.Label>\n//                     <InputGroup>\n//                         {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </Form.Group>\n//             </CardAccordion >\n//             {/* Image Preview */}\n//             {\n//                 imgPreview ?\n//                     <div className=\"modal-overlay\">\n//                         <div className=\"modal-body\">\n//                             <div className=\"close-modal\">\n//                                 <div className=\"mr-auto\"></div>\n//                                 <div className=\"mr-auto\"></div>\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\n//                                     onClick={() => prevImage} />\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\n//                                     onClick={nextImage} />\n//                                 <div className=\"mr-auto\"></div>\n//                                 <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\n//                                     onClick={() => setImgPreview(false)} />\n//                             </div>\n//                             <div className=\"image-container\">\n//                                 <img\n//                                     src={imgData[index].value}\n//                                     style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\n//                                 />\n//                             </div>\n//                         </div>\n//                     </div>\n//                     : null\n//             }\n//             <style jsx>\n//                 {`\n//                    .modal-overlay {\n//                         position: fixed;\n//                         top: 0;\n//                         left: 0;\n//                         bottom: 0;\n//                         right: 0;\n//                         z-index: 10;\n//                         width: 100%;\n//                         height: 100%;\n//                         background: rgba(21, 21, 21, 0.75);\n//                     }\n//                      .modal-body {\n//                         position: relative;\n//                         z-index: 11;\n//                         margin: 2.5%;\n//                         overflow: hidden;\n//                         max-width: 100%;\n//                         max-height: 100%;\n//                     }\n//                     .close-modal {\n//                         position: fixed;\n//                         display: flex;\n//                         top: 10px;\n//                         left: 0;\n//                         right: 0;\n//                         width: 100%;\n//                     }\n//                     .image-container {\n//                         display: grid;\n//                         height: 100%;\n//                         // display: flex;\n//                         // justify-content: center;\n//                         // align-items: center;\n//                     }\n//                 `}\n//             </style>\n//         </>\n//     )\n// }\n// const styles = {\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n//     },\n//     nav_link: {\n//         paddingLeft: '10px',\n//         paddingRight: '5px',\n//     },\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '2%'\n//     },\n//     row: {\n//         margin: '2%', padding: '0%'\n//     },\n//     img_preview_fontawesome: {\n//         cursor: 'pointer',\n//         color: 'white',\n//         fontWeight: 'lighter',\n//         width: '30px',\n//         height: '30px',\n//         maxHeight: '30px',\n//         maxWidth: '30px',\n//     },\n//     fontawesome: {\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '10%',\n//         width: '17px',\n//         height: '17px',\n//         maxHeight: '17px',\n//         maxWidth: '17px',\n//     },\n//     general_info_label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         width: '100%',\n//         borderBottom: '1px solid gray'\n//     },\n//     field_label: {\n//         border: `1px solid ${GlobalStyleSheet.body_color}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         margin: '0%',\n//         width: '100%',\n//         padding: '2px 5px'\n//     },\n//     card: {\n//         width: '100%',\n//         border: '1px solid lightgray'\n//     },\n//     card_header: {\n//         alignItems: 'center',\n//         fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n//         background: `${GlobalStyleSheet.card_header_background}`,\n//     },\n// }\n// export default AllProducts;\n// function ConfirmDeleteModal(props) {\n//     return (\n//         <Modal\n//             {...props}\n//             size=\"md\"\n//             aria-labelledby=\"alert-modal\"\n//             centered\n//         >\n//             <div style={{\n//                 border: '1px solid #ff3333', borderRadius: '5px'\n//             }}>\n//                 <Modal.Header closeButton style={{ color: '#ff3333', borderBottom: '1px solid #ff3333' }}>\n//                     <FontAwesomeIcon icon={faTrash} style={{\n//                         color: '#ff3333',\n//                         marginRight: '10px',\n//                         width: '35px',\n//                         height: '35px',\n//                         maxHeight: '35px',\n//                         maxWidth: '35px',\n//                     }} ></FontAwesomeIcon>\n//                     <Modal.Title id=\"alert-modal\">\n//                         {'Delete Product ?'}\n//                     </Modal.Title>\n//                 </Modal.Header>\n//                 <Modal.Body >\n//                     <Form.Label style={{ fontSize: '14px', padding: '0%', margin: '0%' }}>\n//                         {`Product Name: ${props.product_name}`}\n//                         {`Product ID: ${props._id}`}\n//                     </Form.Label>\n//                 </Modal.Body>\n//                 <Modal.Footer>\n//                     <Button size=\"sm\" variant='outline-danger' className='mr-auto' onClick={props.confirmDelete}>Confirm</Button>\n//                     <Button size=\"sm\" variant='outline-primary' onClick={props.onHide}>Cancel</Button>\n//                 </Modal.Footer>\n//             </div>\n//         </Modal>\n//     );\n// }\nconst AllProducts = () => __jsx(React.Fragment, null);\n\nexport default AllProducts; // // import React, { Component } from 'react';\n// // import CreatableSelect from 'react-select/creatable';\n// // const colourOptions = [{ label: '111', value: '111' }]\n// // export default class AllProducts extends Component {\n// //     handleChange = (newValue) => {\n// //         console.log('Value Changed', newValue);\n// //     };\n// //     render() {\n// //         return (\n// //             <CreatableSelect\n// //                 isMulti\n// //                 onChange={this.handleChange}\n// //                 options={colourOptions}\n// //             />\n// //         );\n// //     }\n// // }","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js"],"names":["AllProducts"],"mappingshB,2BADJ;;AAGA,eAAeA,WAAf,C,CAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\r\n// import { Row, Modal, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\r\n// import axios from 'axios'\r\n// import { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n// // import ViewProduct from './all-products-contents/view-product'\r\n// import Link from 'next/link'\r\n// import Router from 'next/router'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n// import { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\n// import CardAccordion from '../../../../card_accordion';\r\n// import MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\n// import GlobalStyleSheet from '../../../../../../styleSheet'\r\n// import TitleRow from '../../../../title-row';\r\n// import AddNew from './add-new'\r\n// import AlertModal from '../../../../alert-modal'\r\n\r\n// class AllProducts extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             showConfirmDeleteModal: false,\r\n//             showToast: false,\r\n//             productsArray: [],\r\n//             showProduct: false,\r\n//             data: {},\r\n//         }\r\n//     }\r\n\r\n//     async componentDidMount() {\r\n//         const url = MuhalikConfig.PATH + '/api/products/'\r\n//         const currentComponent = this\r\n\r\n//         await axios.get(url, {\r\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n//         }).then((response) => {\r\n//             console.log('data:', response.data.data)\r\n//             currentComponent.setState({ productsArray: response.data.data })\r\n//         }).catch((error) => {\r\n//             alert('Data Fetchig Error: ', error)\r\n//         });\r\n//     }\r\n\r\n\r\n//     handleEditProduct(index) {\r\n//         console.log('edit called')\r\n//         let element = []\r\n//         if (index == -1) {\r\n//             element = this.state.data\r\n//         } else {\r\n//             element = this.state.productsArray[index]\r\n//         }\r\n//         if (element.product_type != 'simple-product') {\r\n//             let array = [];\r\n//             let variations = element.product_variations\r\n//             variations.forEach((element, i) => {\r\n//                 array.push({\r\n//                     item: element.item, price: element.price, stock: element.stock, image_link: element.image_link,\r\n//                     price_error: '', stock_error: '', image_link_error: '', custom_fields: element.custom_fields\r\n//                 })\r\n//             })\r\n//             element.product_variations = array\r\n//         } else {\r\n//             element.product_variations = []\r\n//         }\r\n\r\n//         this.setState({ data: element, showProduct: 'edit' })\r\n\r\n//     }\r\n\r\n//     async handleDeleteProduct() {\r\n//         const _id = this.state.data._id;\r\n//         console.log('fuck fuck', _id)\r\n//         const url = MuhalikConfig.PATH + `/api/products/${_id}`;\r\n//         this.setState({ showConfirmDeleteModal: false })\r\n//         const currentComponent = this\r\n\r\n//         await axios.delete(url, {\r\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n//         }).then(function (response) {\r\n//             const copyArray = Object.assign([], currentComponent.state.productsArray)\r\n//             let array = copyArray\r\n//             copyArray.forEach((element, i) => {\r\n//                 if (element._id == _id) {\r\n//                     array.splice(i, 1)\r\n//                     return\r\n//                 }\r\n//             })\r\n//             currentComponent.setState({ productsArray: array, showToast: true })\r\n//         }).catch(function (error) {\r\n//             try {\r\n//                 alert('Error Message: ', error.response.data.message);\r\n//             } catch (err) {\r\n//                 console.log('Error: ', error);\r\n//             }\r\n//         });\r\n//     }\r\n\r\n//     isVariableProduct(element) {\r\n//         if (element.product_type != \"simple-product\") {\r\n//             return true\r\n//         } else {\r\n//             return false\r\n//         }\r\n//     }\r\n\r\n//     renderSwitch(param) {\r\n//         switch (param) {\r\n//             case 'view':\r\n//                 return <ViewProduct\r\n//                     data={this.state.data}\r\n//                     back={() => this.setState({ showProduct: false, data: {} })}\r\n//                     isVariableProduct={this.state.data.product_type != \"simple-product\"}\r\n//                     delete={() => this.setState({ showConfirmDeleteModal: true })}\r\n//                     edit={() => this.handleEditProduct(-1)}\r\n//                 />\r\n//                 break;\r\n//             case 'edit':\r\n//                 return <AddNew\r\n//                     title={'Vendor Dashboard / All Products / Update'}\r\n//                     isUpdateProduct={true}\r\n//                     _id={this.state.data._id}\r\n//                     isVariableProduct={this.state.data.product_type != 'simple-product'}\r\n\r\n//                     back={() => this.setState({ showProduct: false, data: {} })}\r\n//                     view={() => this.setState({ showProduct: 'view' })}\r\n//                     delete={() => this.setState({ showConfirmDeleteModal: true, showProduct: false })}\r\n\r\n//                     productCategories={this.state.data.product_category}\r\n//                     productSubCategories={this.state.data.product_sub_category}\r\n\r\n//                     productTags={this.state.data.product_tags}\r\n//                     warrantyType={this.state.data.warranty_type}\r\n//                     simple_product_image_link={this.state.data.product_image_link}\r\n//                     variationsArray={this.state.data.product_variations}\r\n//                     dangerousGoodsArray={this.state.data.dangerous_goods}\r\n\r\n//                     product_name={this.state.data.product_name}\r\n//                     product_description={this.state.data.product_description}\r\n//                     product_type={'variable-product'}\r\n//                     product_type={this.state.data.product_type}\r\n//                     sku={this.state.data.sku}\r\n//                     product_price={this.state.data.product_price}\r\n//                     product_in_stock={this.state.data.product_in_stock}\r\n//                     product_brand_name={this.state.data.product_brand_name}\r\n\r\n//                     product_warranty={this.state.data.product_warranty}\r\n//                     warranty_type={this.state.data.warranty_type}\r\n//                     product_discount={this.state.data.product_discount}\r\n//                     purchase_note={this.state.data.purchase_note}\r\n//                     product_weight={this.state.data.product_weight}\r\n//                     dimension_length={this.state.data.dimension_length}\r\n//                     dimension_width={this.state.data.dimension_width}\r\n//                     dimension_height={this.state.data.dimension_height}\r\n//                     shipping_charges={this.state.data.shipping_charges}\r\n//                     handling_fee={this.state.data.handling_fee}\r\n//                 />\r\n//                 break;\r\n//             default:\r\n//                 return <>\r\n//                     <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\r\n//                     <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n//                         <Table responsive bordered hover size=\"sm\">\r\n//                             <thead>\r\n//                                 <tr>\r\n//                                     <th style={{ textAlign: 'center' }}>#</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Name</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Product ID</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Product Type</th>\r\n//                                     <th style={{ textAlign: 'center' }}>SKU</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Stock</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Price</th>\r\n//                                     <th style={{ textAlign: 'center' }}>Categories</th>\r\n//                                     {/* <th style={{ textAlign: 'center' }}>Tags</th> */}\r\n//                                     <th style={{ textAlign: 'center' }}>Date</th>\r\n//                                 </tr>\r\n//                             </thead>\r\n//                             <tbody>\r\n//                                 {this.state.productsArray && this.state.productsArray.map((element, index) =>\r\n//                                     <>\r\n//                                         {this.isVariableProduct(element) ?\r\n//                                             <tr key={index}>\r\n//                                                 <td align=\"center\" >{index + 1}</td>\r\n//                                                 <td className=\"td\">\r\n//                                                     {element.product_name}\r\n//                                                     <div className=\"mr-auto\"></div>\r\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}> View </Nav.Link>\r\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\r\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showConfirmDeleteModal: true, showProduct: false })}>Delete</Nav.Link>\r\n//                                                 </td>\r\n//                                                 <td align=\"center\" >{element._id}</td>\r\n//                                                 <td align=\"center\" >{element.product_type}</td>\r\n//                                                 <td align=\"center\" >{element.sku ? element.sku : '-'}</td>\r\n//                                                 <td align=\"center\" >\r\n//                                                     {element.product_variations.map(e =>\r\n//                                                         e.stock + ','\r\n//                                                     )}\r\n//                                                 </td>\r\n//                                                 <td align=\"center\" >\r\n//                                                     {element.product_variations.map(e =>\r\n//                                                         e.price + ','\r\n//                                                     )}\r\n//                                                 </td>\r\n//                                                 <td align=\"center\" >\r\n//                                                     {element.product_category.value + ' => ' + element.product_sub_category.value}\r\n//                                                 </td>\r\n//                                                 {/* <td align=\"center\" >\r\n//                                                     {element.product_tags && element.product_tags.map(e =>\r\n//                                                         e.value + ','\r\n//                                                     )}\r\n//                                                 </td> */}\r\n//                                                 <td align=\"center\" >\r\n//                                                     {element.product_entry_date}\r\n//                                                 </td>\r\n//                                             </tr>\r\n//                                             :\r\n//                                             <>\r\n//                                                 <tr>\r\n//                                                     <td align=\"center\" >{index + 1}</td>\r\n//                                                     <td className=\"td\">\r\n//                                                         {element.product_name}\r\n//                                                         <div className=\"mr-auto\"></div>\r\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showProduct: 'view' })}>View</Nav.Link>\r\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\r\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, showConfirmDeleteModal: true, showProduct: false })}>Delete</Nav.Link>\r\n//                                                         {/* <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link> */}\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" >{element._id}</td>\r\n//                                                     <td align=\"center\" >{element.product_type}</td>\r\n//                                                     <td align=\"center\" >{element.sku ? element.sku : '-'}</td>\r\n//                                                     <td align=\"center\" >\r\n//                                                         {element.product_in_stock}\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" >\r\n//                                                         {element.product_price}\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" >\r\n//                                                         {element.product_category.value + ' => ' + element.product_sub_category.value}\r\n//                                                     </td>\r\n//                                                     {/* <td align=\"center\" >\r\n//                                                         {element.product_tags && element.product_tags.map(e =>\r\n//                                                             e.value + ','\r\n//                                                         )}\r\n//                                                     </td> */}\r\n//                                                     <td align=\"center\" >\r\n//                                                         {element.product_entry_date}\r\n//                                                     </td>\r\n//                                                 </tr>\r\n//                                             </>\r\n//                                         }\r\n//                                     </>\r\n//                                 )}\r\n//                             </tbody>\r\n//                         </Table>\r\n//                     </Row >\r\n//                     <style jsx >\r\n//                         {`\r\n//                         .td {\r\n//                             display: flex;\r\n//                             flex-direction: row;\r\n//                             align-items: center;\r\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n//                         }\r\n//                         td {\r\n//                             vertical-align: middle;\r\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n//                         }\r\n//                     `}\r\n//                     </style>\r\n//                 </>\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 <ConfirmDeleteModal\r\n//                     onHide={() => this.setState({ showConfirmDeleteModal: false })}\r\n//                     show={this.state.showConfirmDeleteModal}\r\n//                     _id={this.state.data._id}\r\n//                     product_name={this.state.data.product_name}\r\n//                     confirmDelete={this.handleDeleteProduct.bind(this)}\r\n//                 />\r\n//                 <AlertModal\r\n//                     onHide={(e) => this.setState({ showToast: false })}\r\n//                     show={this.state.showToast}\r\n//                     header={'Success'}\r\n//                     message={'Product Deleted Successfully.'}\r\n//                     iconName={faThumbsUp}\r\n//                     color={\"#00b300\"}\r\n//                 />\r\n//                 <div>\r\n//                     {this.renderSwitch(this.state.showProduct)}\r\n//                 </div>\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// const ViewProduct = props => {\r\n//     const [imgPreview, setImgPreview] = React.useState(false);\r\n//     const [index, setIndex] = React.useState('')\r\n//     const [imgData, setImgData] = React.useState('')\r\n\r\n//     const len = props.data.product_image_link.length;\r\n\r\n//     function prevImage() {\r\n//         if (index > 0) {\r\n//             setIndex(index - 1)\r\n//         }\r\n//     }\r\n\r\n//     function nextImage() {\r\n//         if (index < (len - 1)) {\r\n//             setIndex(index + 1)\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\r\n//             <Form.Row style={{ margin: ' 0% 2%', display: 'flex', alignItems: 'center' }} >\r\n//                 <Nav.Link style={{ fontSize: '14px' }} className=\"mr-auto\" onClick={props.back}>Back</Nav.Link>\r\n//                 <div className=\"mr-auto\" style={{ fontSize: '14px' }}> {props.data.product_name}</div>\r\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.edit}> Edit </Nav.Link>\r\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.delete}> Delete </Nav.Link>\r\n//             </Form.Row>\r\n//             <CardAccordion title={'General Info'}>\r\n//                 <Row>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Product Name:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Brand Name:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>SKU:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     {props.isVariableProduct ?\r\n//                         null :\r\n//                         <>\r\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                                 <Form.Label style={styles.label}>Price:</Form.Label>\r\n//                                 <InputGroup>\r\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\r\n//                                 </InputGroup>\r\n//                             </Form.Group>\r\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                                 <Form.Label style={styles.label}>Product In Stock:</Form.Label>\r\n//                                 <InputGroup>\r\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\r\n//                                 </InputGroup>\r\n//                             </Form.Group>\r\n//                         </>\r\n//                     }\r\n\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Warranty (month):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Warranty Type:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Discount (%):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n//                         <Form.Label style={styles.label}>Description:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                 </Row>\r\n//             </CardAccordion>\r\n\r\n//             {props.isVariableProduct ?\r\n//                 <CardAccordion title={'Product Variations'}>\r\n//                     {props.data.product_variations && props.data.product_variations.map(element =>\r\n//                         <>\r\n//                             <Row >\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                     <Form.Label style={styles.label}>Price</Form.Label>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                     <Form.Label style={styles.label}>Stock</Form.Label>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                                 {element.item && element.item.map(e =>\r\n//                                     <>\r\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n//                                             <InputGroup>\r\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n//                                             </InputGroup>\r\n//                                         </Form.Group>\r\n//                                     </>\r\n//                                 )}\r\n//                                 {element.custom_fields && element.custom_fields.map(e =>\r\n//                                     <>\r\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n//                                             <InputGroup>\r\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n//                                             </InputGroup>\r\n//                                         </Form.Group>\r\n//                                     </>\r\n//                                 )}\r\n//                                 {/* {element.image_link && element.image_link.map((img, i) =>\r\n//                                     <Row>\r\n//                                         <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\r\n//                                             onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\r\n//                                     </Row>\r\n//                                 )} */}\r\n//                             </Row>\r\n//                             <hr />\r\n//                         </>\r\n//                     )}\r\n//                 </CardAccordion>\r\n//                 :\r\n//                 <>\r\n//                     <CardAccordion title={'Custom Fields'}>\r\n//                         {props.data.custom_fields && props.data.custom_fields.map(element =>\r\n//                             <Row>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                     <Form.Label style={styles.label}>{element.name}</Form.Label>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.value} disabled={true} />\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                             </Row>\r\n//                         )}\r\n//                     </CardAccordion>\r\n//                     <CardAccordion title={'Product Images'}>\r\n//                         {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\r\n//                             <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id=${element.value}`}\r\n//                                 alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\r\n//                         )}\r\n//                     </CardAccordion>\r\n//                 </>\r\n//             }\r\n//             <CardAccordion title={'Shipping Details'}>\r\n//                 <Row>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Length (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Width (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Height (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Weight (kg):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                 </Row>\r\n//             </CardAccordion>\r\n//             <CardAccordion title={'Product Categories'}>\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Categories:</Form.Label>\r\n//                     <InputGroup>\r\n//                         <Form.Label style={styles.label}>\r\n//                             {props.data.product_category.value + ' => ' + props.data.product_sub_category.value}\r\n//                         </Form.Label>\r\n//                     </InputGroup>\r\n//                 </Form.Group >\r\n//                 <hr />\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Tags:</Form.Label>\r\n//                     <InputGroup>\r\n//                         {props.data.product_tags && props.data.product_tags.map(element =>\r\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n//                         )}\r\n//                     </InputGroup>\r\n//                 </ Form.Group >\r\n//                 <hr />\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Dangerous Goods:</Form.Label>\r\n//                     <InputGroup>\r\n//                         {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\r\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n//                         )}\r\n//                     </InputGroup>\r\n//                 </Form.Group>\r\n//             </CardAccordion >\r\n\r\n//             {/* Image Preview */}\r\n//             {\r\n//                 imgPreview ?\r\n//                     <div className=\"modal-overlay\">\r\n//                         <div className=\"modal-body\">\r\n//                             <div className=\"close-modal\">\r\n//                                 <div className=\"mr-auto\"></div>\r\n//                                 <div className=\"mr-auto\"></div>\r\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\r\n//                                     onClick={() => prevImage} />\r\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\r\n//                                     onClick={nextImage} />\r\n//                                 <div className=\"mr-auto\"></div>\r\n//                                 <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\r\n//                                     onClick={() => setImgPreview(false)} />\r\n//                             </div>\r\n//                             <div className=\"image-container\">\r\n//                                 <img\r\n//                                     src={imgData[index].value}\r\n//                                     style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\r\n//                                 />\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                     : null\r\n//             }\r\n//             <style jsx>\r\n//                 {`\r\n//                    .modal-overlay {\r\n//                         position: fixed;\r\n//                         top: 0;\r\n//                         left: 0;\r\n//                         bottom: 0;\r\n//                         right: 0;\r\n//                         z-index: 10;\r\n//                         width: 100%;\r\n//                         height: 100%;\r\n//                         background: rgba(21, 21, 21, 0.75);\r\n//                     }\r\n//                      .modal-body {\r\n//                         position: relative;\r\n//                         z-index: 11;\r\n//                         margin: 2.5%;\r\n//                         overflow: hidden;\r\n//                         max-width: 100%;\r\n//                         max-height: 100%;\r\n//                     }\r\n//                     .close-modal {\r\n//                         position: fixed;\r\n//                         display: flex;\r\n//                         top: 10px;\r\n//                         left: 0;\r\n//                         right: 0;\r\n//                         width: 100%;\r\n//                     }\r\n//                     .image-container {\r\n//                         display: grid;\r\n//                         height: 100%;\r\n//                         // display: flex;\r\n//                         // justify-content: center;\r\n//                         // align-items: center;\r\n//                     }\r\n//                 `}\r\n//             </style>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const styles = {\r\n//     label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n//     },\r\n//     nav_link: {\r\n//         paddingLeft: '10px',\r\n//         paddingRight: '5px',\r\n//     },\r\n//     label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         marginRight: '2%'\r\n//     },\r\n//     row: {\r\n//         margin: '2%', padding: '0%'\r\n//     },\r\n//     img_preview_fontawesome: {\r\n//         cursor: 'pointer',\r\n//         color: 'white',\r\n//         fontWeight: 'lighter',\r\n//         width: '30px',\r\n//         height: '30px',\r\n//         maxHeight: '30px',\r\n//         maxWidth: '30px',\r\n//     },\r\n//     fontawesome: {\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         marginRight: '10%',\r\n//         width: '17px',\r\n//         height: '17px',\r\n//         maxHeight: '17px',\r\n//         maxWidth: '17px',\r\n//     },\r\n//     general_info_label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         width: '100%',\r\n//         borderBottom: '1px solid gray'\r\n//     },\r\n//     field_label: {\r\n//         border: `1px solid ${GlobalStyleSheet.body_color}`,\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         margin: '0%',\r\n//         width: '100%',\r\n//         padding: '2px 5px'\r\n//     },\r\n//     card: {\r\n//         width: '100%',\r\n//         border: '1px solid lightgray'\r\n//     },\r\n//     card_header: {\r\n//         alignItems: 'center',\r\n//         fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n//         background: `${GlobalStyleSheet.card_header_background}`,\r\n//     },\r\n// }\r\n\r\n// export default AllProducts;\r\n\r\n\r\n// function ConfirmDeleteModal(props) {\r\n//     return (\r\n//         <Modal\r\n//             {...props}\r\n//             size=\"md\"\r\n//             aria-labelledby=\"alert-modal\"\r\n//             centered\r\n//         >\r\n//             <div style={{\r\n//                 border: '1px solid #ff3333', borderRadius: '5px'\r\n//             }}>\r\n//                 <Modal.Header closeButton style={{ color: '#ff3333', borderBottom: '1px solid #ff3333' }}>\r\n//                     <FontAwesomeIcon icon={faTrash} style={{\r\n//                         color: '#ff3333',\r\n//                         marginRight: '10px',\r\n//                         width: '35px',\r\n//                         height: '35px',\r\n//                         maxHeight: '35px',\r\n//                         maxWidth: '35px',\r\n//                     }} ></FontAwesomeIcon>\r\n//                     <Modal.Title id=\"alert-modal\">\r\n//                         {'Delete Product ?'}\r\n//                     </Modal.Title>\r\n//                 </Modal.Header>\r\n//                 <Modal.Body >\r\n//                     <Form.Label style={{ fontSize: '14px', padding: '0%', margin: '0%' }}>\r\n//                         {`Product Name: ${props.product_name}`}\r\n//                         {`Product ID: ${props._id}`}\r\n//                     </Form.Label>\r\n//                 </Modal.Body>\r\n//                 <Modal.Footer>\r\n//                     <Button size=\"sm\" variant='outline-danger' className='mr-auto' onClick={props.confirmDelete}>Confirm</Button>\r\n//                     <Button size=\"sm\" variant='outline-primary' onClick={props.onHide}>Cancel</Button>\r\n//                 </Modal.Footer>\r\n//             </div>\r\n//         </Modal>\r\n//     );\r\n// }\r\nconst AllProducts = () => (\r\n    <></>\r\n)\r\nexport default AllProducts\r\n\r\n// // import React, { Component } from 'react';\r\n\r\n// // import CreatableSelect from 'react-select/creatable';\r\n// // const colourOptions = [{ label: '111', value: '111' }]\r\n\r\n// // export default class AllProducts extends Component {\r\n// //     handleChange = (newValue) => {\r\n// //         console.log('Value Changed', newValue);\r\n// //     };\r\n\r\n// //     render() {\r\n// //         return (\r\n// //             <CreatableSelect\r\n// //                 isMulti\r\n// //                 onChange={this.handleChange}\r\n// //                 options={colourOptions}\r\n// //             />\r\n// //         );\r\n// //     }\r\n// // }"]},"metadata":{},"sourceType":"module"}