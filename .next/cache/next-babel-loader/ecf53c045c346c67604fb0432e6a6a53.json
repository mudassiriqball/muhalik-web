{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Modal, Form, InputGroup, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\n\nfunction AddNewFieldNameModal(props) {\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n\n  function handleAdd() {\n    if (value != \"\") {\n      console.log(\"handle Category:\", value);\n      return true;\n    } else {\n      setError('Please Enter Value');\n    }\n  }\n\n  return __jsx(Modal, _extends({}, props, {\n    size: \"md\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true\n  }), __jsx(Modal.Header, {\n    closeButton: true\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\"\n  }, \"Add New Field\")), __jsx(Modal.Body, null, __jsx(Form.Label, {\n    style: {\n      fontSize: '14px',\n      textAlign: 'center',\n      width: '100%'\n    }\n  }, \"Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\"), __jsx(Form.Group, null, __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Field Name\",\n    name: \"sku\",\n    value: value,\n    onChange: e => setValue(e.target.value),\n    isInvalid: error\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, error)))), __jsx(Modal.Footer, null, __jsx(Button, {\n    size: \"sm\",\n    className: \"mr-auto\",\n    onClick: handleAdd ? props.onHide : null\n  }, \"Add\"), __jsx(Button, {\n    size: \"sm\",\n    onClick: props.onHide\n  }, \"Cancel\")));\n}\n\nexport default AddNewFieldNameModal;","map":null,"metadata":{},"sourceType":"module"}