{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport ConfirmModal from '../../../../confirm-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nlet categoryArray = [];\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCategoryChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.categoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        categoriesList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteCategoryClick\", index => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.categoriesList);\n      categoryArray.forEach((element, i) => {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n      this.setState({\n        categoriesList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n      categoryArray = copyArray;\n    });\n\n    _defineProperty(this, \"handleSubCategoryChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.subCategoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        subCategoriesList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteSubCategoryClick\", index => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.subCategoriesList);\n      categoryArray.forEach((element, i) => {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n      this.setState({\n        subCategoriesList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n      categoryArray = copyArray;\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      showConfirmDeleteModal: false,\n      categoryValue: '',\n      subCategoryValue: '',\n      categoryError: '',\n      subCategoryError: '',\n      categoriesList: [],\n      subCategoriesList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      searchType: 'Category',\n      filterStr: ''\n    };\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/categories/categories';\n    const currentComponent = this;\n    await axios.get(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(response => {\n      currentComponent.setState({\n        categoriesList: response.data.category.docs,\n        subCategoriesList: response.data.sub_category.docs\n      });\n      categoryArray = response.data.category.docs;\n    }).catch(error => {\n      console.log('Caterories Fetchig Error: ', error);\n    });\n  }\n\n  async addCategory(currentComponent) {\n    let data = [];\n    data = {\n      category: {\n        value: this.state.categoryValue,\n        label: this.state.categoryValue\n      },\n      sub_category: {\n        value: this.state.subCategoryValue,\n        label: this.state.subCategoryValue\n      }\n    };\n    const url = MuhalikConfig.PATH + '/api/categories/category';\n    await axios.post(url, {\n      data\n    }, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      currentComponent.setState({\n        showModalMessage: 'Product Category Added Successfully'\n      });\n      currentComponent.setState({\n        showModal: true\n      });\n      return true;\n    }).catch(function (error) {\n      currentComponent.setState({\n        isLoading: false\n      });\n\n      try {\n        alert('Error: ', error.response.data.message);\n      } catch (err) {\n        console.log('Request Failed:', error);\n      }\n\n      return false;\n    });\n  }\n\n  async handleSubmit() {\n    if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\n      if (this.state.categoryValue == '') {\n        this.setState({\n          categoryError: 'Enter Value First'\n        });\n      }\n\n      if (this.state.subCategoryValue == '') {\n        this.setState({\n          subCategoryError: 'Enter Value First'\n        });\n      }\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.addCategory(this);\n    }\n  } // // Category Request \n  // // => Field Value \n  // handleCategoryRequestChange = (e, index) => {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     copyArray[index].value = e.target.value;\n  //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n  //         copyArray[index].error = ''\n  //     } else {\n  //         copyArray[index].error = 'Value must be 3-20 characters'\n  //     }\n  //     this.setState({ categoryRequestList: copyArray })\n  // }\n  // //  => Edit\n  // async handleEditCategoryRequestClick(index) {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     var obj = {};\n  //     obj['value'] = copyArray[index].value;\n  //     obj['label'] = false;\n  //     obj['prevVal'] = copyArray[index].value;\n  //     obj['error'] = '';\n  //     copyArray[index] = obj\n  //     await this.setState({ categoryRequestList: copyArray })\n  // }\n  // //  => Cancle\n  // handleCancelCategoryRequestClick(index) {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     copyArray[index].value = copyArray[index].prevVal;\n  //     copyArray[index].label = true;\n  //     copyArray[index].error = '';\n  //     this.setState({ categoryRequestList: copyArray })\n  // }\n  // // Update\n  // handleUpdateCategoryRequestClick(index) {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     if (copyArray[index].value == copyArray[index].prevVal) {\n  //         copyArray[index].error = 'Enter Different Value';\n  //         this.setState({ categoryRequestList: copyArray });\n  //     } else {\n  //         if (copyArray[index].error == '') {\n  //             copyArray[index].label = true;\n  //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\n  //         }\n  //     }\n  // }\n  // //  => Add\n  // handleAddCategoryRequestClick(index) {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     copyArray.splice(index, 1);\n  //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\n  //     this.addCategory(this)\n  // }\n  // //  => Delete\n  // handleDeleteCategoryRequestClick(index) {\n  //     let copyArray = [];\n  //     copyArray = Object.assign([], this.state.categoryRequestList);\n  //     copyArray.splice(index, 1);\n  //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\n  // }\n  // All categories\n\n\n  handleFilterStrChange(e) {\n    this.setState({\n      filterStr: e.target.value\n    });\n    let array = [];\n\n    if (e.target.value != '') {\n      if (this.state.searchType == 'Category') {\n        this.state.categoriesList.filter(function (data) {\n          const value = data.value.toLowerCase();\n\n          if (value.includes(e.target.value.toLowerCase())) {\n            array.push(data);\n          }\n        });\n      } else {\n        let currentComponent = this;\n        this.state.subCategoriesList.filter(function (element) {\n          const value = element.value.toLowerCase();\n\n          if (value.includes(e.target.value.toLowerCase())) {\n            currentComponent.state.categoriesList.filter(function (e) {\n              if (element.category_id == e._id) {\n                array.push(e);\n              }\n            });\n          }\n        });\n        let a = [];\n        array.map(x => {\n          if (!a.includes(x)) {\n            a.push(x);\n          }\n        });\n        array = a;\n      }\n\n      this.setState({\n        categoriesList: array\n      });\n    } else {\n      this.setState({\n        categoriesList: categoryArray\n      });\n    }\n  } //  => Chane\n\n\n  //  => Edit\n  async handleEditCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoriesList);\n    var obj = {};\n    obj['_id'] = copyArray[index]._id;\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      categoriesList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoriesList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].error = '';\n    copyArray[index].label = true;\n    this.setState({\n      categoriesList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoriesList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    } else {\n      copyArray[index].label = copyArray[index].value;\n      copyArray[index].prevVal = copyArray[index].value;\n      this.setState({\n        categoriesList: copyArray,\n        showModalMessage: 'Product Category Updated Successfully',\n        showModal: true\n      });\n      categoryArray = copyArray;\n    }\n  } //  => Delete\n\n\n  //  => Edit\n  async handleEditSubCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.subCategoriesList);\n    var obj = {};\n    obj['_id'] = copyArray[index]._id;\n    obj['category_id'] = copyArray[index].category_id;\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      subCategoriesList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelSubCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.subCategoriesList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].error = '';\n    copyArray[index].label = true;\n    this.setState({\n      subCategoriesList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateSubCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.subCategoriesList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    } else {\n      copyArray[index].label = copyArray[index].value;\n      copyArray[index].prevVal = copyArray[index].value;\n      this.setState({\n        subCategoriesList: copyArray,\n        showModalMessage: 'Product Category Updated Successfully',\n        showModal: true\n      });\n      categoryArray = copyArray;\n    }\n  } //  => Delete\n\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showModal: false\n      }),\n      show: this.state.showModal,\n      header: 'Success',\n      message: this.state.showModalMessage,\n      iconname: faThumbsUp,\n      color: \"#00b300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }), __jsx(ConfirmModal, {\n      onHide: () => this.setState({\n        showConfirmDeleteModal: false\n      }),\n      show: this.state.showConfirmDeleteModal,\n      _id: this.state.data._id,\n      product_name: this.state.data.product_name,\n      confirmDelete: this.handleDeleteProduct.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }\n    }), __jsx(TitleRow, {\n      icon: faListAlt,\n      title: ' Admin Dashboard / Product Categories',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 17\n      }\n    }), __jsx(CardAccordion, {\n      title: 'Add New Category',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Label, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }, \"Category\"), __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: e => this.setState({\n        categoryValue: e.target.value,\n        categoryError: ''\n      }),\n      isInvalid: this.state.categoryError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 33\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 33\n      }\n    }, this.state.categoryError))), __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Label, {\n      style: styles.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 29\n      }\n    }, \"Sub Category\"), __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.subCategoryValue,\n      onChange: e => this.setState({\n        subCategoryValue: e.target.value,\n        subCategoryError: ''\n      }),\n      isInvalid: this.state.subCategoryError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 33\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 33\n      }\n    }, this.state.subCategoryError))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 29\n      }\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 57\n      }\n    }) : null)))), __jsx(CardAccordion, {\n      title: 'All Categories',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Row, {\n      style: {\n        margin: '0% 5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 25\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 29\n      }\n    }, __jsx(InputGroup.Prepend, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      as: \"select\",\n      variant: \"primary\",\n      size: \"sm\",\n      value: this.state.searchType,\n      onChange: e => this.setState({\n        searchType: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 37\n      }\n    }, __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 41\n      }\n    }, \"Category\"), __jsx(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 41\n      }\n    }, \"Sub Category\"))), __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Search Here\",\n      name: \"search\",\n      value: this.state.filterStr,\n      onChange: e => this.handleFilterStrChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 33\n      }\n    })))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }\n    }), this.state.categoriesList && this.state.categoriesList.map((element, index) => __jsx(\"div\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      name: \"sku\",\n      value: element.value,\n      disabled: element.label,\n      onChange: e => this.handleCategoryChange(e, index),\n      isInvalid: element.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 37\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 37\n      }\n    }, element.error)), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 33\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: element.label ? \"outline-primary\" : \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: element.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index),\n      disabled: element.label ? false : element.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 41\n      }\n    }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 33\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: element.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: element.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 37\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 41\n      }\n    }, element.label ? 'Delete' : 'Cancel')))), __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 29\n      }\n    }, this.state.subCategoriesList.map((e, i) => element._id == e.category_id ? __jsx(Col, {\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      key: e._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 37\n      }\n    }, __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 45\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      name: \"sku\",\n      value: e.value,\n      disabled: e.label,\n      onChange: event => this.handleSubCategoryChange(event, i),\n      isInvalid: e.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 49\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 49\n      }\n    }, e.error)), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: e.label ? \"outline-primary\" : \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: e.label ? () => this.handleEditSubCategoryClick(i) : () => this.handleUpdateSubCategoryClick(i),\n      disabled: e.label ? false : e.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 53\n      }\n    }, e.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: e.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: e.label ? () => this.handleDeleteSubCategoryClick(i) : () => this.handleCancelSubCategoryClick(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 53\n      }\n    }, e.label ? 'Delete' : 'Cancel'))))) : null)), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","Dropdown","ButtonGroup","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","ConfirmModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","categoryArray","ProducCategories","constructor","props","e","index","copyArray","Object","assign","state","categoriesList","value","target","length","error","setState","forEach","element","i","splice","showModalMessage","showModal","subCategoriesList","isLoading","showToast","showConfirmDeleteModal","categoryValue","subCategoryValue","categoryError","subCategoryError","categoryRequestList","editRequestedCategory","searchType","filterStr","componentDidMount","url","PATH","currentComponent","get","headers","then","response","data","category","docs","sub_category","catch","console","log","addCategory","label","post","alert","message","err","handleSubmit","handleFilterStrChange","array","filter","toLowerCase","includes","push","category_id","_id","a","map","x","handleEditCategoryClick","obj","handleCancelCategoryClick","prevVal","handleUpdateCategoryClick","handleEditSubCategoryClick","handleCancelSubCategoryClick","handleUpdateSubCategoryClick","render","product_name","handleDeleteProduct","bind","styles","submit_btn","margin","handleCategoryChange","handleDeleteCategoryClick","event","handleSubCategoryChange","handleDeleteSubCategoryClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport ConfirmModal from '../../../../confirm-modal'\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet categoryArray = [];\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            showConfirmDeleteModal: false,\r\n\r\n            categoryValue: '',\r\n            subCategoryValue: '',\r\n\r\n            categoryError: '',\r\n            subCategoryError: '',\r\n\r\n            categoriesList: [],\r\n            subCategoriesList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            searchType: 'Category',\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        const currentComponent = this;\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            currentComponent.setState({\r\n                categoriesList: response.data.category.docs,\r\n                subCategoriesList: response.data.sub_category.docs\r\n            });\r\n            categoryArray = response.data.category.docs\r\n        }).catch((error) => {\r\n            console.log('Caterories Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async addCategory(currentComponent) {\r\n        let data = [];\r\n\r\n        data = {\r\n            category: { value: this.state.categoryValue, label: this.state.categoryValue },\r\n            sub_category: { value: this.state.subCategoryValue, label: this.state.subCategoryValue }\r\n        }\r\n        const url = MuhalikConfig.PATH + '/api/categories/category';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                console.log('Request Failed:', error)\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\r\n            if (this.state.categoryValue == '') {\r\n                this.setState({ categoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subCategoryValue == '') {\r\n                this.setState({ subCategoryError: 'Enter Value First' });\r\n            }\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.addCategory(this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // // Category Request \r\n    // // => Field Value \r\n    // handleCategoryRequestChange = (e, index) => {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = e.target.value;\r\n\r\n    //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n    //         copyArray[index].error = ''\r\n    //     } else {\r\n    //         copyArray[index].error = 'Value must be 3-20 characters'\r\n    //     }\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Edit\r\n    // async handleEditCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     var obj = {};\r\n    //     obj['value'] = copyArray[index].value;\r\n    //     obj['label'] = false;\r\n    //     obj['prevVal'] = copyArray[index].value;\r\n    //     obj['error'] = '';\r\n    //     copyArray[index] = obj\r\n    //     await this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Cancle\r\n    // handleCancelCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = copyArray[index].prevVal;\r\n    //     copyArray[index].label = true;\r\n    //     copyArray[index].error = '';\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // // Update\r\n    // handleUpdateCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     if (copyArray[index].value == copyArray[index].prevVal) {\r\n    //         copyArray[index].error = 'Enter Different Value';\r\n    //         this.setState({ categoryRequestList: copyArray });\r\n    //     } else {\r\n    //         if (copyArray[index].error == '') {\r\n    //             copyArray[index].label = true;\r\n    //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    //         }\r\n    //     }\r\n    // }\r\n    // //  => Add\r\n    // handleAddCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    //     this.addCategory(this)\r\n    // }\r\n    // //  => Delete\r\n    // handleDeleteCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        let array = [];\r\n        if (e.target.value != '') {\r\n            if (this.state.searchType == 'Category') {\r\n                this.state.categoriesList.filter(function (data) {\r\n                    const value = data.value.toLowerCase()\r\n                    if (value.includes(e.target.value.toLowerCase())) {\r\n                        array.push(data);\r\n                    }\r\n                })\r\n            } else {\r\n                let currentComponent = this\r\n                this.state.subCategoriesList.filter(function (element) {\r\n                    const value = element.value.toLowerCase()\r\n                    if (value.includes(e.target.value.toLowerCase())) {\r\n                        currentComponent.state.categoriesList.filter(function (e) {\r\n                            if (element.category_id == e._id) {\r\n                                array.push(e)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                let a = []\r\n                array.map(x => {\r\n                    if (!a.includes(x)) {\r\n                        a.push(x)\r\n                    }\r\n                })\r\n                array = a\r\n            }\r\n            this.setState({ categoriesList: array })\r\n        } else {\r\n            this.setState({ categoriesList: categoryArray })\r\n        }\r\n    }\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            copyArray[index].label = copyArray[index].value;\r\n            copyArray[index].prevVal = copyArray[index].value;\r\n            this.setState({\r\n                categoriesList: copyArray,\r\n                showModalMessage: 'Product Category Updated Successfully',\r\n                showModal: true\r\n            });\r\n            categoryArray = copyArray\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({\r\n            categoriesList: copyArray,\r\n            showModalMessage: 'Product Category Deleted',\r\n            showModal: true\r\n        })\r\n        categoryArray = copyArray\r\n    }\r\n    // \r\n    // Sub Category\r\n    handleSubCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['category_id'] = copyArray[index].category_id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            copyArray[index].label = copyArray[index].value;\r\n            copyArray[index].prevVal = copyArray[index].value;\r\n            this.setState({\r\n                subCategoriesList: copyArray,\r\n                showModalMessage: 'Product Category Updated Successfully',\r\n                showModal: true\r\n            });\r\n            categoryArray = copyArray\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteSubCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({\r\n            subCategoriesList: copyArray,\r\n            showModalMessage: 'Product Category Deleted',\r\n            showModal: true\r\n        })\r\n        categoryArray = copyArray\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <ConfirmModal\r\n                    onHide={() => this.setState({ showConfirmDeleteModal: false })}\r\n                    show={this.state.showConfirmDeleteModal}\r\n                    _id={this.state.data._id}\r\n                    product_name={this.state.data.product_name}\r\n                    confirmDelete={this.handleDeleteProduct.bind(this)}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Categories'} />\r\n\r\n\r\n\r\n                {/* Add New Category */}\r\n                <CardAccordion title={'Add New Category'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.categoryValue}\r\n                                    onChange={(e) => this.setState({ categoryValue: e.target.value, categoryError: '' })}\r\n                                    isInvalid={this.state.categoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.categoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subCategoryValue}\r\n                                    onChange={(e) => this.setState({ subCategoryValue: e.target.value, subCategoryError: '' })}\r\n                                    isInvalid={this.state.subCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                </CardAccordion>\r\n\r\n                {/* Add Category Requests */}\r\n                {/* <CardAccordion title={'Add Category Requests'}>\r\n                    {this.state.categoryRequestList.map((element, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion> */}\r\n\r\n                {/* All Categories */}\r\n                <CardAccordion title={'All Categories'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend >\r\n                                    <Form.Control as=\"select\" variant=\"primary\" size='sm'\r\n                                        value={this.state.searchType} onChange={(e) => this.setState({ searchType: e.target.value })}>\r\n                                        <option>Category</option>\r\n                                        <option>Sub Category</option>\r\n                                    </Form.Control>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Search Here\"\r\n                                    name=\"search\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.categoriesList && this.state.categoriesList.map((element, index) =>\r\n                        <div key={index}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        disabled={element.label}\r\n                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)}\r\n                                        disabled={element.label ? false : element.error}\r\n                                    >\r\n                                        <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index)}>\r\n                                        <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row >\r\n                                {this.state.subCategoriesList.map((e, i) => (element._id == e.category_id) ?\r\n                                    <Col lg={6} md={6} sm={6} xs={12} key={e._id}>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={12}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    name=\"sku\"\r\n                                                    value={e.value}\r\n                                                    disabled={e.label}\r\n                                                    onChange={(event) => this.handleSubCategoryChange(event, i)}\r\n                                                    isInvalid={e.error}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {e.error}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                            <div className='mr-auto'></div>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={e.label ? () => this.handleEditSubCategoryClick(i) : () => this.handleUpdateSubCategoryClick(i)}\r\n                                                    disabled={e.label ? false : e.error}\r\n                                                >\r\n                                                    <div>{e.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={e.label ? () => this.handleDeleteSubCategoryClick(i) : () => this.handleCancelSubCategoryClick(i)}>\r\n                                                    <div>{e.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                )}\r\n                            </Form.Row>\r\n                            <hr />\r\n                        </div>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}