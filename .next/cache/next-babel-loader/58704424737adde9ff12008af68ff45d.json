{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\all-products.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Row, Table, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\n\nvar AllProducts = /*#__PURE__*/function (_Component) {\n  _inherits(AllProducts, _Component);\n\n  var _super = _createSuper(AllProducts);\n\n  function AllProducts(props) {\n    var _this;\n\n    _classCallCheck(this, AllProducts);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      productsArray: []\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(AllProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/products/';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url));\n\n            case 4:\n              response = _context.sent;\n              console.log('data:', response.data.data.docs);\n              this.setState({\n                productsArray: response.data.data.docs\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('Data Fetching Eror:', _context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 9]], Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        noGutters: true,\n        style: {\n          margin: '2%',\n          background: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, __jsx(Table, {\n        striped: true,\n        responsive: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        style: styles.table,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, __jsx(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }, __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }\n      }, __jsx(Form.Check, {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 37\n        }\n      })), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }, \"Name\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }, \"SKU\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }, \"Stock\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 33\n        }\n      }, \"Price\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }\n      }, \"Categories\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }\n      }, \"Tags\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, \"Date\"))), __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }, this.state.productsArray && this.state.productsArray.map(function (element, index) {\n        __jsx(React.Fragment, null, element.product_type === 'simple-product' ? __jsx(\"tr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }\n        }, __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 45\n          }\n        }, __jsx(Form.Check, {\n          type: \"checkbox\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 85\n          }\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 45\n          }\n        }, element.product_name), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 45\n          }\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 45\n          }\n        }, element.product_in_stock), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 45\n          }\n        }, element.product_price), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 45\n          }\n        }, element.product_category[0].value), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 45\n          }\n        }, _.isEmpty(element.product_tags) ? '-' : element.product_tags[0].value), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }\n        }, \"Date\")) : null);\n      })))));\n    }\n  }]);\n\n  return AllProducts;\n}(Component);\n\nvar styles = {\n  // table: {\n  //     margin: '2%'\n  // },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  }\n};\nexport default AllProducts;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js"],"names":["React","Component","Row","Table","Form","axios","MuhalikConfig","GlobalStyleSheet","AllProducts","props","state","productsArray","url","PATH","get","response","console","log","data","docs","setState","margin","background","styles","table","textAlign","map","element","index","product_type","label","product_name","sku","product_in_stock","product_price","product_category","value","_","isEmpty","product_tags","fontSize","form_label_fontsize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Table, Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\n\r\nclass AllProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productsArray: [],\r\n        }\r\n    }\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products/';\r\n        try {\r\n            const response = await axios.get(url);\r\n            console.log('data:', response.data.data.docs)\r\n            this.setState({ productsArray: response.data.data.docs })\r\n        } catch (error) {\r\n            console.log('Data Fetching Eror:', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n                    <Table striped responsive bordered hover size=\"sm\" style={styles.table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ textAlign: 'center' }}>\r\n                                    <Form.Check type=\"checkbox\" />\r\n                                </th>\r\n                                <th style={{ textAlign: 'center' }}>Name</th>\r\n                                <th style={{ textAlign: 'center' }}>SKU</th>\r\n                                <th style={{ textAlign: 'center' }}>Stock</th>\r\n                                <th style={{ textAlign: 'center' }}>Price</th>\r\n                                <th style={{ textAlign: 'center' }}>Categories</th>\r\n                                <th style={{ textAlign: 'center' }}>Tags</th>\r\n                                <th style={{ textAlign: 'center' }}>Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.productsArray && this.state.productsArray.map((element, index) => {\r\n                                <>\r\n                                    {(element.product_type === 'simple-product') ?\r\n                                        <tr>\r\n                                            <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_name}</td>\r\n\r\n                                            <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_price}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_category[0].value}</td>\r\n                                            <td align=\"center\" style={styles.label}>{_.isEmpty(element.product_tags) ? '-' : element.product_tags[0].value}</td>\r\n                                            <td align=\"center\" style={styles.label}>Date</td>\r\n                                        </tr>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    // table: {\r\n    //     margin: '2%'\r\n    // },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n}\r\nexport default AllProducts;"]},"metadata":{},"sourceType":"module"}