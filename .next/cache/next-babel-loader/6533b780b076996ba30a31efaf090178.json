{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-fields.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nvar fieldsArray = [];\n\nvar ProducFields = /*#__PURE__*/function (_Component) {\n  _inherits(ProducFields, _Component);\n\n  var _super = _createSuper(ProducFields);\n\n  function ProducFields(props) {\n    var _this;\n\n    _classCallCheck(this, ProducFields);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldRequestChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.fieldRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        fieldRequestList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.fieldList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        fieldList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteFieldClick\", function (index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.fieldList);\n      fieldsArray.forEach(function (element, i) {\n        if (copyArray[index].value == element.value) {\n          fieldsArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n\n      _this.setState({\n        fieldList: copyArray,\n        showModalMessage: 'Product Field Deleted',\n        showModal: true\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      fieldValue: '',\n      error: '',\n      fieldList: [],\n      fieldRequestList: [],\n      editRequestedField: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n    return _this;\n  } // Getting Product Fields from DB\n\n\n  _createClass(ProducFields, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response, copyArray;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url));\n\n            case 4:\n              response = _context.sent;\n              copyArray = [];\n              copyArray = response.data.data;\n              copyArray.forEach(function (data, index) {\n                data.label = true;\n              });\n              this.setState({\n                fieldList: copyArray\n              });\n              this.setState({\n                fieldRequestList: this.state.fieldList\n              });\n              fieldsArray = copyArray;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('feror:', _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 13]], Promise);\n    }\n  }, {\n    key: \"addField\",\n    value: function addField() {\n      return _regeneratorRuntime.async(function addField$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // const url = MuhalikConfig.PATH + '/api/products/add';\n              // await axios.post(url, {\n              // this.state.fieldValue\n              // }, {\n              //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n              // }).then(function (response) {\n              this.setState({\n                isLoading: true\n              });\n              this.setState({\n                showModalMessage: 'Product Field Added Successfully'\n              });\n              this.setState({\n                showModal: true\n              });\n              return _context2.abrupt(\"return\", true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n\n      if (e.target.value == '') {\n        this.setState({\n          fieldList: fieldsArray\n        });\n      } else {\n        var array = [];\n        this.state.fieldList.filter(function (data) {\n          // var value = data.value.toLowerCase;\n          if (data.value.includes(e.target.value)) {\n            array.push(data);\n          }\n        });\n        this.setState({\n          fieldList: array\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (fieldValue == '') {\n        this.setState({\n          error: 'Enter Value First'\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.setState({\n          error: ''\n        });\n        this.addField(this);\n      }\n    } // Field Request \n    // => Field Value \n\n  }, {\n    key: \"handleEditFieldRequestClick\",\n    //  => Edit\n    value: function handleEditFieldRequestClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditFieldRequestClick$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.fieldRequestList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                fieldRequestList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelFieldRequestClick\",\n    value: function handleCancelFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldRequestList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].label = true;\n      copyArray[index].error = '';\n      this.setState({\n        fieldRequestList: copyArray\n      });\n    } // Update\n\n  }, {\n    key: \"handleUpdateFieldRequestClick\",\n    value: function handleUpdateFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldRequestList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          fieldRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          this.setState({\n            fieldRequestList: copyArray,\n            showModalMessage: 'Product Field Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Add\n\n  }, {\n    key: \"handleAddFieldRequestClick\",\n    value: function handleAddFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        fieldRequestList: copyArray,\n        showModalMessage: 'Product Field Added Successfully',\n        showModal: true\n      });\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteFieldRequestClick\",\n    value: function handleDeleteFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        fieldRequestList: copyArray,\n        showModalMessage: 'Product Field Deleted',\n        showModal: true\n      });\n    } // All fields\n    //  => Chane\n\n  }, {\n    key: \"handleEditFieldClick\",\n    //  => Edit\n    value: function handleEditFieldClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditFieldClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.fieldList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                fieldList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelFieldClick\",\n    value: function handleCancelFieldClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        fieldList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateFieldClick\",\n    value: function handleUpdateFieldClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fieldList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          fieldRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          fieldsArray.forEach(function (element, i) {\n            if (copyArray[index].prevVal == element.value) {\n              element.value = copyArray[index].value;\n            }\n          });\n          this.setState({\n            fieldList: copyArray,\n            showModalMessage: 'Product Field Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Delete\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this2.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconName: faThumbsUp,\n        color: \"#00b300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 17\n        }\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Fields',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }), __jsx(CardAccordion, {\n        title: 'Add New Field',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Field Value\",\n        name: \"sku\",\n        value: this.state.fieldValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            fieldValue: e.target.value\n          });\n        },\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 33\n        }\n      }, this.state.error))), __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Field Value\",\n        name: \"sku\",\n        value: this.state.fieldValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            fieldValue: e.target.value\n          });\n        },\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 33\n        }\n      }, this.state.error)))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 25\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Field', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 53\n        }\n      }) : null))), __jsx(CardAccordion, {\n        title: 'Add Field Requests',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 17\n        }\n      }, this.state.fieldRequestList.map(function (data, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: data.value,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 33\n          }\n        })), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: data.value,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 33\n          }\n        })), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 4,\n          md: 4,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: data.value,\n          onChange: function onChange(e) {\n            return _this2.handleFieldRequestChange(e, index);\n          },\n          isInvalid: data.error,\n          disabled: data.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 37\n          }\n        }, data.error))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return data.label ? _this2.handleEditFieldRequestClick(index) : _this2.handleUpdateFieldRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 37\n          }\n        }, data.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            data.label ? _this2.handleAddFieldRequestClick(index) : _this2.handleCancelFieldRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 37\n          }\n        }, data.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return _this2.handleDeleteFieldRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 37\n          }\n        }, \"Discard\"))));\n      })), __jsx(CardAccordion, {\n        title: 'All Fields',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Field Value\",\n        name: \"sku\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this2.handleFilterStrChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 33\n        }\n      })))), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }\n      }), this.state.fieldList.map(function (data, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 8,\n          md: 8,\n          sm: 12,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: data.value,\n          onChange: function onChange(e) {\n            return _this2.handleFieldChange(e, index);\n          },\n          disabled: data.label,\n          isInvalid: data.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 37\n          }\n        }, data.error))), __jsx(Form.Group, {\n          as: Col,\n          lg: 1,\n          md: 1,\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: data.label ? function () {\n            return _this2.handleEditFieldClick(index);\n          } : function () {\n            return _this2.handleUpdateFieldClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 37\n          }\n        }, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: data.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: data.label ? function () {\n            return _this2.handleDeleteFieldClick(index);\n          } : function () {\n            return _this2.handleCancelFieldClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 37\n          }\n        }, data.label ? 'Delete' : 'Cancel'))));\n      })));\n    }\n  }]);\n\n  return ProducFields;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-fields.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","fieldsArray","ProducFields","props","e","index","copyArray","Object","assign","state","fieldRequestList","value","target","length","error","setState","fieldList","forEach","element","i","splice","showModalMessage","showModal","isLoading","showToast","fieldValue","editRequestedField","filterStr","url","PATH","get","response","data","label","console","log","array","filter","includes","push","addField","obj","prevVal","handleSubmit","bind","styles","submit_btn","map","handleFieldRequestChange","handleEditFieldRequestClick","handleUpdateFieldRequestClick","handleAddFieldRequestClick","handleCancelFieldRequestClick","handleDeleteFieldRequestClick","margin","handleFilterStrChange","handleFieldChange","handleEditFieldClick","handleUpdateFieldClick","handleDeleteFieldClick","handleCancelFieldClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,EAA+BC,GAA/B,EAAoCC,IAApC,EAA0CC,UAA1C,EAAsDC,MAAtD,EAA8DC,OAA9D,QAA6E,iBAA7E;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,UAA5B,QAA8C,mCAA9C;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qCAAzC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,sCAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AAEA,IAAIC,WAAW,GAAG,EAAlB;;IACMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,+EAoFQ,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACrC,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKC,KAAL,CAAWC,gBAA7B,CAAZ;AACAJ,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,GAAyBP,CAAC,CAACQ,MAAF,CAASD,KAAlC;;AAEA,UAAIP,CAAC,CAACQ,MAAF,CAASD,KAAT,IAAkB,EAAlB,IAAwBP,CAAC,CAACQ,MAAF,CAASD,KAAT,CAAeE,MAAf,IAAyB,EAAjD,IAAuDT,CAAC,CAACQ,MAAF,CAASD,KAAT,CAAeE,MAAf,IAAyB,CAApF,EAAuF;AACnFP,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,EAAzB;AACH,OAFD,MAEO;AACHR,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,+BAAzB;AACH;;AACD,YAAKC,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAEJ;AAApB,OAAd;AACH,KA/FkB;;AAAA,wEAyJC,UAACF,CAAD,EAAIC,KAAJ,EAAc;AAC9B,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKC,KAAL,CAAWO,SAA7B,CAAZ;AACAV,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,GAAyBP,CAAC,CAACQ,MAAF,CAASD,KAAlC;;AAEA,UAAIP,CAAC,CAACQ,MAAF,CAASD,KAAT,IAAkB,EAAlB,IAAwBP,CAAC,CAACQ,MAAF,CAASD,KAAT,CAAeE,MAAf,IAAyB,EAAjD,IAAuDT,CAAC,CAACQ,MAAF,CAASD,KAAT,CAAeE,MAAf,IAAyB,CAApF,EAAuF;AACnFP,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,EAAzB;AACH,OAFD,MAEO;AACHR,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,+BAAzB;AACH;;AACD,YAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEV;AAAb,OAAd;AACH,KApKkB;;AAAA,6EA+MM,UAACD,KAAD,EAAW;AAChC,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKC,KAAL,CAAWO,SAA7B,CAAZ;AACAf,MAAAA,WAAW,CAACgB,OAAZ,CAAoB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAChC,YAAIb,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,IAA0BO,OAAO,CAACP,KAAtC,EAA6C;AACzCV,UAAAA,WAAW,CAACmB,MAAZ,CAAmBf,KAAnB,EAA0B,CAA1B;AACH;AACJ,OAJD;AAKAC,MAAAA,SAAS,CAACc,MAAV,CAAiBf,KAAjB,EAAwB,CAAxB;;AACA,YAAKU,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEV,SAAb;AAAwBe,QAAAA,gBAAgB,EAAE,uBAA1C;AAAmEC,QAAAA,SAAS,EAAE;AAA9E,OAAd;AACH,KAzNkB;;AAEf,UAAKb,KAAL,GAAa;AACTc,MAAAA,SAAS,EAAE,KADF;AAETC,MAAAA,SAAS,EAAE,KAFF;AAGTC,MAAAA,UAAU,EAAE,EAHH;AAITX,MAAAA,KAAK,EAAE,EAJE;AAKTE,MAAAA,SAAS,EAAE,EALF;AAMTN,MAAAA,gBAAgB,EAAE,EANT;AAQTgB,MAAAA,kBAAkB,EAAE,EARX;AASTL,MAAAA,gBAAgB,EAAE,EATT;AAUTC,MAAAA,SAAS,EAAE,KAVF;AAYTK,MAAAA,SAAS,EAAE;AAZF,KAAb;AAFe;AAgBlB,G,CAED;;;;;;;;;;;AAEUC,cAAAA,G,GAAMjC,aAAa,CAACkC,IAAd,GAAqB,kC;;;+CAENhC,KAAK,CAACiC,GAAN,CAAUF,GAAV,C;;;AAAjBG,cAAAA,Q;AACFzB,cAAAA,S,GAAY,E;AAChBA,cAAAA,SAAS,GAAGyB,QAAQ,CAACC,IAAT,CAAcA,IAA1B;AACA1B,cAAAA,SAAS,CAACW,OAAV,CAAkB,UAACe,IAAD,EAAO3B,KAAP,EAAiB;AAC/B2B,gBAAAA,IAAI,CAACC,KAAL,GAAa,IAAb;AACH,eAFD;AAGA,mBAAKlB,QAAL,CAAc;AAAEC,gBAAAA,SAAS,EAAEV;AAAb,eAAd;AACA,mBAAKS,QAAL,CAAc;AAAEL,gBAAAA,gBAAgB,EAAE,KAAKD,KAAL,CAAWO;AAA/B,eAAd;AACAf,cAAAA,WAAW,GAAGK,SAAd;;;;;;;AAEA4B,cAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;;;;;;;;;;;;;;;AAKJ;AACA;AACA;AACA;AACA;AACA;AACA,mBAAKpB,QAAL,CAAc;AAAEQ,gBAAAA,SAAS,EAAE;AAAb,eAAd;AACA,mBAAKR,QAAL,CAAc;AAAEM,gBAAAA,gBAAgB,EAAE;AAApB,eAAd;AACA,mBAAKN,QAAL,CAAc;AAAEO,gBAAAA,SAAS,EAAE;AAAb,eAAd;gDACO,I;;;;;;;;;;;0CAQWlB,C,EAAG;AACrB,WAAKW,QAAL,CAAc;AAAEY,QAAAA,SAAS,EAAEvB,CAAC,CAACQ,MAAF,CAASD;AAAtB,OAAd;;AACA,UAAIP,CAAC,CAACQ,MAAF,CAASD,KAAT,IAAkB,EAAtB,EAA0B;AACtB,aAAKI,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEf;AAAb,SAAd;AACH,OAFD,MAEO;AACH,YAAImC,KAAK,GAAG,EAAZ;AACA,aAAK3B,KAAL,CAAWO,SAAX,CAAqBqB,MAArB,CAA4B,UAAUL,IAAV,EAAgB;AACxC;AACA,cAAIA,IAAI,CAACrB,KAAL,CAAW2B,QAAX,CAAoBlC,CAAC,CAACQ,MAAF,CAASD,KAA7B,CAAJ,EAAyC;AACrCyB,YAAAA,KAAK,CAACG,IAAN,CAAWP,IAAX;AACH;AACJ,SALD;AAMA,aAAKjB,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAEoB;AAAb,SAAd;AACH;AACJ;;;mCAEc;AACX,UAAIX,UAAU,IAAI,EAAlB,EAAsB;AAClB,aAAKV,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAFD,MAEO;AACH,aAAKC,QAAL,CAAc;AAAEQ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,aAAKR,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAd;AACA,aAAK0B,QAAL,CAAc,IAAd;AACH;AACJ,K,CAID;AACA;;;;AAaA;gDACkCnC,K;;;;;;AAC1BC,cAAAA,S,GAAY,E;AAChBA,cAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,gBAA7B,CAAZ;AACI+B,cAAAA,G,GAAM,E;AACVA,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAenC,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAhC;AACA8B,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAe,KAAf;AACAA,cAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBnC,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAlC;AACA8B,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAe,EAAf;AACAnC,cAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBoC,GAAnB;;+CACM,KAAK1B,QAAL,CAAc;AAAEL,gBAAAA,gBAAgB,EAAEJ;AAApB,eAAd,C;;;;;;;;MAEV;;;;kDAC8BD,K,EAAO;AACjC,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,gBAA7B,CAAZ;AACAJ,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,GAAyBL,SAAS,CAACD,KAAD,CAAT,CAAiBqC,OAA1C;AACApC,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiB4B,KAAjB,GAAyB,IAAzB;AACA3B,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,EAAzB;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAEJ;AAApB,OAAd;AACH,K,CACD;;;;kDAC8BD,K,EAAO;AACjC,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,gBAA7B,CAAZ;;AACA,UAAIJ,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,IAA0BL,SAAS,CAACD,KAAD,CAAT,CAAiBqC,OAA/C,EAAwD;AACpDpC,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,uBAAzB;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA,gBAAgB,EAAEJ;AAApB,SAAd;AACH,OAHD,MAGO;AACH,YAAIA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,IAA0B,EAA9B,EAAkC;AAC9BR,UAAAA,SAAS,CAACD,KAAD,CAAT,CAAiB4B,KAAjB,GAAyB,IAAzB;AACA,eAAKlB,QAAL,CAAc;AAAEL,YAAAA,gBAAgB,EAAEJ,SAApB;AAA+Be,YAAAA,gBAAgB,EAAE,oCAAjD;AAAuFC,YAAAA,SAAS,EAAE;AAAlG,WAAd;AACH;AACJ;AACJ,K,CACD;;;;+CAC2BjB,K,EAAO;AAC9B,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,gBAA7B,CAAZ;AACAJ,MAAAA,SAAS,CAACc,MAAV,CAAiBf,KAAjB,EAAwB,CAAxB;AACA,WAAKU,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAEJ,SAApB;AAA+Be,QAAAA,gBAAgB,EAAE,kCAAjD;AAAqFC,QAAAA,SAAS,EAAE;AAAhG,OAAd;AACH,K,CACD;;;;kDAC8BjB,K,EAAO;AACjC,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,gBAA7B,CAAZ;AACAJ,MAAAA,SAAS,CAACc,MAAV,CAAiBf,KAAjB,EAAwB,CAAxB;AACA,WAAKU,QAAL,CAAc;AAAEL,QAAAA,gBAAgB,EAAEJ,SAApB;AAA+Be,QAAAA,gBAAgB,EAAE,uBAAjD;AAA0EC,QAAAA,SAAS,EAAE;AAArF,OAAd;AACH,K,CAOD;AACA;;;;AAcA;yCAC2BjB,K;;;;;;AACnBC,cAAAA,S,GAAY,E;AAChBA,cAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWO,SAA7B,CAAZ;AACIyB,cAAAA,G,GAAM,E;AACVA,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAenC,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAhC;AACA8B,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAe,KAAf;AACAA,cAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBnC,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAlC;AACA8B,cAAAA,GAAG,CAAC,OAAD,CAAH,GAAe,EAAf;AACAnC,cAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBoC,GAAnB;;+CACM,KAAK1B,QAAL,CAAc;AAAEC,gBAAAA,SAAS,EAAEV;AAAb,eAAd,C;;;;;;;;MAEV;;;;2CACuBD,K,EAAO;AAC1B,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWO,SAA7B,CAAZ;AACAV,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,GAAyBL,SAAS,CAACD,KAAD,CAAT,CAAiBqC,OAA1C;AACApC,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,EAAzB;AACAR,MAAAA,SAAS,CAACD,KAAD,CAAT,CAAiB4B,KAAjB,GAAyB,IAAzB;AACA,WAAKlB,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAEV;AAAb,OAAd;AACH,K,CACD;;;;2CACuBD,K,EAAO;AAC1B,UAAIC,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWO,SAA7B,CAAZ;;AACA,UAAIV,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjB,IAA0BL,SAAS,CAACD,KAAD,CAAT,CAAiBqC,OAA/C,EAAwD;AACpDpC,QAAAA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,GAAyB,uBAAzB;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA,gBAAgB,EAAEJ;AAApB,SAAd;AACH,OAHD,MAGO;AACH,YAAIA,SAAS,CAACD,KAAD,CAAT,CAAiBS,KAAjB,IAA0B,EAA9B,EAAkC;AAC9BR,UAAAA,SAAS,CAACD,KAAD,CAAT,CAAiB4B,KAAjB,GAAyB,IAAzB;AACAhC,UAAAA,WAAW,CAACgB,OAAZ,CAAoB,UAACC,OAAD,EAAUC,CAAV,EAAgB;AAChC,gBAAIb,SAAS,CAACD,KAAD,CAAT,CAAiBqC,OAAjB,IAA4BxB,OAAO,CAACP,KAAxC,EAA+C;AAC3CO,cAAAA,OAAO,CAACP,KAAR,GAAgBL,SAAS,CAACD,KAAD,CAAT,CAAiBM,KAAjC;AACH;AACJ,WAJD;AAKA,eAAKI,QAAL,CAAc;AAAEC,YAAAA,SAAS,EAAEV,SAAb;AAAwBe,YAAAA,gBAAgB,EAAE,oCAA1C;AAAgFC,YAAAA,SAAS,EAAE;AAA3F,WAAd;AACH;AACJ;AACJ,K,CACD;;;;6BAaS;AAAA;;AACL,aACI,4BACI,MAAC,UAAD;AACI,QAAA,MAAM,EAAE,gBAAClB,CAAD;AAAA,iBAAO,MAAI,CAACW,QAAL,CAAc;AAAEO,YAAAA,SAAS,EAAE;AAAb,WAAd,CAAP;AAAA,SADZ;AAEI,QAAA,IAAI,EAAE,KAAKb,KAAL,CAAWa,SAFrB;AAGI,QAAA,MAAM,EAAE,SAHZ;AAII,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWY,gBAJxB;AAKI,QAAA,QAAQ,EAAE9B,UALd;AAMI,QAAA,KAAK,EAAE,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI,MAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,SAAhB;AAA2B,QAAA,KAAK,EAAE,mCAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,EAaI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEP,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,IAAI,EAAC,KAJT;AAKI,QAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWgB,UALtB;AAMI,QAAA,QAAQ,EAAE,kBAACrB,CAAD;AAAA,iBAAO,MAAI,CAACW,QAAL,CAAc;AAAEU,YAAAA,UAAU,EAAErB,CAAC,CAACQ,MAAF,CAASD;AAAvB,WAAd,CAAP;AAAA,SANd;AAOI,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWK,KAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWK,KADhB,CAVJ,CADJ,CADJ,EAiBI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAEhC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,IAAI,EAAC,KAJT;AAKI,QAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWgB,UALtB;AAMI,QAAA,QAAQ,EAAE,kBAACrB,CAAD;AAAA,iBAAO,MAAI,CAACW,QAAL,CAAc;AAAEU,YAAAA,UAAU,EAAErB,CAAC,CAACQ,MAAF,CAASD;AAAvB,WAAd,CAAP;AAAA,SANd;AAOI,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWK,KAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAUI,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,QAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKL,KAAL,CAAWK,KADhB,CAVJ,CADJ,CAjBJ,CADJ,EAmCI,MAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,OAAO,EAAE,KAAK6B,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAzC;AAAuE,QAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWc,SAA5F;AAAuG,QAAA,KAAK,MAA5G;AAA6G,QAAA,KAAK,EAAEsB,MAAM,CAACC,UAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKrC,KAAL,CAAWc,SAAX,GAAuB,WAAvB,GAAqC,WAD1C,EAEK,KAAKd,KAAL,CAAWc,SAAX,GAAuB,MAAC,OAAD;AAAS,QAAA,SAAS,EAAC,MAAnB;AAA0B,QAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAvB,GAAgE,IAFrE,CADJ,CAnCJ,CAbJ,EAyDI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKd,KAAL,CAAWC,gBAAX,CAA4BqC,GAA5B,CAAgC,UAACf,IAAD,EAAO3B,KAAP;AAAA,eAC7B,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEvB,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,KAJT;AAKI,UAAA,KAAK,EAAEkD,IAAI,CAACrB,KALhB;AAMI,UAAA,QAAQ,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,EAWI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE7B,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,KAJT;AAKI,UAAA,KAAK,EAAEkD,IAAI,CAACrB,KALhB;AAMI,UAAA,QAAQ,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAXJ,EAqBI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArBJ,EAsBI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAE7B,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,CAAvC;AAA0C,UAAA,EAAE,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,KAJT;AAKI,UAAA,KAAK,EAAEkD,IAAI,CAACrB,KALhB;AAMI,UAAA,QAAQ,EAAE,kBAACP,CAAD;AAAA,mBAAO,MAAI,CAAC4C,wBAAL,CAA8B5C,CAA9B,EAAiCC,KAAjC,CAAP;AAAA,WANd;AAOI,UAAA,SAAS,EAAE2B,IAAI,CAAClB,KAPpB;AAQI,UAAA,QAAQ,EAAEkB,IAAI,CAACC,KARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAWI,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IAAI,CAAClB,KADV,CAXJ,CADJ,CAtBJ,EAuCI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvCJ,EAwCI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEhC,GAAhB;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,EAAE,EAAC,MAAlC;AAAyC,UAAA,EAAE,EAAC,MAA5C;AAAmD,UAAA,EAAE,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,iBAA9B;AAAgD,UAAA,IAAI,EAAC,IAArD;AAA0D,UAAA,KAAK,MAA/D;AAAgE,UAAA,KAAK,EAAE+D,MAAM,CAACC,UAA9E;AACI,UAAA,OAAO,EAAE;AAAA,mBAAMd,IAAI,CAACC,KAAL,GAAa,MAAI,CAACgB,2BAAL,CAAiC5C,KAAjC,CAAb,GAAuD,MAAI,CAAC6C,6BAAL,CAAmC7C,KAAnC,CAA7D;AAAA,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM2B,IAAI,CAACC,KAAL,GAAa,MAAb,GAAsB,QAA5B,CAFJ,CADJ,CAxCJ,EA8CI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEnD,GAAhB;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,EAAE,EAAC,MAAlC;AAAyC,UAAA,EAAE,EAAC,MAA5C;AAAmD,UAAA,EAAE,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,iBAA9B;AAAgD,UAAA,IAAI,EAAC,IAArD;AAA0D,UAAA,KAAK,MAA/D;AAAgE,UAAA,KAAK,EAAE+D,MAAM,CAACC,UAA9E;AACI,UAAA,OAAO,EAAE,mBAAM;AAAEd,YAAAA,IAAI,CAACC,KAAL,GAAa,MAAI,CAACkB,0BAAL,CAAgC9C,KAAhC,CAAb,GAAsD,MAAI,CAAC+C,6BAAL,CAAmC/C,KAAnC,CAAtD;AAAiG,WADtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM2B,IAAI,CAACC,KAAL,GAAa,KAAb,GAAqB,QAA3B,CAFJ,CADJ,CA9CJ,EAoDI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApDJ,EAqDI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEnD,GAAhB;AAAqB,UAAA,EAAE,EAAC,MAAxB;AAA+B,UAAA,EAAE,EAAC,MAAlC;AAAyC,UAAA,EAAE,EAAC,MAA5C;AAAmD,UAAA,EAAE,EAAC,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,gBAA9B;AAA+C,UAAA,IAAI,EAAC,IAApD;AAAyD,UAAA,KAAK,MAA9D;AAA+D,UAAA,KAAK,EAAE+D,MAAM,CAACC,UAA7E;AACI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACO,6BAAL,CAAmChD,KAAnC,CAAN;AAAA,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CArDJ,CAD6B;AAAA,OAAhC,CADL,CAzDJ,EA4HI,MAAC,aAAD;AAAe,QAAA,KAAK,EAAE,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,GAAN;AAAU,QAAA,KAAK,EAAE;AAAEiD,UAAAA,MAAM,EAAE;AAAV,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAExE,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,IAAD,CAAM,OAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,IAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAII,QAAA,IAAI,EAAC,KAJT;AAKI,QAAA,KAAK,EAAE,KAAK2B,KAAL,CAAWkB,SALtB;AAMI,QAAA,QAAQ,EAAE,kBAACvB,CAAD;AAAA,iBAAO,MAAI,CAACmD,qBAAL,CAA2BnD,CAA3B,CAAP;AAAA,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,CADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,EAgBK,KAAKK,KAAL,CAAWO,SAAX,CAAqB+B,GAArB,CAAyB,UAACf,IAAD,EAAO3B,KAAP;AAAA,eACtB,MAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEvB,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAE,EAAvC;AAA2C,UAAA,EAAE,EAAE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,IAAD,CAAM,OAAN;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,IAAI,EAAC,IAFT;AAGI,UAAA,WAAW,EAAC,mBAHhB;AAII,UAAA,IAAI,EAAC,KAJT;AAKI,UAAA,KAAK,EAAEkD,IAAI,CAACrB,KALhB;AAMI,UAAA,QAAQ,EAAE,kBAACP,CAAD;AAAA,mBAAO,MAAI,CAACoD,iBAAL,CAAuBpD,CAAvB,EAA0BC,KAA1B,CAAP;AAAA,WANd;AAOI,UAAA,QAAQ,EAAE2B,IAAI,CAACC,KAPnB;AAQI,UAAA,SAAS,EAAED,IAAI,CAAClB,KARpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAWI,MAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,UAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKkB,IAAI,CAAClB,KADV,CAXJ,CADJ,CADJ,EAkBI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEhC,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAC,MAAtC;AAA6C,UAAA,EAAE,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAC,iBAA9B;AAAgD,UAAA,IAAI,EAAC,IAArD;AAA0D,UAAA,KAAK,MAA/D;AAAgE,UAAA,KAAK,EAAE+D,MAAM,CAACC,UAA9E;AACI,UAAA,OAAO,EAAEd,IAAI,CAACC,KAAL,GAAa;AAAA,mBAAM,MAAI,CAACwB,oBAAL,CAA0BpD,KAA1B,CAAN;AAAA,WAAb,GAAsD;AAAA,mBAAM,MAAI,CAACqD,sBAAL,CAA4BrD,KAA5B,CAAN;AAAA,WADnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM2B,IAAI,CAACC,KAAL,GAAa,MAAb,GAAsB,QAA5B,CAFJ,CADJ,CAlBJ,EAwBI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAxBJ,EAyBI,MAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAEnD,GAAhB;AAAqB,UAAA,EAAE,EAAE,CAAzB;AAA4B,UAAA,EAAE,EAAE,CAAhC;AAAmC,UAAA,EAAE,EAAC,MAAtC;AAA6C,UAAA,EAAE,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,MAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEkD,IAAI,CAACC,KAAL,GAAa,gBAAb,GAAgC,iBAA/D;AAAkF,UAAA,IAAI,EAAC,IAAvF;AAA4F,UAAA,KAAK,MAAjG;AAAkG,UAAA,KAAK,EAAEY,MAAM,CAACC,UAAhH;AACI,UAAA,OAAO,EAAEd,IAAI,CAACC,KAAL,GAAa;AAAA,mBAAM,MAAI,CAAC0B,sBAAL,CAA4BtD,KAA5B,CAAN;AAAA,WAAb,GAAwD;AAAA,mBAAM,MAAI,CAACuD,sBAAL,CAA4BvD,KAA5B,CAAN;AAAA,WADrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAM2B,IAAI,CAACC,KAAL,GAAa,QAAb,GAAwB,QAA9B,CAFJ,CADJ,CAzBJ,CADsB;AAAA,OAAzB,CAhBL,CA5HJ,CADJ;AAmLH;;;;EAhZsBvC,S;;AAmZ3B,IAAMmD,MAAM,GAAG;AACXgB,EAAAA,SAAS,EAAE;AACPC,IAAAA,YAAY,EAAE,gBADP;AAEPC,IAAAA,OAAO,EAAE;AAFF,GADA;AAKXC,EAAAA,iBAAiB,EAAE;AACfC,IAAAA,KAAK,EAAE,MADQ;AAEfC,IAAAA,WAAW,EAAE,IAFE;AAGfC,IAAAA,KAAK,EAAE,MAHQ;AAIfC,IAAAA,MAAM,EAAE,MAJO;AAKfC,IAAAA,SAAS,EAAE,MALI;AAMfC,IAAAA,QAAQ,EAAE;AANK,GALR;AAaXC,EAAAA,KAAK,EAAE;AACHN,IAAAA,KAAK,EAAE;AADJ,GAbI;AAiBXO,EAAAA,IAAI,EAAE;AACF;AACAlB,IAAAA,MAAM,EAAE;AAFN,GAjBK;AAqBXmB,EAAAA,SAAS,EAAE,CACP;AADO,GArBA;AAwBXxC,EAAAA,KAAK,EAAE;AACHyC,IAAAA,QAAQ,YAAK9E,gBAAgB,CAAC+E,mBAAtB;AADL,GAxBI;AA2BX7D,EAAAA,KAAK,EAAE;AACHqD,IAAAA,KAAK,EAAE,MADJ;AAEHS,IAAAA,SAAS,EAAE,QAFR;AAGHX,IAAAA,KAAK,EAAE,SAHJ;AAIHS,IAAAA,QAAQ,EAAE;AAJP,GA3BI;AAiCXG,EAAAA,oBAAoB,EAAE;AAClBZ,IAAAA,KAAK,YAAKrE,gBAAgB,CAACkF,kBAAtB,CADa;AAElBZ,IAAAA,WAAW,EAAE,KAFK;AAGlBC,IAAAA,KAAK,EAAE,MAHW;AAIlBC,IAAAA,MAAM,EAAE,MAJU;AAKlBC,IAAAA,SAAS,EAAE,MALO;AAMlBC,IAAAA,QAAQ,EAAE;AANQ;AAjCX,CAAf;AA0CA,eAAepE,YAAf","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nlet fieldsArray = [];\r\nclass ProducFields extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            fieldValue: '',\r\n            error: '',\r\n            fieldList: [],\r\n            fieldRequestList: [],\r\n\r\n            editRequestedField: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Fields from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = [];\r\n            copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ fieldList: copyArray });\r\n            this.setState({ fieldRequestList: this.state.fieldList });\r\n            fieldsArray = copyArray;\r\n        } catch (error) {\r\n            console.log('feror:', error);\r\n        }\r\n    }\r\n\r\n    async addField() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.fieldValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showModalMessage: 'Product Field Added Successfully' })\r\n        this.setState({ showModal: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ fieldList: fieldsArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.fieldList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ fieldList: array });\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (fieldValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addField(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Field Request \r\n    // => Field Value \r\n    handleFieldRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ fieldRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All fields\r\n    //  => Chane\r\n    handleFieldChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ fieldRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                fieldsArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ fieldList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        fieldsArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                fieldsArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldList: copyArray, showModalMessage: 'Product Field Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Fields'} />\r\n\r\n                {/* Add New Field */}\r\n                <CardAccordion title={'Add New Field'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.fieldValue}\r\n                                    onChange={(e) => this.setState({ fieldValue: e.target.value })}\r\n                                    isInvalid={this.state.error}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.error}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.fieldValue}\r\n                                    onChange={(e) => this.setState({ fieldValue: e.target.value })}\r\n                                    isInvalid={this.state.error}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.error}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Field'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Field Requests */}\r\n                <CardAccordion title={'Add Field Requests'}>\r\n                    {this.state.fieldRequestList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleFieldRequestChange(e, index)}\r\n                                        isInvalid={data.error}\r\n                                        disabled={data.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => data.label ? this.handleEditFieldRequestClick(index) : this.handleUpdateFieldRequestClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { data.label ? this.handleAddFieldRequestClick(index) : this.handleCancelFieldRequestClick(index) }}>\r\n                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteFieldRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Fields */}\r\n                <CardAccordion title={'All Fields'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.fieldList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleFieldChange(e, index)}\r\n                                        disabled={data.label}\r\n                                        isInvalid={data.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleEditFieldClick(index) : () => this.handleUpdateFieldClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleDeleteFieldClick(index) : () => this.handleCancelFieldClick(index)}>\r\n                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducFields\r\n"]},"metadata":{},"sourceType":"module"}