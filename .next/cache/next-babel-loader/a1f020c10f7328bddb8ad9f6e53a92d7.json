{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-category.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Row, Form, Col, Card, Button, Spinner, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport ShowToast from '../../../../toast';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\nimport TitleRow from '../../../../title-row';\n\nvar AddCategory = /*#__PURE__*/function (_Component) {\n  _inherits(AddCategory, _Component);\n\n  var _super = _createSuper(AddCategory);\n\n  function AddCategory(props) {\n    var _this;\n\n    _classCallCheck(this, AddCategory);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryValueChange\", function (e) {\n      _this.setState({\n        categoryValue: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function () {\n      if (_this.state.categoryValue == '') {\n        _this.setState({\n          error: 'Enter Value First'\n        });\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        _this.setState({\n          error: ''\n        });\n\n        _this.addCategory(_assertThisInitialized(_this));\n      }\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: ''\n    };\n    return _this;\n  } //  Submit data to api\n\n\n  _createClass(AddCategory, [{\n    key: \"addCategory\",\n    value: function addCategory(currentComponent) {\n      return _regeneratorRuntime.async(function addCategory$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, this.state.showToast ? __jsx(ShowToast, {\n        onCloseHandler: function onCloseHandler(e) {\n          return _this2.setState({\n            showToast: false\n          });\n        },\n        show: this.state.showToast,\n        header: 'Success',\n        message: 'Category Added Successfully',\n        iconName: faThumbsUp,\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }\n      }) : null, __jsx(TitleRow, {\n        icon: faPlus,\n        title: 'Vendor Dashboard / Add New Category',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }), __jsx(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, __jsx(Card.Header, {\n        style: styles.card_header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      }, \"Product Category\"), __jsx(Card.Body, {\n        style: styles.card_body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: this.handleCategoryValueChange,\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, this.state.error))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 61\n        }\n      }) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 102\n        }\n      })))))));\n    }\n  }]);\n\n  return AddCategory;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '5%'\n  },\n  card_header: {\n    fontSize: \"\".concat(GlobalStyleSheet.card_header_fontsize),\n    background: \"\".concat(GlobalStyleSheet.card_header_background)\n  },\n  card_body: {\n    padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default AddCategory;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-category.js"],"names":["React","Component","Row","Form","Col","Card","Button","Spinner","InputGroup","FontAwesomeIcon","faPlus","faThumbsUp","faThumbsDown","ShowToast","GlobalStyleSheet","TitleRow","AddCategory","props","e","setState","categoryValue","target","value","state","error","isLoading","addCategory","showToast","currentComponent","styles","card","card_header","card_body","handleCategoryValueChange","handleSubmit","bind","submit_btn","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","margin","fontSize","card_header_fontsize","background","card_header_background","textAlign"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Form, Col, Card, Button, Spinner, InputGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport ShowToast from '../../../../toast';\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\nimport TitleRow from '../../../../title-row'\r\nclass AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n        }\r\n    }\r\n    //  Submit data to api\r\n    async addCategory(currentComponent) {\r\n        // const url = MuhalikConfig.PATH + '/api/categories/add-category';\r\n        // await axios.post(url, {\r\n        //     this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     currentComponent.setState({ showToast: true });\r\n        //     return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n    handleCategoryValueChange = (e) => {\r\n        this.setState({ categoryValue: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true });\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showToast ? <ShowToast onCloseHandler={(e) => this.setState({ showToast: false })} show={this.state.showToast}\r\n                    header={'Success'} message={'Category Added Successfully'} iconName={faThumbsUp} color={\"green\"} />\r\n                    : null\r\n                }\r\n                <TitleRow icon={faPlus} title={'Vendor Dashboard / Add New Category'} />\r\n\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header style={styles.card_header}>\r\n                            Product Category\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            <Form.Group>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={this.state.categoryValue}\r\n                                        onChange={this.handleCategoryValueChange}\r\n                                        isInvalid={this.state.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                    {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                    {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '5%'\r\n    },\r\n    card_header: {\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n    card_body: {\r\n        padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n\r\n}\r\n\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}