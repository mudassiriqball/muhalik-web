{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nconst groupStyles = {\n  border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\n  borderRadius: '5px',\n  background: 'white',\n  color: `${GlobalStyleSheet.admin_primry_color}`\n};\n\nconst Group = props => __jsx(\"div\", {\n  style: groupStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, __jsx(components.Group, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n})));\n\nconst CustomFields = props => {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [fieldName, setFieldName] = React.useState('');\n  const [fieldValue, setFieldValue] = React.useState('');\n\n  function handleAddCustomFieldBtnClick() {\n    if (this.state.customFieldName != '' && this.state.customFieldValue != '') {\n      const copyArray = Object.assign([], this.state.variationsArray);\n\n      if (this.state.isVariableProduct == true) {\n        copyArray.forEach(element => {\n          element.customField.push({\n            name: this.state.customFieldName,\n            value: this.state.customFieldValue\n          });\n          console.log(\"element.customField: \", element.customField);\n        });\n        this.setState({\n          variationsArray: copyArray\n        });\n      } else {\n        this.state.customFieldsArray.push({\n          name: this.state.customFieldName,\n          value: this.state.customFieldValue\n        });\n      }\n\n      this.setState({\n        customFieldError: ''\n      });\n      this.setState({\n        customFieldName: ''\n      });\n      this.setState({\n        customFieldValue: ''\n      });\n      this.setState({\n        customFieldNameSelected: ''\n      });\n    } else {\n      this.setState({\n        customFieldError: 'Enter Field Name and Value'\n      });\n    }\n  }\n\n  function deleteCustomFieldsClick(index) {\n    const copyArray = Object.assign([], this.state.customFieldsArray);\n    copyArray.splice(index, 1);\n    this.setState({\n      customFieldsArray: copyArray\n    });\n  }\n\n  return __jsx(React.Fragment, null, props.showCustomFields ? __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, \" Please First Create Variations \") : __jsx(Form.Row, {\n    style: {\n      margin: '0%',\n      padding: '1.5%',\n      background: `${GlobalStyleSheet.body_color}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Field Name\"), __jsx(Select, {\n    styles: GlobalStyleSheet.react_select_styles,\n    options: groupedOptions,\n    components: {\n      Group\n    },\n    value: fieldName,\n    onChange: e => setFieldName(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    style: {\n      fontSize: '14px'\n    },\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: fieldValue,\n    onChange: e => setFieldValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    onClick: handleAddCustomFieldBtnClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Add Field\")), __jsx(\"div\", {\n    style: {\n      background: `${GlobalStyleSheet.body_color}`,\n      marginTop: '1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map((data, index) => __jsx(Form.Row, {\n    style: {\n      padding: '1% 2%'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: data.name,\n    onChange: () => data.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, data.name))), __jsx(Col, {\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: data.value,\n    onChange: () => data.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }), __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => deleteCustomFieldsClick(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, \" delete\")))))));\n};\n\nconst styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n    background: `${GlobalStyleSheet.card_header_background}`\n  },\n  label: {\n    fontSize: '13px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["React","Component","Accordion","Form","InputGroup","Col","Button","Row","Card","Modal","Nav","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","Select","components","groupedOptions","AddNewFieldNameModal","groupStyles","border","admin_primry_color","borderRadius","background","color","Group","props","CustomFields","modalShow","setModalShow","useState","fieldName","setFieldName","fieldValue","setFieldValue","handleAddCustomFieldBtnClick","state","customFieldName","customFieldValue","copyArray","Object","assign","variationsArray","isVariableProduct","forEach","element","customField","push","name","value","console","log","setState","customFieldsArray","customFieldError","customFieldNameSelected","deleteCustomFieldsClick","index","splice","showCustomFields","styles","label","margin","padding","body_color","react_select_styles","e","fontSize","target","error","marginTop","map","data","marginLeft","row","card","width","card_header","alignItems","card_header_fontsize","card_header_background","accordin_fontawesome","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [fieldName, setFieldName] = React.useState('')\r\n    const [fieldValue, setFieldValue] = React.useState('')\r\n\r\n    function handleAddCustomFieldBtnClick() {\r\n        if (this.state.customFieldName != '' && this.state.customFieldValue != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n\r\n            if (this.state.isVariableProduct == true) {\r\n                copyArray.forEach(element => {\r\n                    element.customField.push({\r\n                        name: this.state.customFieldName,\r\n                        value: this.state.customFieldValue\r\n                    });\r\n                    console.log(\"element.customField: \", element.customField);\r\n                });\r\n                this.setState({ variationsArray: copyArray })\r\n            } else {\r\n                this.state.customFieldsArray.push({\r\n                    name: this.state.customFieldName,\r\n                    value: this.state.customFieldValue,\r\n                })\r\n            }\r\n\r\n            this.setState({ customFieldError: '' })\r\n            this.setState({ customFieldName: '' })\r\n            this.setState({ customFieldValue: '' })\r\n            this.setState({ customFieldNameSelected: '' })\r\n        } else {\r\n            this.setState({ customFieldError: 'Enter Field Name and Value' });\r\n        }\r\n    }\r\n    function deleteCustomFieldsClick(index) {\r\n        const copyArray = Object.assign([], this.state.customFieldsArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ customFieldsArray: copyArray });\r\n    }\r\n    return (\r\n        <>\r\n            {props.showCustomFields ?\r\n                <Form.Label style={styles.label}> Please First Create Variations </Form.Label>\r\n                :\r\n                <Form.Row style={{ margin: '0%', padding: '1.5%', background: `${GlobalStyleSheet.body_color}` }}>\r\n                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                        <Select\r\n                            styles={GlobalStyleSheet.react_select_styles}\r\n                            options={groupedOptions}\r\n                            components={{ Group }}\r\n                            value={fieldName}\r\n                            onChange={(e) => setFieldName(e)}\r\n                        />\r\n                        <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                            Add New\r\n                        </Nav.Link>\r\n                        <AddNewFieldNameModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                style={{ fontSize: '14px' }}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Value\"\r\n                                name=\"sku\"\r\n                                value={fieldValue}\r\n                                onChange={(e) => setFieldValue(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Label style={styles.label}>\r\n                        {props.isVariableProduct ?\r\n                            <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                            : null\r\n                        }\r\n                        <span style={{ color: 'red' }}>\r\n                            {props.error}</span>\r\n                    </Form.Label>\r\n                    <Button variant=\"outline-primary\" size=\"sm\" block\r\n                        onClick={handleAddCustomFieldBtnClick}>Add Field</Button>\r\n                </Form.Row>\r\n            }\r\n\r\n\r\n            {/* Map */}\r\n            <div style={{ background: `${GlobalStyleSheet.body_color}`, marginTop: '1%' }}>\r\n                {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                    <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                        <Col lg={5} md={5} sm={12} xs={12}>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                size=\"sm\"\r\n                                value={data.name}\r\n                                onChange={() => data.name}\r\n                            >\r\n                                <option>{data.name}</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col lg={7} md={7} sm={12} xs={12}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    onChange={() => data.value}\r\n                                />\r\n                                <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                    onClick={() => deleteCustomFieldsClick(index)}> delete</Button>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}