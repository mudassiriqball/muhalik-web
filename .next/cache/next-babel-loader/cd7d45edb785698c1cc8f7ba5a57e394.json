{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nconst groupStyles = {\n  border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\n  borderRadius: '5px',\n  background: 'white',\n  color: `${GlobalStyleSheet.admin_primry_color}`\n};\n\nconst Group = props => __jsx(\"div\", {\n  style: groupStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, __jsx(components.Group, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }\n})));\n\nfunction MyVerticallyCenteredModal(props) {\n  return __jsx(Modal, _extends({}, props, {\n    size: \"md\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \"Add New Field\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Category Value\",\n    name: \"sku\",\n    value: this.state.categoryValue,\n    onChange: this.handleCategoryValueChange,\n    isInvalid: this.state.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, this.state.error))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    size: \"sm\",\n    onClick: this.handleSubmit.bind(this),\n    disabled: this.state.isLoading,\n    block: true,\n    style: styles.submit_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 49\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 90\n    }\n  })))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"Close\")));\n}\n\nconst CustomFields = props => {\n  const [modalShow, setModalShow] = React.useState(false);\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Header, {\n    style: styles.card_header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, \"Custome Fields\"), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      float: 'right',\n      background: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Row, {\n    style: {\n      margin: '0.5% 1%',\n      padding: '1% 2%',\n      background: 'lightGray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"Field Name\"), __jsx(Select, {\n    options: groupedOptions,\n    components: {\n      Group\n    },\n    value: props.customFieldNameSelected,\n    onChange: props.fieldNameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: () => setModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"Add New\"), __jsx(MyVerticallyCenteredModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.fieldValueHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 29\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    style: {\n      margin: '2% 0px'\n    },\n    onClick: props.addFieldHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Add Field\")), __jsx(\"div\", {\n    style: {\n      background: 'lightGray',\n      margin: '0.5% 1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 25\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map((data, index) => __jsx(Form.Row, {\n    style: {\n      padding: '1% 2%'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 37\n    }\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: data.customFieldName,\n    onChange: () => data.customFieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 45\n    }\n  }, data.customFieldName))), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 37\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 41\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: data.customFieldValue,\n    onChange: () => data.fieldValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 45\n    }\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => props.delete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }, \" delete\"))))))))));\n};\n\nconst styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  label: {\n    fontSize: '13px'\n  },\n  variations_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["React","Component","Accordion","Form","InputGroup","Col","Button","Row","Card","Modal","Nav","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","Select","components","groupedOptions","groupStyles","border","admin_primry_color","borderRadius","background","color","Group","props","MyVerticallyCenteredModal","state","categoryValue","handleCategoryValueChange","error","handleSubmit","bind","isLoading","styles","submit_btn","onHide","CustomFields","modalShow","setModalShow","useState","width","card","card_header","float","variations_fontawesome","margin","padding","label","customFieldNameSelected","fieldNameHandler","fontSize","value","fieldValueHandler","isVariableProduct","addFieldHandler","customFieldsArray","map","data","index","customFieldName","customFieldValue","fieldValue","marginLeft","delete","row","alignItems","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\n\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\nfunction MyVerticallyCenteredModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add New Field\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Group>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            size=\"sm\"\r\n                            placeholder=\"Enter Category Value\"\r\n                            name=\"sku\"\r\n                            value={this.state.categoryValue}\r\n                            onChange={this.handleCategoryValueChange}\r\n                            isInvalid={this.state.error}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {this.state.error}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                    <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                        {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                        {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                    </Button>\r\n                </Form.Group>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button onClick={props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                            <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                <Select\r\n                                    options={groupedOptions}\r\n                                    components={{ Group }}\r\n                                    value={props.customFieldNameSelected}\r\n                                    onChange={props.fieldNameHandler}\r\n                                />\r\n                                <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                    Add New\r\n                                </Nav.Link>\r\n\r\n                                <MyVerticallyCenteredModal\r\n                                    show={modalShow}\r\n                                    onHide={() => setModalShow(false)}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Value\"\r\n                                        name=\"sku\"\r\n                                        value={props.value}\r\n                                        onChange={props.fieldValueHandler}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Label style={styles.label}>\r\n                                {/* <span>For Multiple Values add | between values</span> */}\r\n                                {props.isVariableProduct ?\r\n                                    <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                    : null\r\n                                }\r\n                                <span style={{ color: 'red' }}>\r\n                                    {props.error}</span>\r\n                            </Form.Label>\r\n                            <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                onClick={props.addFieldHandler}>Add Field</Button>\r\n                        </Form.Row>\r\n\r\n                        {/* Map */}\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.customFieldName}\r\n                                            onChange={() => data.customFieldName}\r\n                                        >\r\n                                            <option>{data.customFieldName}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.customFieldValue}\r\n                                                onChange={() => data.fieldValue}\r\n                                            />\r\n                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}