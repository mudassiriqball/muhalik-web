{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-tags.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nvar tagArray = [];\n\nvar ProducTags = /*#__PURE__*/function (_Component) {\n  _inherits(ProducTags, _Component);\n\n  var _super = _createSuper(ProducTags);\n\n  function ProducTags(props) {\n    var _this;\n\n    _classCallCheck(this, ProducTags);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTagRequestChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.tagRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        tagRequestList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTagChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.tagList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        tagList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteTagClick\", function (index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.tagList);\n      tagArray.forEach(function (element, i) {\n        if (copyArray[index].value == element.value) {\n          tagArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n\n      _this.setState({\n        tagList: copyArray,\n        showModalMessage: 'Product Tag Deleted',\n        showModal: true\n      });\n    });\n\n    _this.state = {\n      token: '',\n      isLoading: false,\n      showToast: false,\n      tagValue: '',\n      error: '',\n      tagList: [],\n      tagRequestList: [],\n      editRequestedTag: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProducTags, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.setState({\n        token: nextProps.token\n      });\n    }\n  }, {\n    key: \"addTag\",\n    value: function addTag(tagValue, currentComponent) {\n      var url, data;\n      return _regeneratorRuntime.async(function addTag$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/tag';\n              data = [];\n              data = {\n                label: tagValue,\n                value: tagValue\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.post(url, {\n                data: data\n              }, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                currentComponent.setState({\n                  showModalMessage: 'Product Tag Added Successfully'\n                });\n                currentComponent.setState({\n                  showModal: true\n                });\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                console.log('Error: ', error.response.data.message);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n\n      if (e.target.value == '') {\n        this.setState({\n          tagList: tagArray\n        });\n      } else {\n        var array = [];\n        this.state.tagList.filter(function (data) {\n          // var value = data.value.toLowerCase;\n          if (data.value.includes(e.target.value)) {\n            array.push(data);\n          }\n        });\n        this.setState({\n          tagList: array\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      return _regeneratorRuntime.async(function handleSubmit$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (this.state.tagValue == '') {\n                this.setState({\n                  error: 'Enter Value First'\n                });\n              } else {\n                this.setState({\n                  isLoading: true\n                });\n                this.setState({\n                  error: ''\n                });\n                this.addTag(this.state.tagValue, this);\n              }\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } // Tag Request \n    // => Field Value \n\n  }, {\n    key: \"handleEditTagRequestClick\",\n    //  => Edit\n    value: function handleEditTagRequestClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditTagRequestClick$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.tagRequestList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                tagRequestList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelTagRequestClick\",\n    value: function handleCancelTagRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagRequestList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].label = true;\n      copyArray[index].error = '';\n      this.setState({\n        tagRequestList: copyArray\n      });\n    } // Update\n\n  }, {\n    key: \"handleUpdateTagRequestClick\",\n    value: function handleUpdateTagRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagRequestList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          tagRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          this.setState({\n            tagRequestList: copyArray,\n            showModalMessage: 'Product Tag Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Add\n\n  }, {\n    key: \"handleAddTagRequestClick\",\n    value: function handleAddTagRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        tagRequestList: copyArray,\n        showModalMessage: 'Product Tag Added Successfully',\n        showModal: true\n      });\n      this.addTag(copyArray[index].value, this);\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteTagRequestClick\",\n    value: function handleDeleteTagRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        tagRequestList: copyArray,\n        showModalMessage: 'Product Tag Deleted',\n        showModal: true\n      });\n    } // All tags\n    //  => Chane\n\n  }, {\n    key: \"handleEditTagClick\",\n    //  => Edit\n    value: function handleEditTagClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditTagClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.tagList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                tagList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelTagClick\",\n    value: function handleCancelTagClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        tagList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateTagClick\",\n    value: function handleUpdateTagClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.tagList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          tagRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          tagArray.forEach(function (element, i) {\n            if (copyArray[index].prevVal == element.value) {\n              element.value = copyArray[index].value;\n            }\n          });\n          this.setState({\n            tagList: copyArray,\n            showModalMessage: 'Product Tag Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Delete\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this2.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconname: faThumbsUp,\n        color: \"#00b300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Tags',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 17\n        }\n      }), __jsx(CardAccordion, {\n        title: 'Add New Tag',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Tag Value\",\n        name: \"sku\",\n        value: this.state.tagValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            tagValue: e.target.value\n          });\n        },\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 29\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 29\n        }\n      }, this.state.error))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 25\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Tag', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 53\n        }\n      }) : null))), __jsx(CardAccordion, {\n        title: 'Add Tag Requests',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 17\n        }\n      }, this.state.tagRequestList.map(function (element, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 3,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.entry_date,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }\n        })), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 3,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.entry_date,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 33\n          }\n        })), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 4,\n          md: 4,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Tag Value\",\n          name: \"sku\",\n          value: element.value,\n          onChange: function onChange(e) {\n            return _this2.handleTagRequestChange(e, index);\n          },\n          isInvalid: element.error,\n          disabled: element.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 37\n          }\n        }, element.error))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return element.label ? _this2.handleEditTagRequestClick(index) : _this2.handleUpdateTagRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 37\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            element.label ? _this2.handleAddTagRequestClick(index) : _this2.handleCancelTagRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 37\n          }\n        }, element.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return _this2.handleDeleteTagRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 37\n          }\n        }, \"Discard\"))));\n      })), __jsx(CardAccordion, {\n        title: 'All Tags',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Tag Value\",\n        name: \"sku\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this2.handleFilterStrChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 33\n        }\n      })))), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }\n      }), this.state.tagList.map(function (element, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.entry_date,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }\n        })), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Tag Value\",\n          name: \"sku\",\n          value: element.value,\n          onChange: function onChange(e) {\n            return _this2.handleTagChange(e, index);\n          },\n          disabled: element.label,\n          isInvalid: element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 37\n          }\n        }, element.error))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleEditTagClick(index);\n          } : function () {\n            return _this2.handleUpdateTagClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 37\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleDeleteTagClick(index);\n          } : function () {\n            return _this2.handleCancelTagClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 37\n          }\n        }, element.label ? 'Delete' : 'Cancel'))));\n      })));\n    }\n  }]);\n\n  return ProducTags;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducTags;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-tags.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","tagArray","ProducTags","props","e","index","copyArray","Object","assign","state","tagRequestList","value","target","length","error","setState","tagList","forEach","element","i","splice","showModalMessage","showModal","token","isLoading","showToast","tagValue","editRequestedTag","filterStr","nextProps","currentComponent","url","PATH","data","label","post","headers","then","response","console","log","message","array","filter","includes","push","addTag","obj","prevVal","handleSubmit","bind","styles","submit_btn","map","entry_date","handleTagRequestChange","handleEditTagRequestClick","handleUpdateTagRequestClick","handleAddTagRequestClick","handleCancelTagRequestClick","handleDeleteTagRequestClick","margin","handleFilterStrChange","handleTagChange","handleEditTagClick","handleUpdateTagClick","handleDeleteTagClick","handleCancelTagClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nlet tagArray = [];\r\nclass ProducTags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: '',\r\n            isLoading: false,\r\n            showToast: false,\r\n            tagValue: '',\r\n            error: '',\r\n            tagList: [],\r\n            tagRequestList: [],\r\n\r\n            editRequestedTag: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            token: nextProps.token\r\n        });\r\n    }\r\n\r\n    async addTag(tagValue, currentComponent) {\r\n        const url = MuhalikConfig.PATH + '/api/categories/tag';\r\n        let data = []\r\n        data = { label: tagValue, value: tagValue }\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': this.state.token }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Tag Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            console.log('Error: ', error.response.data.message);\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ tagList: tagArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.tagList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ tagList: array });\r\n        }\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.state.tagValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addTag(this.state.tagValue, this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Tag Request \r\n    // => Field Value \r\n    handleTagRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ tagRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Added Successfully', showModal: true })\r\n        this.addTag(copyArray[index].value, this)\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All tags\r\n    //  => Chane\r\n    handleTagChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ tagRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                tagArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        tagArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                tagArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Tags'} />\r\n\r\n                {/* Add New Tag */}\r\n                <CardAccordion title={'Add New Tag'}>\r\n                    <Form.Group>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                size=\"sm\"\r\n                                placeholder=\"Enter Tag Value\"\r\n                                name=\"sku\"\r\n                                value={this.state.tagValue}\r\n                                onChange={(e) => this.setState({ tagValue: e.target.value })}\r\n                                isInvalid={this.state.error}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {this.state.error}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Tag'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Tag Requests */}\r\n                <CardAccordion title={'Add Tag Requests'}>\r\n                    {this.state.tagRequestList.map((element, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Tag Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleTagRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditTagRequestClick(index) : this.handleUpdateTagRequestClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddTagRequestClick(index) : this.handleCancelTagRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteTagRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Tags */}\r\n                <CardAccordion title={'All Tags'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Tag Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.tagList.map((element, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Tag Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleTagChange(e, index)}\r\n                                        disabled={element.label}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ? () => this.handleEditTagClick(index) : () => this.handleUpdateTagClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ? () => this.handleDeleteTagClick(index) : () => this.handleCancelTagClick(index)}>\r\n                                    <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducTags\r\n"]},"metadata":{},"sourceType":"module"}