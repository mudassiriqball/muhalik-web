{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { Navbar, Container, Form, Col, Row, InputGroup, Button, Image } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faMobileAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport GlobalStyleSheet from '../styleSheet'; // RegEx for phone number validation\n\nvar phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nvar schema = yup.object({\n  mobile: yup.string().required(\"Enter Mobile Number\").matches(phoneRegExp, \"Phone number is not valid\"),\n  password: yup.string().required(\"Enter Password\").min(8, \"Password must have at least 8 characters\").max(20, \"Password can't be longer than 20 characters\")\n});\n\nvar ForgotPassword = /*#__PURE__*/function (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  var _super = _createSuper(ForgotPassword);\n\n  function ForgotPassword() {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      hide: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"showPassword\", function (ev) {\n      _this.setState({\n        hide: !_this.state.hide\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"render\",\n    value: function render() {\n      var hide = this.state.hide;\n      var eyeBtn;\n\n      if (this.state.hide) {\n        eyeBtn = __jsx(FontAwesomeIcon, {\n          icon: faEye,\n          style: styles.fontawesome\n        });\n      } else {\n        eyeBtn = __jsx(FontAwesomeIcon, {\n          icon: faEyeSlash,\n          style: styles.fontawesome\n        });\n      }\n\n      return __jsx(Formik, {\n        validationSchema: schema // onSubmit={console.log}\n        ,\n        initialValues: {\n          mobile: '',\n          password: ''\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting,\n              resetForm = _ref.resetForm;\n          // When button submits form and form is in the process of submitting, submit button is disabled\n          setSubmitting(true); // Resets form after submission is complete\n\n          resetForm(); // Sets setSubmitting to false after form is reset\n\n          setSubmitting(false);\n          setTimeout(function () {\n            alert(JSON.stringify(values, null, 2));\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n        }\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange,\n            values = _ref2.values,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid,\n            errors = _ref2.errors,\n            handleBlur = _ref2.handleBlur,\n            isSubmitting = _ref2.isSubmitting;\n        return __jsx(\"div\", {\n          style: styles.body,\n          className: \"jsx-1794121765\"\n        }, __jsx(Navbar, {\n          variant: \"dark\",\n          style: {\n            background: \"\".concat(GlobalStyleSheet.primry_color)\n          }\n        }, __jsx(Navbar.Brand, {\n          href: \"/\",\n          className: \"mr-auto\"\n        }, \" Muhalik \")), __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n          lg: 3,\n          md: 2,\n          sm: 1,\n          xs: 0,\n          style: styles.side_column\n        }), __jsx(Col, {\n          style: styles.center_column\n        }, __jsx(\"p\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Image, {\n          src: \"muhalik.jpg\",\n          roundedCircle: true,\n          thumbnail: true,\n          fluid: true,\n          style: {\n            width: '25%',\n            maxWidth: '150px'\n          }\n        })), __jsx(\"h6\", {\n          style: {\n            width: '100%',\n            paddingBottom: '10px'\n          },\n          className: \"jsx-1794121765\" + \" \" + \"text-center\"\n        }, \"Forgot Password\"), __jsx(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit\n        }, console.log(\"fucking values fffffffffffffffff: \", values), __jsx(Form.Row, null, __jsx(Form.Group, {\n          as: Col,\n          controlId: \"validationMobile\"\n        }, __jsx(Form.Label, {\n          style: styles.label\n        }, \"Enter Your Mobile Number\"), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Button, {\n          id: \"eyeBtn\",\n          style: styles.fontawesome_btn\n        }, __jsx(FontAwesomeIcon, {\n          icon: faMobileAlt,\n          style: styles.fontawesome\n        }))), __jsx(Form.Control, {\n          type: \"text\",\n          placeholder: \"+966590911891\",\n          \"aria-describedby\": \"mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleChange,\n          isInvalid: touched.mobile && errors.mobile\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, errors.mobile)))), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-center\",\n          style: styles.term_condition_label\n        }, __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"login\"\n        }, \" Login \")), \"or\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"signup\"\n        }, \" Signup \")))), __jsx(Form.Row, null, __jsx(Button, {\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          block: true,\n          style: styles.submit_btn\n        }, \"Continue\")), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-center\",\n          style: styles.term_condition_label\n        }, \"By continueing, you agree to Muhalik's\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"./help/terms-and-conditions\"\n        }, \" Terms & Conditions \")), \"and\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"./help/privacy-statement\"\n        }, \" Privacy Statement \")))))), __jsx(Col, {\n          lg: 3,\n          md: 2,\n          sm: 1,\n          xs: 0,\n          style: styles.side_column\n        }))), __jsx(_JSXStyle, {\n          id: \"1794121765\"\n        }, [\"span.jsx-1794121765{color:red;}\", \"p.jsx-1794121765{text-align:center;margin:0px;}\"]));\n      });\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nvar styles = {\n  body: {\n    background: \"\".concat(GlobalStyleSheet.body_color),\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    bottom: '0'\n  },\n  buttons: {\n    background: \"\".concat(GlobalStyleSheet.primry_color),\n    border: 'none',\n    fontSize: '10px'\n  },\n  submit_btn: {\n    background: \"\".concat(GlobalStyleSheet.primry_color)\n  },\n  center_column: {\n    background: 'white',\n    // border: `0.5px solid ${GlobalStyleSheet.primry_color}`,\n    padding: '20px 30px',\n    margin: '3% 3%'\n  },\n  side_column: {\n    margin: '0 3%'\n  },\n  label: {\n    width: '100%',\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  term_condition_label: {\n    width: '100%',\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize),\n    padding: '10px'\n  },\n  fontawesome_btn: {\n    background: \"\".concat(GlobalStyleSheet.primry_color),\n    border: 'none'\n  },\n  fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.primary_text_color),\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ForgotPassword;","map":null,"metadata":{},"sourceType":"module"}