{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport chroma from 'chroma-js';\nimport { colourOptions } from '../data';\nimport Select from 'react-select';\nvar colourStyles = {\n  control: function control(styles) {\n    return _objectSpread({}, styles, {\n      backgroundColor: 'white'\n    });\n  },\n  option: function option(styles, _ref) {\n    var data = _ref.data,\n        isDisabled = _ref.isDisabled,\n        isFocused = _ref.isFocused,\n        isSelected = _ref.isSelected;\n    var color = chroma(data.color);\n    return _objectSpread({}, styles, {\n      backgroundColor: isDisabled ? null : isSelected ? data.color : isFocused ? color.alpha(0.1).css() : null,\n      color: isDisabled ? '#ccc' : isSelected ? chroma.contrast(color, 'white') > 2 ? 'white' : 'black' : data.color,\n      cursor: isDisabled ? 'not-allowed' : 'default',\n      ':active': _objectSpread({}, styles[':active'], {\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css())\n      })\n    });\n  },\n  multiValue: function multiValue(styles, _ref2) {\n    var data = _ref2.data;\n    var color = chroma(data.color);\n    return _objectSpread({}, styles, {\n      backgroundColor: color.alpha(0.1).css()\n    });\n  },\n  multiValueLabel: function multiValueLabel(styles, _ref3) {\n    var data = _ref3.data;\n    return _objectSpread({}, styles, {\n      color: data.color\n    });\n  },\n  multiValueRemove: function multiValueRemove(styles, _ref4) {\n    var data = _ref4.data;\n    return _objectSpread({}, styles, {\n      color: data.color,\n      ':hover': {\n        backgroundColor: data.color,\n        color: 'white'\n      }\n    });\n  }\n};\nexport default (function () {\n  return __jsx(Select, {\n    closeMenuOnSelect: false,\n    defaultValue: [colourOptions[0], colourOptions[1]],\n    isMulti: true,\n    options: colourOptions,\n    styles: colourStyles\n  });\n});","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/FYP/muhalikweb/pages/components/vendor/dashboard/dashboard-tabs-content/orders.js"],"names":["React","chroma","colourOptions","Select","colourStyles","control","styles","backgroundColor","option","data","isDisabled","isFocused","isSelected","color","alpha","css","contrast","cursor","multiValue","multiValueLabel","multiValueRemove"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,iBAAAC,MAAM;AAAA,6BAAUA,MAAV;AAAkBC,MAAAA,eAAe,EAAE;AAAnC;AAAA,GADI;AAEnBC,EAAAA,MAAM,EAAE,gBAACF,MAAD,QAAyD;AAAA,QAA9CG,IAA8C,QAA9CA,IAA8C;AAAA,QAAxCC,UAAwC,QAAxCA,UAAwC;AAAA,QAA5BC,SAA4B,QAA5BA,SAA4B;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;AAC/D,QAAMC,KAAK,GAAGZ,MAAM,CAACQ,IAAI,CAACI,KAAN,CAApB;AACA,6BACKP,MADL;AAEEC,MAAAA,eAAe,EAAEG,UAAU,GACvB,IADuB,GAEvBE,UAAU,GACVH,IAAI,CAACI,KADK,GAEVF,SAAS,GACTE,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EADS,GAET,IARN;AASEF,MAAAA,KAAK,EAAEH,UAAU,GACb,MADa,GAEbE,UAAU,GACVX,MAAM,CAACe,QAAP,CAAgBH,KAAhB,EAAuB,OAAvB,IAAkC,CAAlC,GACE,OADF,GAEE,OAHQ,GAIVJ,IAAI,CAACI,KAfX;AAgBEI,MAAAA,MAAM,EAAEP,UAAU,GAAG,aAAH,GAAmB,SAhBvC;AAkBE,mCACKJ,MAAM,CAAC,SAAD,CADX;AAEEC,QAAAA,eAAe,EAAE,CAACG,UAAD,KAAgBE,UAAU,GAAGH,IAAI,CAACI,KAAR,GAAgBA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB,EAA1C;AAFnB;AAlBF;AAuBD,GA3BkB;AA4BnBG,EAAAA,UAAU,EAAE,oBAACZ,MAAD,SAAsB;AAAA,QAAXG,IAAW,SAAXA,IAAW;AAChC,QAAMI,KAAK,GAAGZ,MAAM,CAACQ,IAAI,CAACI,KAAN,CAApB;AACA,6BACKP,MADL;AAEEC,MAAAA,eAAe,EAAEM,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiBC,GAAjB;AAFnB;AAID,GAlCkB;AAmCnBI,EAAAA,eAAe,EAAE,yBAACb,MAAD;AAAA,QAAWG,IAAX,SAAWA,IAAX;AAAA,6BACZH,MADY;AAEfO,MAAAA,KAAK,EAAEJ,IAAI,CAACI;AAFG;AAAA,GAnCE;AAuCnBO,EAAAA,gBAAgB,EAAE,0BAACd,MAAD;AAAA,QAAWG,IAAX,SAAWA,IAAX;AAAA,6BACbH,MADa;AAEhBO,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAFI;AAGhB,gBAAU;AACRN,QAAAA,eAAe,EAAEE,IAAI,CAACI,KADd;AAERA,QAAAA,KAAK,EAAE;AAFC;AAHM;AAAA;AAvCC,CAArB;AAiDA,gBAAe;AAAA,SACb,MAAC,MAAD;AACE,IAAA,iBAAiB,EAAE,KADrB;AAEE,IAAA,YAAY,EAAE,CAACX,aAAa,CAAC,CAAD,CAAd,EAAmBA,aAAa,CAAC,CAAD,CAAhC,CAFhB;AAGE,IAAA,OAAO,MAHT;AAIE,IAAA,OAAO,EAAEA,aAJX;AAKE,IAAA,MAAM,EAAEE;AALV,IADa;AAAA,CAAf","sourcesContent":["import React from 'react';\r\nimport chroma from 'chroma-js';\r\n\r\nimport { colourOptions } from '../data';\r\nimport Select from 'react-select';\r\n\r\nconst colourStyles = {\r\n  control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? color.alpha(0.1).css()\r\n        : null,\r\n      color: isDisabled\r\n        ? '#ccc'\r\n        : isSelected\r\n        ? chroma.contrast(color, 'white') > 2\r\n          ? 'white'\r\n          : 'black'\r\n        : data.color,\r\n      cursor: isDisabled ? 'not-allowed' : 'default',\r\n\r\n      ':active': {\r\n        ...styles[':active'],\r\n        backgroundColor: !isDisabled && (isSelected ? data.color : color.alpha(0.3).css()),\r\n      },\r\n    };\r\n  },\r\n  multiValue: (styles, { data }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: color.alpha(0.1).css(),\r\n    };\r\n  },\r\n  multiValueLabel: (styles, { data }) => ({\r\n    ...styles,\r\n    color: data.color,\r\n  }),\r\n  multiValueRemove: (styles, { data }) => ({\r\n    ...styles,\r\n    color: data.color,\r\n    ':hover': {\r\n      backgroundColor: data.color,\r\n      color: 'white',\r\n    },\r\n  }),\r\n};\r\n\r\nexport default () => (\r\n  <Select\r\n    closeMenuOnSelect={false}\r\n    defaultValue={[colourOptions[0], colourOptions[1]]}\r\n    isMulti\r\n    options={colourOptions}\r\n    styles={colourStyles}\r\n  />\r\n);"]},"metadata":{},"sourceType":"module"}