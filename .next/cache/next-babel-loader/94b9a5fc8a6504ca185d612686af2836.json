{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\all-products-contents\\\\edit-product.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Spinner from 'react-spinkit';\nimport './App.css';\n\nvar EditProduct = /*#__PURE__*/function (_Component) {\n  _inherits(EditProduct, _Component);\n\n  var _super = _createSuper(EditProduct);\n\n  function EditProduct() {\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"fileChangedHandler\", function (event) {\n      var file = event.target.files[0];\n\n      _this.setState({\n        selectedFile: file\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"uploadImage\", function (event) {\n      event.preventDefault();\n      if (!_this.state.selectedFile) return;\n\n      _this.setState({\n        loading: true\n      });\n\n      var formData = new FormData();\n      formData.append('image', _this.state.selectedFile, _this.state.selectedFile.name);\n      axios.post('http://localhost:5000/upload', formData).then(function (_ref) {\n        var data = _ref.data;\n\n        _this.setState({\n          loading: false\n        });\n      });\n    });\n\n    _this.state = {\n      images: [],\n      selectedFile: null,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      axios.get('http://localhost:5000').then(function (_ref2) {\n        var data = _ref2.data;\n\n        _this2.setState({\n          images: [].concat(_toConsumableArray(data), _toConsumableArray(_this2.state.images)),\n          loading: false\n        });\n      });\n      var pusher = new Pusher('<your app key>', {\n        cluster: '<your app cluster>',\n        encrypted: true\n      });\n      var channel = pusher.subscribe('gallery');\n      channel.bind('upload', function (data) {\n        _this2.setState({\n          images: [data.image].concat(_toConsumableArray(_this2.state.images))\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var image = function image(url, index) {\n        return __jsx(\"img\", {\n          alt: \"\",\n          className: \"photo\",\n          key: \"image-\".concat(index, \" }\"),\n          src: url,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 7\n          }\n        });\n      };\n\n      var images = this.state.images.map(function (e, i) {\n        return image(e.secure_url, i);\n      });\n      return __jsx(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }\n      }, __jsx(\"h1\", {\n        className: \"App-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, \"Live Photo Feed\"), __jsx(\"form\", {\n        method: \"post\",\n        onSubmit: this.uploadImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, __jsx(\"label\", {\n        className: \"label\",\n        htmlFor: \"gallery-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Choose an image to upload\"), __jsx(\"input\", {\n        type: \"file\",\n        onChange: this.fileChangedHandler,\n        id: \"gallery-image\",\n        accept: \".jpg, .jpeg, .png\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }), __jsx(\"button\", {\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"Upload!\")), __jsx(\"div\", {\n        className: \"loading-indicator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }\n      }, this.state.loading ? __jsx(Spinner, {\n        name: \"spinner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }) : ''), __jsx(\"div\", {\n        className: \"gallery\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, images));\n    }\n  }]);\n\n  return EditProduct;\n}(Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products-contents/edit-product.js"],"names":["React","Component","axios","Pusher","Spinner","EditProduct","event","file","target","files","setState","selectedFile","preventDefault","state","loading","formData","FormData","append","name","post","then","data","images","get","pusher","cluster","encrypted","channel","subscribe","bind","image","url","index","map","e","i","secure_url","uploadImage","fileChangedHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport Spinner from 'react-spinkit';\r\nimport './App.css';\r\n\r\nclass EditProduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      images: [],\r\n      selectedFile: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    axios.get('http://localhost:5000').then(({ data }) => {\r\n      this.setState({\r\n        images: [...data, ...this.state.images],\r\n        loading: false,\r\n      });\r\n    });\r\n\r\n    const pusher = new Pusher('<your app key>', {\r\n      cluster: '<your app cluster>',\r\n      encrypted: true,\r\n    });\r\n\r\n    const channel = pusher.subscribe('gallery');\r\n    channel.bind('upload', data => {\r\n      this.setState({\r\n        images: [data.image, ...this.state.images],\r\n      });\r\n    });\r\n  }\r\n\r\n  fileChangedHandler = event => {\r\n    const file = event.target.files[0];\r\n    this.setState({ selectedFile: file });\r\n  };\r\n\r\n  uploadImage = event => {\r\n    event.preventDefault();\r\n\r\n    if (!this.state.selectedFile) return;\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\r\n      'image',\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    axios.post('http://localhost:5000/upload', formData).then(({ data }) => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const image = (url, index) => (\r\n      <img alt=\"\" className=\"photo\" key={`image-${index} }`} src={url} />\r\n    );\r\n\r\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"App-title\">Live Photo Feed</h1>\r\n\r\n        <form method=\"post\" onSubmit={this.uploadImage}>\r\n          <label className=\"label\" htmlFor=\"gallery-image\">\r\n            Choose an image to upload\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.fileChangedHandler}\r\n            id=\"gallery-image\"\r\n            accept=\".jpg, .jpeg, .png\"\r\n          />\r\n          <button type=\"submit\">Upload!</button>\r\n        </form>\r\n\r\n        <div className=\"loading-indicator\">\r\n          {this.state.loading ? <Spinner name=\"spinner\" /> : ''}\r\n        </div>\r\n\r\n        <div className=\"gallery\">{images}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}