{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-fields.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport ConfirmModal from '../../../../confirm-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nvar fieldsArray = [];\n\nvar ProducFields = /*#__PURE__*/function (_Component) {\n  _inherits(ProducFields, _Component);\n\n  var _super = _createSuper(ProducFields);\n\n  function ProducFields(props) {\n    var _this;\n\n    _classCallCheck(this, ProducFields);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldRequestChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.field_requests_list);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        field_requests_list: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFieldChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.fields_list);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        fields_list: copyArray\n      });\n    });\n\n    _this.state = {\n      token: '',\n      isLoading: false,\n      showToast: false,\n      showConfirmDeleteModal: false,\n      isFieldDelete: '',\n      delete_field_id: '',\n      delete_field_name: '',\n      delete_field_index: '',\n      fieldValue: '',\n      error: '',\n      fields_list: [],\n      field_requests_list: [],\n      editRequestedField: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n    return _this;\n  }\n\n  _createClass(ProducFields, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        fields_list: nextProps.fields_list,\n        field_requests_list: nextProps.field_requests_list,\n        token: nextProps.token\n      });\n    }\n  }, {\n    key: \"addField\",\n    value: function addField(fieldValue, currentComponent) {\n      var url, data;\n      return _regeneratorRuntime.async(function addField$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/field';\n              data = [];\n              data = {\n                label: fieldValue,\n                value: fieldValue\n              };\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(axios.post(url, {\n                data: data\n              }, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                currentComponent.setState({\n                  showModalMessage: 'Product Field Added Successfully'\n                });\n                currentComponent.setState({\n                  showModal: true\n                });\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                alert('Error: ', error.response.data.message);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n\n      if (e.target.value == '') {\n        this.setState({\n          fields_list: fieldsArray\n        });\n      } else {\n        var array = [];\n        this.state.fields_list.filter(function (data) {\n          var value = data.value.toLowerCase();\n\n          if (value.includes(e.target.value.toLowerCase())) {\n            array.push(data);\n          }\n        });\n        this.setState({\n          fields_list: array\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (this.state.fieldValue == '') {\n        this.setState({\n          error: 'Enter Value First'\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.setState({\n          error: ''\n        });\n        this.addField(this.state.fieldValue, this);\n      }\n    } // Field Request \n    // => Field Value \n\n  }, {\n    key: \"handleEditFieldRequestClick\",\n    //  => Edit\n    value: function handleEditFieldRequestClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditFieldRequestClick$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.field_requests_list);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['entry_date'] = copyArray[index].entry_date;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context2.next = 11;\n              return _regeneratorRuntime.awrap(this.setState({\n                field_requests_list: copyArray\n              }));\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelFieldRequestClick\",\n    value: function handleCancelFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.field_requests_list);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].label = true;\n      copyArray[index].error = '';\n      this.setState({\n        field_requests_list: copyArray\n      });\n    } // Update\n\n  }, {\n    key: \"handleUpdateFieldRequestClick\",\n    value: function handleUpdateFieldRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.field_requests_list);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          field_requests_list: copyArray\n        });\n      } else {\n        this.setState({\n          field_requests_list: copyArray,\n          showModalMessage: 'Product Field Updated Successfully',\n          showModal: true\n        });\n        fieldsArray = copyArray;\n      }\n    } //  => Add\n\n  }, {\n    key: \"handleAddFieldRequestClick\",\n    value: function handleAddFieldRequestClick(index) {\n      var url, copyArray, currentComponent, data;\n      return _regeneratorRuntime.async(function handleAddFieldRequestClick$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/field';\n              copyArray = [];\n              copyArray = Object.assign([], this.state.field_requests_list);\n              currentComponent = this;\n              data = [];\n              data = {\n                label: copyArray[index].value,\n                value: copyArray[index].value\n              };\n              console.log('data:', data);\n              _context3.next = 9;\n              return _regeneratorRuntime.awrap(axios.post(url, {\n                data: data\n              }, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                copyArray.splice(index, 1);\n                currentComponent.setState({\n                  field_requests_list: copyArray,\n                  showModalMessage: 'Product Field Added Successfully',\n                  showModal: true\n                });\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  alert('Add Field Failed ');\n                  console.log('Request Failed:', error);\n                }\n              }));\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteFieldRequestClick\",\n    value: function handleDeleteFieldRequestClick() {\n      var index, copyArray, currentComponent, url;\n      return _regeneratorRuntime.async(function handleDeleteFieldRequestClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              index = this.state.delete_field_index;\n              this.setState({\n                showConfirmDeleteModal: false\n              });\n              copyArray = [];\n              currentComponent = this;\n              copyArray = Object.assign([], this.state.field_requests_list);\n              url = MuhalikConfig.PATH + \"/api/categories/field-request/\".concat(copyArray[index]._id);\n              _context4.next = 8;\n              return _regeneratorRuntime.awrap(axios[\"delete\"](url, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                copyArray.splice(index, 1);\n                currentComponent.setState({\n                  field_requests_list: copyArray,\n                  showModalMessage: 'Product Request Field Discarded',\n                  showModal: true\n                });\n                fieldsArray = copyArray;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  alert('Delete Field Failed ');\n                  console.log('Request Failed:', error);\n                }\n              }));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } // All fields\n    //  => Chane\n\n  }, {\n    key: \"handleEditFieldClick\",\n    //  => Edit\n    value: function handleEditFieldClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditFieldClick$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.fields_list);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context5.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                fields_list: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelFieldClick\",\n    value: function handleCancelFieldClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.fields_list);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        fields_list: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateFieldClick\",\n    value: function handleUpdateFieldClick(index) {\n      var copyArray, currentComponent, data, url;\n      return _regeneratorRuntime.async(function handleUpdateFieldClick$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.fields_list);\n\n              if (!(copyArray[index].value == copyArray[index].prevVal)) {\n                _context6.next = 7;\n                break;\n              }\n\n              copyArray[index].error = 'Enter Different Value';\n              this.setState({\n                fields_list: copyArray\n              });\n              _context6.next = 13;\n              break;\n\n            case 7:\n              currentComponent = this;\n              data = [];\n              data = {\n                value: copyArray[index].value,\n                label: copyArray[index].value\n              };\n              url = MuhalikConfig.PATH + \"/api/categories/field/\".concat(copyArray[index]._id);\n              _context6.next = 13;\n              return _regeneratorRuntime.awrap(axios.put(url, {\n                data: data\n              }, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                copyArray[index].label = copyArray[index].value;\n                copyArray[index].prevVal = copyArray[index].value;\n                currentComponent.setState({\n                  fields_list: copyArray,\n                  showModalMessage: 'Product Field Updated Successfully',\n                  showModal: true\n                });\n                fieldsArray = copyArray;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  alert('Update field Failed');\n                  console.log('Request Failed:', error);\n                }\n              }));\n\n            case 13:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteFieldClick\",\n    value: function handleDeleteFieldClick() {\n      var index, copyArray, currentComponent, url;\n      return _regeneratorRuntime.async(function handleDeleteFieldClick$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              index = this.state.delete_field_index;\n              this.setState({\n                showConfirmDeleteModal: false\n              });\n              copyArray = [];\n              currentComponent = this;\n              copyArray = Object.assign([], this.state.fields_list);\n              url = MuhalikConfig.PATH + \"/api/categories/field/\".concat(copyArray[index]._id);\n              _context7.next = 8;\n              return _regeneratorRuntime.awrap(axios[\"delete\"](url, {\n                headers: {\n                  'authorization': this.state.token\n                }\n              }).then(function (response) {\n                copyArray.splice(index, 1);\n                currentComponent.setState({\n                  fields_list: copyArray,\n                  showModalMessage: 'Product Field Deleted',\n                  showModal: true\n                });\n                fieldsArray = copyArray;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n              }));\n\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this2.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconname: faThumbsUp,\n        color: \"#00b300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 17\n        }\n      }), __jsx(ConfirmModal, {\n        onHide: function onHide() {\n          return _this2.setState({\n            showConfirmDeleteModal: false\n          });\n        },\n        show: this.state.showConfirmDeleteModal,\n        title: 'Delete Add Field Request ?',\n        _id: this.state.delete_field_id,\n        name: this.state.delete_field_name,\n        confirm: this.state.isFieldDelete ? this.handleDeleteFieldClick.bind(this) : this.handleDeleteFieldRequestClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 17\n        }\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Fields',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 17\n        }\n      }), __jsx(CardAccordion, {\n        title: 'Add New Field',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Field Value\",\n        name: \"sku\",\n        value: this.state.fieldValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            fieldValue: e.target.value\n          });\n        },\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 29\n        }\n      }, this.state.error))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        variant: \"outline-primary\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 25\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Field', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 53\n        }\n      }) : null))), __jsx(CardAccordion, {\n        title: 'Add Field Requests',\n        notification: true,\n        badge: this.state.field_requests_list.length || '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 17\n        }\n      }, this.state.field_requests_list && this.state.field_requests_list.map(function (element, index) {\n        return __jsx(Form.Row, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 3,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"date\",\n          value: element.entry_date,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 33\n          }\n        })), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 3,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"vendor\",\n          value: 'Vendor Name',\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 33\n          }\n        })), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 4,\n          md: 4,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: element.value,\n          onChange: function onChange(e) {\n            return _this2.handleFieldRequestChange(e, index);\n          },\n          isInvalid: element.error,\n          disabled: element.label,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 37\n          }\n        }, element.error))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return element.label ? _this2.handleEditFieldRequestClick(index) : _this2.handleUpdateFieldRequestClick(index);\n          },\n          disabled: element.label ? false : element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 37\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            element.label ? _this2.handleAddFieldRequestClick(index) : _this2.handleCancelFieldRequestClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 37\n          }\n        }, element.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return _this2.setState({\n              isFieldDelete: false,\n              showConfirmDeleteModal: true,\n              delete_field_id: element._id,\n              delete_field_name: element.value,\n              delete_field_index: index\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 37\n          }\n        }, \"Discard\"))));\n      })), __jsx(CardAccordion, {\n        title: 'All Fields',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Field Value\",\n        name: \"sku\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this2.handleFilterStrChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 33\n        }\n      })))), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }\n      }), this.state.fields_list && this.state.fields_list.map(function (element, index) {\n        return __jsx(Form.Row, {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.entry_date,\n          disabled: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 33\n          }\n        })), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 29\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Field Value\",\n          name: \"sku\",\n          value: element.value,\n          onChange: function onChange(e) {\n            return _this2.handleFieldChange(e, index);\n          },\n          disabled: element.label,\n          isInvalid: element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 37\n          }\n        }, element.error))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleEditFieldClick(index);\n          } : function () {\n            return _this2.handleUpdateFieldClick(index);\n          },\n          disabled: element.label ? false : element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 37\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n          className: \"mr-auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 29\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 29\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.setState({\n              isFieldDelete: true,\n              showConfirmDeleteModal: true,\n              delete_field_id: element._id,\n              delete_field_name: element.value,\n              delete_field_index: index\n            });\n          } : function () {\n            return _this2.handleCancelFieldClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 33\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 37\n          }\n        }, element.label ? 'Delete' : 'Cancel'))));\n      })));\n    }\n  }]);\n\n  return ProducFields;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-fields.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","ConfirmModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","fieldsArray","ProducFields","props","e","index","copyArray","Object","assign","state","field_requests_list","value","target","length","error","setState","fields_list","token","isLoading","showToast","showConfirmDeleteModal","isFieldDelete","delete_field_id","delete_field_name","delete_field_index","fieldValue","editRequestedField","showModalMessage","showModal","filterStr","nextProps","currentComponent","url","PATH","data","label","post","headers","then","response","alert","message","array","filter","toLowerCase","includes","push","addField","obj","entry_date","prevVal","console","log","splice","err","_id","put","handleDeleteFieldClick","bind","handleDeleteFieldRequestClick","handleSubmit","styles","submit_btn","map","element","handleFieldRequestChange","handleEditFieldRequestClick","handleUpdateFieldRequestClick","handleAddFieldRequestClick","handleCancelFieldRequestClick","margin","handleFilterStrChange","handleFieldChange","handleEditFieldClick","handleUpdateFieldClick","handleCancelFieldClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport ConfirmModal from '../../../../confirm-modal'\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet fieldsArray = [];\r\nclass ProducFields extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            token: '',\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            showConfirmDeleteModal: false,\r\n            isFieldDelete: '',\r\n            delete_field_id: '',\r\n            delete_field_name: '',\r\n            delete_field_index: '',\r\n\r\n            fieldValue: '',\r\n            error: '',\r\n            fields_list: [],\r\n            field_requests_list: [],\r\n\r\n            editRequestedField: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            fields_list: nextProps.fields_list,\r\n            field_requests_list: nextProps.field_requests_list,\r\n            token: nextProps.token\r\n        });\r\n    }\r\n\r\n    async addField(fieldValue, currentComponent) {\r\n        const url = MuhalikConfig.PATH + '/api/categories/field';\r\n        let data = [];\r\n        data = { label: fieldValue, value: fieldValue }\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': this.state.token }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Field Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ fields_list: fieldsArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.fields_list.filter(function (data) {\r\n                const value = data.value.toLowerCase()\r\n                if (value.includes(e.target.value.toLowerCase())) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ fields_list: array });\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.fieldValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addField(this.state.fieldValue, this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Field Request \r\n    // => Field Value \r\n    handleFieldRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ field_requests_list: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['entry_date'] = copyArray[index].entry_date;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ field_requests_list: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ field_requests_list: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ field_requests_list: copyArray });\r\n        } else {\r\n            this.setState({\r\n                field_requests_list: copyArray,\r\n                showModalMessage: 'Product Field Updated Successfully',\r\n                showModal: true\r\n            });\r\n            fieldsArray = copyArray\r\n        }\r\n    }\r\n    //  => Add\r\n    async handleAddFieldRequestClick(index) {\r\n        const url = MuhalikConfig.PATH + '/api/categories/field';\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n        const currentComponent = this\r\n        let data = [];\r\n        data = { label: copyArray[index].value, value: copyArray[index].value }\r\n        console.log('data:', data)\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': this.state.token }\r\n        }).then(function (response) {\r\n            copyArray.splice(index, 1);\r\n            currentComponent.setState({\r\n                field_requests_list: copyArray,\r\n                showModalMessage: 'Product Field Added Successfully',\r\n                showModal: true\r\n            })\r\n        }).catch(function (error) {\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                alert('Add Field Failed ');\r\n                console.log('Request Failed:', error)\r\n            }\r\n        });\r\n    }\r\n    //  => Delete\r\n    async handleDeleteFieldRequestClick() {\r\n        let index = this.state.delete_field_index\r\n        this.setState({ showConfirmDeleteModal: false })\r\n        let copyArray = [];\r\n        const currentComponent = this\r\n        copyArray = Object.assign([], this.state.field_requests_list);\r\n\r\n        const url = MuhalikConfig.PATH + `/api/categories/field-request/${copyArray[index]._id}`\r\n        await axios.delete(url, {\r\n            headers: { 'authorization': this.state.token }\r\n        }).then(function (response) {\r\n            copyArray.splice(index, 1);\r\n            currentComponent.setState({\r\n                field_requests_list: copyArray,\r\n                showModalMessage: 'Product Request Field Discarded',\r\n                showModal: true\r\n            })\r\n            fieldsArray = copyArray\r\n        }).catch(function (error) {\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                alert('Delete Field Failed ');\r\n                console.log('Request Failed:', error)\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All fields\r\n    //  => Chane\r\n    handleFieldChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fields_list);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fields_list: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fields_list);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fields_list: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fields_list);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ fields_list: copyArray })\r\n    }\r\n    //  => Update\r\n    async handleUpdateFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fields_list);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ fields_list: copyArray });\r\n        } else {\r\n            const currentComponent = this\r\n            let data = [];\r\n            data = {\r\n                value: copyArray[index].value,\r\n                label: copyArray[index].value\r\n            }\r\n            const url = MuhalikConfig.PATH + `/api/categories/field/${copyArray[index]._id}`\r\n            await axios.put(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': this.state.token }\r\n            }).then(function (response) {\r\n                copyArray[index].label = copyArray[index].value;\r\n                copyArray[index].prevVal = copyArray[index].value;\r\n                currentComponent.setState({\r\n                    fields_list: copyArray,\r\n                    showModalMessage: 'Product Field Updated Successfully',\r\n                    showModal: true\r\n                });\r\n                fieldsArray = copyArray\r\n            }).catch(function (error) {\r\n                try {\r\n                    alert('Error: ', error.response.data.message);\r\n                } catch (err) {\r\n                    alert('Update field Failed')\r\n                    console.log('Request Failed:', error)\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n    //  => Delete\r\n    async handleDeleteFieldClick() {\r\n        let index = this.state.delete_field_index\r\n        this.setState({ showConfirmDeleteModal: false })\r\n        let copyArray = [];\r\n        const currentComponent = this\r\n        copyArray = Object.assign([], this.state.fields_list);\r\n\r\n        const url = MuhalikConfig.PATH + `/api/categories/field/${copyArray[index]._id}`\r\n        await axios.delete(url, {\r\n            headers: { 'authorization': this.state.token }\r\n        }).then(function (response) {\r\n            copyArray.splice(index, 1);\r\n            currentComponent.setState({\r\n                fields_list: copyArray,\r\n                showModalMessage: 'Product Field Deleted',\r\n                showModal: true\r\n            })\r\n            fieldsArray = copyArray\r\n        }).catch(function (error) {\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                console.log('Request Failed:', error)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <ConfirmModal\r\n                    onHide={() => this.setState({ showConfirmDeleteModal: false })}\r\n                    show={this.state.showConfirmDeleteModal}\r\n                    title={'Delete Add Field Request ?'}\r\n                    _id={this.state.delete_field_id}\r\n                    name={this.state.delete_field_name}\r\n                    confirm={this.state.isFieldDelete ? this.handleDeleteFieldClick.bind(this) : this.handleDeleteFieldRequestClick.bind(this)}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Fields'} />\r\n\r\n                {/* Add New Field */}\r\n                <CardAccordion title={'Add New Field'}>\r\n                    <Form.Group>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                size=\"sm\"\r\n                                placeholder=\"Enter Field Value\"\r\n                                name=\"sku\"\r\n                                value={this.state.fieldValue}\r\n                                onChange={(e) => this.setState({ fieldValue: e.target.value })}\r\n                                isInvalid={this.state.error}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {this.state.error}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Field'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Field Requests */}\r\n                <CardAccordion title={'Add Field Requests'} notification={true} badge={this.state.field_requests_list.length || ''}>\r\n                    {this.state.field_requests_list && this.state.field_requests_list.map((element, index) =>\r\n                        <Form.Row key={index}>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"date\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"vendor\"\r\n                                    value={'Vendor Name'}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleFieldRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditFieldRequestClick(index) : this.handleUpdateFieldRequestClick(index)}\r\n                                    disabled={element.label ? false : element.error}>\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddFieldRequestClick(index) : this.handleCancelFieldRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.setState({\r\n                                        isFieldDelete: false,\r\n                                        showConfirmDeleteModal: true,\r\n                                        delete_field_id: element._id,\r\n                                        delete_field_name: element.value,\r\n                                        delete_field_index: index,\r\n                                    })}\r\n                                >\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Fields */}\r\n                <CardAccordion title={'All Fields'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.fields_list && this.state.fields_list.map((element, index) =>\r\n                        <Form.Row key={index}>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleFieldChange(e, index)}\r\n                                        disabled={element.label}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ? () => this.handleEditFieldClick(index) : () => this.handleUpdateFieldClick(index)}\r\n                                    disabled={element.label ? false : element.error}>\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ?\r\n                                        () => this.setState({\r\n                                            isFieldDelete: true,\r\n                                            showConfirmDeleteModal: true,\r\n                                            delete_field_id: element._id,\r\n                                            delete_field_name: element.value,\r\n                                            delete_field_index: index,\r\n                                        })\r\n                                        : () => this.handleCancelFieldClick(index)}>\r\n                                    <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducFields\r\n"]},"metadata":{},"sourceType":"module"}