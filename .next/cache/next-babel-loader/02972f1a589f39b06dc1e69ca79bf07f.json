{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nlet tagArray = [];\n\nclass ProducTags extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleTagRequestChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.tagRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        tagRequestList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleTagChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.tagList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        tagList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteTagClick\", index => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.tagList);\n      tagArray.forEach((element, i) => {\n        if (copyArray[index].value == element.value) {\n          tagArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n      this.setState({\n        tagList: copyArray,\n        showModalMessage: 'Product Tag Deleted',\n        showModal: true\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      tagValue: '',\n      error: '',\n      tagList: [],\n      tagRequestList: [],\n      editRequestedTag: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n  } // Getting Product Tags from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/categories/tags';\n    await axios.get(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(response => {\n      console.log('tags:', response.data.data);\n      let copyArray = [];\n      copyArray = response.data.data;\n      copyArray.forEach((data, index) => {\n        data.label = true;\n      });\n      this.setState({\n        tagList: copyArray\n      });\n      this.setState({\n        tagRequestList: this.state.tagList\n      });\n      tagArray = copyArray;\n    }).catch(error => {\n      alert('Tags_1 Fetchig Error: ', error);\n    });\n  }\n\n  async addTag(tagValue, currentComponent) {\n    const url = MuhalikConfig.PATH + '/api/categories/add-tag';\n    let data = [];\n    data = {\n      label: tagValue,\n      value: tagValue\n    };\n    await axios.post(url, {\n      data\n    }, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      currentComponent.setState({\n        showModalMessage: 'Product Tag Added Successfully'\n      });\n      currentComponent.setState({\n        showModal: true\n      });\n    }).catch(function (error) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      alert('Error: ', error.response.data.message);\n    });\n  }\n\n  handleFilterStrChange(e) {\n    this.setState({\n      filterStr: e.target.value\n    });\n\n    if (e.target.value == '') {\n      this.setState({\n        tagList: tagArray\n      });\n    } else {\n      let array = [];\n      this.state.tagList.filter(function (data) {\n        // var value = data.value.toLowerCase;\n        if (data.value.includes(e.target.value)) {\n          array.push(data);\n        }\n      });\n      this.setState({\n        tagList: array\n      });\n    }\n  }\n\n  async handleSubmit() {\n    if (this.state.tagValue == '') {\n      this.setState({\n        error: 'Enter Value First'\n      });\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        error: ''\n      });\n      this.addTag(this.state.tagValue, this);\n    }\n  } // Tag Request \n  // => Field Value \n\n\n  //  => Edit\n  async handleEditTagRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagRequestList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      tagRequestList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelTagRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagRequestList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    copyArray[index].error = '';\n    this.setState({\n      tagRequestList: copyArray\n    });\n  } // Update\n\n\n  handleUpdateTagRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagRequestList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        tagRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        this.setState({\n          tagRequestList: copyArray,\n          showModalMessage: 'Product Tag Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Add\n\n\n  handleAddTagRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      tagRequestList: copyArray,\n      showModalMessage: 'Product Tag Added Successfully',\n      showModal: true\n    });\n    this.addTag(copyArray[index].value, this);\n  } //  => Delete\n\n\n  handleDeleteTagRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      tagRequestList: copyArray,\n      showModalMessage: 'Product Tag Deleted',\n      showModal: true\n    });\n  } // All tags\n  //  => Chane\n\n\n  //  => Edit\n  async handleEditTagClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      tagList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelTagClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].error = '';\n    copyArray[index].label = true;\n    this.setState({\n      tagList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateTagClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.tagList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        tagRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        tagArray.forEach((element, i) => {\n          if (copyArray[index].prevVal == element.value) {\n            element.value = copyArray[index].value;\n          }\n        });\n        this.setState({\n          tagList: copyArray,\n          showModalMessage: 'Product Tag Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Delete\n\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showModal: false\n      }),\n      show: this.state.showModal,\n      header: 'Success',\n      message: this.state.showModalMessage,\n      iconName: faThumbsUp,\n      color: \"#00b300\"\n    }), __jsx(TitleRow, {\n      icon: faListAlt,\n      title: ' Admin Dashboard / Product Tags'\n    }), __jsx(CardAccordion, {\n      title: 'Add New Tag'\n    }, __jsx(Form.Group, null, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: this.state.tagValue,\n      onChange: e => this.setState({\n        tagValue: e.target.value\n      }),\n      isInvalid: this.state.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.error))), __jsx(Form.Group, null, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, this.state.isLoading ? 'Uploading' : 'Add Tag', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\"\n    }) : null))), __jsx(CardAccordion, {\n      title: 'Add Tag Requests'\n    }, this.state.tagRequestList.map((data, index) => __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: data.value,\n      disabled: true\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: data.value,\n      disabled: true\n    })), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 6,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleTagRequestChange(e, index),\n      isInvalid: data.error,\n      disabled: data.label\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, data.error))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => data.label ? this.handleEditTagRequestClick(index) : this.handleUpdateTagRequestClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        data.label ? this.handleAddTagRequestClick(index) : this.handleCancelTagRequestClick(index);\n      }\n    }, __jsx(\"div\", null, data.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => this.handleDeleteTagRequestClick(index)\n    }, __jsx(\"div\", null, \"Discard\")))))), __jsx(CardAccordion, {\n      title: 'All Tags'\n    }, __jsx(Form.Row, {\n      style: {\n        margin: '0% 5%'\n      }\n    }, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: this.state.filterStr,\n      onChange: e => this.handleFilterStrChange(e)\n    })))), __jsx(\"hr\", null), this.state.tagList.map((data, index) => __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 8,\n      md: 8,\n      sm: 12,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Tag Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleTagChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, data.error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 1,\n      md: 1,\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleEditTagClick(index) : () => this.handleUpdateTagClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: data.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleDeleteTagClick(index) : () => this.handleCancelTagClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Delete' : 'Cancel')))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducTags;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-tags.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","tagArray","ProducTags","constructor","props","e","index","copyArray","Object","assign","state","tagRequestList","value","target","length","error","setState","tagList","forEach","element","i","splice","showModalMessage","showModal","isLoading","showToast","tagValue","editRequestedTag","filterStr","componentDidMount","url","PATH","get","headers","then","response","console","log","data","label","catch","alert","addTag","currentComponent","post","message","handleFilterStrChange","array","filter","includes","push","handleSubmit","handleEditTagRequestClick","obj","handleCancelTagRequestClick","prevVal","handleUpdateTagRequestClick","handleAddTagRequestClick","handleDeleteTagRequestClick","handleEditTagClick","handleCancelTagClick","handleUpdateTagClick","render","bind","styles","submit_btn","map","handleTagRequestChange","margin","handleTagChange","handleDeleteTagClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet tagArray = [];\r\nclass ProducTags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            tagValue: '',\r\n            error: '',\r\n            tagList: [],\r\n            tagRequestList: [],\r\n\r\n            editRequestedTag: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Tags from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/tags';\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            console.log('tags:', response.data.data)\r\n            let copyArray = [];\r\n            copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ tagList: copyArray });\r\n            this.setState({ tagRequestList: this.state.tagList });\r\n            tagArray = copyArray;\r\n        }).catch((error) => {\r\n            alert('Tags_1 Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async addTag(tagValue, currentComponent) {\r\n        const url = MuhalikConfig.PATH + '/api/categories/add-tag';\r\n        let data = []\r\n        data = { label: tagValue, value: tagValue }\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Tag Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ tagList: tagArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.tagList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ tagList: array });\r\n        }\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.state.tagValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addTag(this.state.tagValue, this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Tag Request \r\n    // => Field Value \r\n    handleTagRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ tagRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Added Successfully', showModal: true })\r\n        this.addTag(copyArray[index].value, this)\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All tags\r\n    //  => Chane\r\n    handleTagChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateTagClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ tagRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                tagArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.tagList);\r\n        tagArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                tagArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Tags'} />\r\n\r\n                {/* Add New Tag */}\r\n                <CardAccordion title={'Add New Tag'}>\r\n                    <Form.Group>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                size=\"sm\"\r\n                                placeholder=\"Enter Tag Value\"\r\n                                name=\"sku\"\r\n                                value={this.state.tagValue}\r\n                                onChange={(e) => this.setState({ tagValue: e.target.value })}\r\n                                isInvalid={this.state.error}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {this.state.error}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Tag'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Tag Requests */}\r\n                <CardAccordion title={'Add Tag Requests'}>\r\n                    {this.state.tagRequestList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Tag Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Tag Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Tag Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleTagRequestChange(e, index)}\r\n                                        isInvalid={data.error}\r\n                                        disabled={data.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => data.label ? this.handleEditTagRequestClick(index) : this.handleUpdateTagRequestClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { data.label ? this.handleAddTagRequestClick(index) : this.handleCancelTagRequestClick(index) }}>\r\n                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteTagRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Tags */}\r\n                <CardAccordion title={'All Tags'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Tag Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.tagList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Tag Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleTagChange(e, index)}\r\n                                        disabled={data.label}\r\n                                        isInvalid={data.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleEditTagClick(index) : () => this.handleUpdateTagClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleDeleteTagClick(index) : () => this.handleCancelTagClick(index)}>\r\n                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducTags\r\n"]},"metadata":{},"sourceType":"module"}