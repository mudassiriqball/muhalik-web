{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Row, Table, Form, Button, Nav } from 'react-bootstrap';\nimport axios from 'axios';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\nimport ViewProduct from './all-products-contents/view-product';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n\nvar AllProducts = /*#__PURE__*/function (_Component) {\n  _inherits(AllProducts, _Component);\n\n  var _super = _createSuper(AllProducts);\n\n  function AllProducts(props) {\n    var _this;\n\n    _classCallCheck(this, AllProducts);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      productsArray: [],\n      viewProduct: false,\n      data: {}\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(AllProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/products/';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url));\n\n            case 4:\n              response = _context.sent;\n              console.log('data:', response.data.data.docs);\n              this.setState({\n                productsArray: response.data.data.docs\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('Data Fetching Eror:', _context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 9]], Promise);\n    }\n  }, {\n    key: \"handleViewProduct\",\n    value: function handleViewProduct(index) {\n      // let dataa;\n      // Simple Product\n      // if (i == -1) {\n      this.setState({\n        data: {},\n        viewProduct: false\n      });\n      this.setState({\n        data: this.state.productsArray[index],\n        viewProduct: true\n      }); // } else { // Variable Product\n      // dataa = Object.assign([], this.state.productsArray[index])\n      // dataa.product_variations = dataa.product_variations[i];\n      //     this.setState({ data: this.state.productsArray[index], viewProduct: true })\n      // }\n      // console.log('datadata:', data)\n      // Router.push({\n      //     pathname: '/view-product',\n      //     query: { data: data },\n      // }, '/vendor/view-product?' + data.product_name);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, this.state.viewProduct ? __jsx(ViewProduct, {\n        product_name: this.state.data.product_name,\n        product_image_link: this.state.data.product_image_link,\n        back: function back() {\n          return _this2.setState({\n            viewProduct: false\n          });\n        }\n      }) : __jsx(React.Fragment, null, __jsx(Row, {\n        style: styles.title_row,\n        noGutters: true\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPlus,\n        style: styles.title_fontawesome\n      }), __jsx(\"div\", {\n        style: styles.title,\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n      }, \" All Products\")), __jsx(Row, {\n        noGutters: true,\n        style: {\n          margin: '2%',\n          background: 'white'\n        }\n      }, __jsx(Table, {\n        responsive: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\"\n      }, __jsx(\"thead\", {\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, __jsx(\"tr\", {\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, __jsx(Form.Check, {\n        type: \"checkbox\"\n      })), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Name\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"SKU\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Stock\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Price\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Categories\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Tags\"), __jsx(\"th\", {\n        style: {\n          textAlign: 'center'\n        },\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, \"Date\"))), __jsx(\"tbody\", {\n        className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n      }, this.state.productsArray && this.state.productsArray.map(function (element, index) {\n        return _.isEqual(element.product_type, \"simple-product\") ? __jsx(\"tr\", {\n          key: index,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(Form.Check, {\n          type: \"checkbox\"\n        })), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: function onClick() {\n            return _this2.handleViewProduct(index);\n          }\n        }, \" View \"), __jsx(Nav.Link, {\n          style: styles.nav_link\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_in_stock), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_price), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_category && element.product_category.map(function (e) {\n          return e.value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, _.isEmpty(element.product_tags) ? '-' : element.product_tags.map(function (e) {\n          return e.value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, _.isEmpty(element.product_entry_date) ? '-' : element.product_entry_date)) : __jsx(React.Fragment, null, __jsx(\"tr\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(Form.Check, {\n          type: \"checkbox\"\n        })), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: function onClick() {\n            return _this2.handleViewProduct(index);\n          }\n        }, \"View\"), __jsx(Nav.Link, {\n          style: styles.nav_link\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(function (e) {\n          return e.item[e.item.length - 2].value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(function (e) {\n          return e.item[e.item.length - 3].value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_category && element.product_category.map(function (e) {\n          return e.value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, _.isEmpty(element.product_tags) ? '-' : element.product_tags.map(function (e) {\n          return e.value + ',';\n        })), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, _.isEmpty(element.product_entry_date) ? '-' : element.product_entry_date)));\n      }))))), __jsx(_JSXStyle, {\n        id: \"3582920204\",\n        dynamic: [GlobalStyleSheet.form_label_fontsize]\n      }, [\".td.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:\".concat(GlobalStyleSheet.form_label_fontsize, \";}\")]));\n    }\n  }]);\n\n  return AllProducts;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '0.7% 4%',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '20px',\n    height: '20px',\n    maxHeight: '20px',\n    maxWidth: '20px'\n  },\n  title: {\n    color: 'gray'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  nav_link: {\n    paddingLeft: '10px',\n    paddingRight: '5px'\n  }\n};\nexport default AllProducts;","map":null,"metadata":{},"sourceType":"module"}