{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\add-new-field-name-model.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Modal, Form, InputGroup, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\n\nfunction AddNewFieldNameModal(props) {\n  _s();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      error = _React$useState4[0],\n      setError = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showMessage = _React$useState6[0],\n      setShowMessage = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      message = _React$useState8[0],\n      setMessage = _React$useState8[1];\n\n  function handleAdd() {\n    return _handleAdd.apply(this, arguments);\n  }\n\n  function _handleAdd() {\n    _handleAdd = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(value.length > 2 && value.length < 21)) {\n                _context.next = 8;\n                break;\n              }\n\n              url = MuhalikConfig.PATH + '/api/categories/field-request';\n              data = [];\n              data = {\n                value: value,\n                label: value\n              };\n              _context.next = 6;\n              return axios.post(url, {\n                data: data\n              }, {\n                headers: {\n                  'authorization': props.token\n                }\n              }).then(function (response) {\n                setMessage('Your Request Sended Successfully, You will be informed soon');\n                setShowMessage(true);\n              })[\"catch\"](function (error) {\n                setMessage('Request Failed');\n                setShowMessage(true);\n              });\n\n            case 6:\n              _context.next = 10;\n              break;\n\n            case 8:\n              setError('Must be 2-20 characters');\n              setShowMessage(false);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleAdd.apply(this, arguments);\n  }\n\n  return __jsx(Modal, _extends({}, props, {\n    size: \"md\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Add New Field\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, message ? {\n    message: message\n  } : __jsx(React.Fragment, null, __jsx(Form.Label, {\n    style: {\n      fontSize: '14px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, \"Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\"), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Field Name\",\n    name: \"sku\",\n    value: value,\n    onChange: function onChange(e) {\n      return setValue(e.target.value);\n    },\n    isInvalid: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, error))))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    size: \"sm\",\n    className: \"mr-auto\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Add\"), __jsx(Button, {\n    size: \"sm\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n}\n\n_s(AddNewFieldNameModal, \"JAFjHN0htohk4MaZ0Q3s36hEyuM=\");\n\n_c = AddNewFieldNameModal;\nexport default AddNewFieldNameModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewFieldNameModal\");","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/add-new-field-name-model.js"],"names":["Modal","Form","InputGroup","Button","React","Component","axios","MuhalikConfig","AddNewFieldNameModal","props","useState","value","setValue","error","setError","showMessage","setShowMessage","message","setMessage","handleAdd","length","url","PATH","data","label","post","headers","token","then","response","fontSize","textAlign","width","e","target","onHide"],"mappings":"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","sourcesContent":["import { Modal, Form, InputGroup, Button } from 'react-bootstrap'\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config'\r\n\r\nfunction AddNewFieldNameModal(props) {\r\n    const [value, setValue] = React.useState(\"\")\r\n    const [error, setError] = React.useState(\"\")\r\n    const [showMessage, setShowMessage] = React.useState(false)\r\n    const [message, setMessage] = React.useState('')\r\n\r\n    async function handleAdd() {\r\n        if (value.length > 2 && value.length < 21) {\r\n            const url = MuhalikConfig.PATH + '/api/categories/field-request';\r\n            let data = []\r\n            data = {\r\n                value: value,\r\n                label: value\r\n            }\r\n            await axios.post(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': props.token }\r\n            }).then((response) => {\r\n                setMessage('Your Request Sended Successfully, You will be informed soon')\r\n                setShowMessage(true)\r\n            }).catch((error) => {\r\n                setMessage('Request Failed')\r\n                setShowMessage(true)\r\n            });\r\n        } else {\r\n            setError('Must be 2-20 characters')\r\n            setShowMessage(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add New Field\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {message ?\r\n                    { message }\r\n                    :\r\n                    <>\r\n                        <Form.Label style={{ fontSize: '14px', textAlign: 'center', width: '100%' }}>\r\n                            Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\r\n                        </Form.Label>\r\n                        <Form.Group>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Name\"\r\n                                    name=\"sku\"\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    isInvalid={error}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {error}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </>\r\n                }\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button size=\"sm\" className=\"mr-auto\" onClick={handleAdd}>\r\n                    Add\r\n                </Button>\r\n                <Button size=\"sm\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNewFieldNameModal"]},"metadata":{},"sourceType":"module"}