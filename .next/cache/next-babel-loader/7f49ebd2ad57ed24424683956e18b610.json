{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import product_size_options from '../../../../../../../sdk/consts/product-size-options'\n// import product_color_options from '../../../../../../../sdk/consts/product-color-options'\n// import { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import {\n//     faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown,\n// } from '@fortawesome/free-solid-svg-icons';\n// import CreatableSelect from 'react-select/creatable';\n// import ReactSelectMaterialUi from \"react-select-material-ui\";\n// import GlobalStyleSheet from '../../../../../../../styleSheet';\n// import MuhalikConfig from '../../../../../../../sdk/muhalik.config';\n// import Select, { components } from 'react-select';\n// import { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\n// import AddNewFieldNameModal from './add-new-field-name-model'\n// const groupStyles = {\n//     border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\n//     borderRadius: '5px',\n//     background: 'white',\n//     color: `${GlobalStyleSheet.admin_primry_color}`,\n// };\n// const coomponents = {\n//     DropdownIndicator: null,\n// };\n// const Group = props => (\n//     <div style={groupStyles}>\n//         <components.Group {...props} />\n//     </div>\n// );\n// const ProductData = props => {\n//     const [modalShow, setModalShow] = React.useState(false);\n//     let variations = true;\n//     if (props.attributesArray == '') {\n//         variations = false;\n//     } else {\n//         variations = true;\n//     }\n//     return (\n//         <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\n//             <Card style={styles.card}>\n//                 <Card.Header style={styles.card_header}>\n//                     <Row noGutters style={{ display: 'flex', alignItems: 'center' }}>\n//                         <Col lg={3} md={3} sm={3} xs={4}>\n//                             Product Data\n//                         </Col>\n//                         <Col lg={3} md={3} sm={5} xs={8}>\n//                             <Form.Control\n//                                 as=\"select\"\n//                                 name=\"product_type\"\n//                                 size=\"sm\"\n//                                 value={props.product_type_values}\n//                                 onChange={(e) => { props.onChange(e); props.productTypeHandler(e) }}\n//                             >\n//                                 <option value='simple-product'> Simple Product </option>\n//                                 <option value=\"variable-prouct\"> Variable Product </option>\n//                             </Form.Control>\n//                         </Col>\n//                         <div className=\"mr-auto\"></div>\n//                         <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\n//                             <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\n//                         </Accordion.Toggle>\n//                     </Row>\n//                 </Card.Header>\n//                 <Accordion.Collapse eventKey=\"0\">\n//                     <Card.Body style={{ padding: '0.5%', margin: '0px' }}>\n//                         <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Inventory\">\n//                             <Row style={{ margin: '0px' }} noGutters>\n//                                 <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\" style={{ background: `${GlobalStyleSheet.admin_primry_color}` }}>\n//                                     <Nav variant=\"pills\" className=\"flex-column\" style={{ margin: '0px' }}>\n//                                         <Nav.Item>\n//                                             <div className=\"nav_link\">\n//                                                 <Nav.Link eventKey=\"Inventory\" style={styles.nav_link}>\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faStoreAlt} style={styles.product_fontawesome} />\n//                                                     <div className=\"linkName\"> Inventory </div>\n//                                                 </Nav.Link>\n//                                             </div>\n//                                         </Nav.Item>\n//                                         {!props.isVariableProduct ?\n//                                             <Nav.Item>\n//                                                 <div className=\"nav_link\">\n//                                                     <Nav.Link eventKey=\"General\" style={styles.nav_link}>\n//                                                         <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.product_fontawesome} />\n//                                                         <div className=\"linkName\"> General </div>\n//                                                     </Nav.Link>\n//                                                 </div>\n//                                             </Nav.Item>\n//                                             :\n//                                             <>\n//                                                 <Nav.Item>\n//                                                     <div className=\"nav_link\">\n//                                                         <Nav.Link eventKey=\"Attributes\" style={styles.nav_link}>\n//                                                             <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\n//                                                             <div className=\"linkName\"> Attributes </div>\n//                                                         </Nav.Link>\n//                                                     </div>\n//                                                 </Nav.Item>\n//                                                 <Nav.Item>\n//                                                     <div className=\"nav_link\">\n//                                                         <Nav.Link eventKey=\"Variations\" style={styles.nav_link}>\n//                                                             <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\n//                                                             <div className=\"linkName\"> Variations </div>\n//                                                         </Nav.Link>\n//                                                     </div>\n//                                                 </Nav.Item>\n//                                             </>\n//                                         }\n//                                         <Nav.Item>\n//                                             <div className=\"nav_link\">\n//                                                 <Nav.Link eventKey=\"Shipping\" style={styles.nav_link}>\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faTruck} style={styles.product_fontawesome} />\n//                                                     <div className=\"linkName\"> Shipping </div>\n//                                                 </Nav.Link>\n//                                             </div>\n//                                         </Nav.Item>\n//                                         <Nav.Item>\n//                                             <div className=\"nav_link\">\n//                                                 <Nav.Link eventKey=\"Advanced\" style={styles.nav_link}>\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faTools} style={styles.product_fontawesome} />\n//                                                     <div className=\"linkName\"> Advanced </div>\n//                                                 </Nav.Link>\n//                                             </div>\n//                                         </Nav.Item>\n//                                         {/* <Nav.Item>\n//                                     <div className=\"nav_link\">\n//                                         <Nav.Link eventKey=\"Commission\" style={styles.nav_link}>\n//                                             <FontAwesomeIcon size=\"xs\" icon={faDollarSign} style={styles.product_fontawesome} />\n//                                             <div> Commission </div>\n//                                         </Nav.Link>\n//                                     </div>\n//                                 </Nav.Item> */}\n//                                     </Nav>\n//                                 </Col>\n//                                 <Col style={{ padding: '2%' }}>\n//                                     <Tab.Content>\n//                                         <Tab.Pane eventKey=\"General\">\n//                                             {props.isVariableProduct ? null :\n//                                                 <>\n//                                                     <Form.Row>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Product Price <span> * </span></Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"number\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Product Price\"\n//                                                                     name=\"product_price\"\n//                                                                     value={props.product_price_values}\n//                                                                     onChange={props.onChange}\n//                                                                     isInvalid={props.product_price_touched && props.product_price_errors}\n//                                                                 />\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.product_price_errors}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Product in Stock</Form.Label>\n//                                                             <Form.Control type=\"number\"\n//                                                                 size=\"sm\"\n//                                                                 name=\"product_in_stock\"\n//                                                                 value={props.product_in_stock_values}\n//                                                                 onChange={props.onChange}\n//                                                                 isInvalid={props.product_in_stock_touched && props.product_in_stock_errors}\n//                                                             />\n//                                                             <Form.Control.Feedback type=\"invalid\">\n//                                                                 {props.product_in_stock_errors}\n//                                                             </Form.Control.Feedback>\n//                                                         </Form.Group>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Brand Name</Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"text\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Brand Name\"\n//                                                                     name=\"product_brand_name\"\n//                                                                     value={props.product_brand_name_values}\n//                                                                     onChange={props.onChange}\n//                                                                     isInvalid={props.product_brand_name_touched && props.product_brand_name_errors}\n//                                                                 />\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.product_brand_name_errors}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                     </Form.Row>\n//                                                     <Form.Row>\n//                                                         <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Image Link <span> * </span></Form.Label>\n//                                                             {/* <CreatableSelect\n//                                                                 isMulti\n//                                                                 onChange={props.simpleProductImageLinkHandler}\n//                                                                 value={props.imageLink}\n//                                                                 placeholder=\"Select/Enter Size\"\n//                                                             /> */}\n//                                                             <CreatableSelect\n//                                                                 components={coomponents}\n//                                                                 inputValue={props.inputValue}\n//                                                                 isClearable\n//                                                                 isMulti\n//                                                                 menuIsOpen={false}\n//                                                                 onChange={props.simpleProductImageLinkHandler}\n//                                                                 onInputChange={props.simpleProductImageLinkInputChangeHandler}\n//                                                                 onKeyDown={props.simpleProductImageLinkhandleKeyDownHandler}\n//                                                                 placeholder=\"Type something and press enter...\"\n//                                                                 value={props.imageLink}\n//                                                             />\n//                                                         </Form.Group>\n//                                                     </Form.Row>\n//                                                     {/*<Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Product Color</Form.Label>\n//                                                     <CreatableSelect\n//                                                         onChange={props.productColorChangeHandler}\n//                                                         options={product_color_options}\n//                                                         value={props.color}\n//                                                         placeholder=\"Select/Enter Color\"\n//                                                     />\n//                                                 </Form.Group>\n//                                             </Form.Row> */}\n//                                                     <Form.Row>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Product Warranty (months) </Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"number\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Product Warranty\"\n//                                                                     name=\"product_warranty\"\n//                                                                     value={props.product_warranty_values}\n//                                                                     onChange={props.onChange}\n//                                                                     isInvalid={props.product_warranty_touched && props.product_warranty_errors}\n//                                                                 />\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.product_warranty_errors}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}> Warranty Type </Form.Label>\n//                                                             <InputGroup>\n//                                                                 <InputGroup.Prepend>\n//                                                                     <Form.Control\n//                                                                         as=\"select\"\n//                                                                         name=\"warranty_type\"\n//                                                                         size=\"sm\"\n//                                                                         value={props.warranty_type_values}\n//                                                                         onChange={props.onChange}\n//                                                                         isInvalid={props.warranty_type_touched && props.warranty_type_errors}\n//                                                                     >\n//                                                                         <option>Waranty Type</option>\n//                                                                         <option> No Warranty </option>\n//                                                                         <option> Brand Warranty </option>\n//                                                                         <option> Local Warranty </option>\n//                                                                         <option> Local Seller Warranty </option>\n//                                                                         <option> Non-Local Warranty </option>\n//                                                                         <option> Internationsl Warranty </option>\n//                                                                         <option> Internationsl Seller Warranty </option>\n//                                                                         <option> International Manufacturer Warranty </option>\n//                                                                     </Form.Control>\n//                                                                 </InputGroup.Prepend>\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.product_warranty_errors}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                             <Form.Label style={styles.label}>Product Discount</Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"number\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Discount on on Product(%)\"\n//                                                                     name=\"product_discount\"\n//                                                                     value={props.product_discount_values}\n//                                                                     onChange={props.onChange}\n//                                                                     isInvalid={props.product_discount_touched && props.product_discount_errors}\n//                                                                 />\n//                                                                 <InputGroup.Prepend>\n//                                                                     <Button variant='primary' size=\"sm\">%</Button>\n//                                                                 </InputGroup.Prepend>\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.product_discount_errors}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                     </Form.Row>\n//                                                 </>\n//                                             }\n//                                         </Tab.Pane>\n//                                         <Tab.Pane eventKey=\"Inventory\">\n//                                             <Form.Row>\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Product SKU</Form.Label>\n//                                                     <InputGroup>\n//                                                         <Form.Control\n//                                                             type=\"text\"\n//                                                             size=\"sm\"\n//                                                             placeholder=\"Enter SKU (Stock Keeping Unit)\"\n//                                                             name=\"sku\"\n//                                                             value={props.sku_values}\n//                                                             onChange={props.onChange}\n//                                                             isInvalid={props.sku_touched && props.sku_errors}\n//                                                         />\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.sku_errors}\n//                                                         </Form.Control.Feedback>\n//                                                     </InputGroup>\n//                                                 </Form.Group>\n//                                             </Form.Row>\n//                                         </Tab.Pane>\n//                                         <Tab.Pane eventKey=\"Shipping\">\n//                                             <Form.Group as={Row} noGutters>\n//                                                 <Form.Label style={styles.label}>Weight (kg)</Form.Label>\n//                                                 <Form.Control type=\"number\"\n//                                                     name=\"product_weight\"\n//                                                     size=\"sm\"\n//                                                     value={props.product_weight_values}\n//                                                     onChange={props.onChange}\n//                                                     isInvalid={props.product_weight_touched && props.product_weight_errors}\n//                                                 />\n//                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                     {props.product_weight_errors}\n//                                                 </Form.Control.Feedback>\n//                                             </Form.Group>\n//                                             <Form.Group as={Row} noGutters>\n//                                                 <Form.Label style={styles.label}>Dimensions (cm)</Form.Label>\n//                                                 <InputGroup>\n//                                                     <InputGroup.Prepend>\n//                                                         <Form.Control\n//                                                             type=\"number\"\n//                                                             name=\"dimension_length\"\n//                                                             size=\"sm\"\n//                                                             value={props.dimension_length_values}\n//                                                             onChange={props.onChange}\n//                                                             placeholder=\"Length\"\n//                                                             isInvalid={props.dimension_length_touched && props.dimension_length_errors}\n//                                                         />\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.dimension_length_errors}\n//                                                         </Form.Control.Feedback>\n//                                                     </InputGroup.Prepend>\n//                                                     <Form.Control\n//                                                         type=\"number\"\n//                                                         name=\"dimension_width\"\n//                                                         size=\"sm\"\n//                                                         value={props.dimension_width_values}\n//                                                         placeholder=\"Width\"\n//                                                         onChange={props.onChange}\n//                                                         isInvalid={props.dimension_width_touched && props.dimension_width_errors}\n//                                                     />\n//                                                     <InputGroup.Prepend>\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.dimension_width_errors}\n//                                                         </Form.Control.Feedback>\n//                                                         <Form.Control\n//                                                             type=\"number\"\n//                                                             name=\"dimension_height\"\n//                                                             size=\"sm\"\n//                                                             value={props.dimension_height_values}\n//                                                             placeholder=\"Height\"\n//                                                             onChange={props.onChange}\n//                                                             isInvalid={props.dimension_height_touched && props.dimension_height_errors}\n//                                                         />\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.dimension_height_errors}\n//                                                         </Form.Control.Feedback>\n//                                                     </InputGroup.Prepend>\n//                                                 </InputGroup>\n//                                             </Form.Group>\n//                                             <Form.Row>\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Product Shipping Charges</Form.Label>\n//                                                     <InputGroup>\n//                                                         <Form.Control\n//                                                             type=\"text\"\n//                                                             size=\"sm\"\n//                                                             placeholder=\"Enter Product Shipping Charges\"\n//                                                             name=\"shipping_charges\"\n//                                                             value={props.shipping_charges_values}\n//                                                             onChange={props.onChange}\n//                                                             isInvalid={props.shipping_charges_touched && props.shipping_charges_errors}\n//                                                         />\n//                                                         <InputGroup.Prepend>\n//                                                             <Button variant='primary' size=\"sm\">Riyal</Button>\n//                                                         </InputGroup.Prepend>\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.shipping_charges_errors}\n//                                                         </Form.Control.Feedback>\n//                                                     </InputGroup>\n//                                                 </Form.Group>\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Product Handling Fee</Form.Label>\n//                                                     <InputGroup>\n//                                                         <Form.Control\n//                                                             type=\"text\"\n//                                                             size=\"sm\"\n//                                                             placeholder=\"Enter Product Handling Fee\"\n//                                                             name=\"handling_fee\"\n//                                                             value={props.handling_fee_values}\n//                                                             onChange={props.onChange}\n//                                                             isInvalid={props.handling_fee_touched && props.handling_fee_errors}\n//                                                         />\n//                                                         <InputGroup.Prepend>\n//                                                             <Button variant='primary' size=\"sm\">Riyal</Button>\n//                                                         </InputGroup.Prepend>\n//                                                         <Form.Control.Feedback type=\"invalid\">\n//                                                             {props.handling_fee_errors}\n//                                                         </Form.Control.Feedback>\n//                                                     </InputGroup>\n//                                                 </Form.Group>\n//                                             </Form.Row>\n//                                         </Tab.Pane>\n//                                         <Tab.Pane eventKey=\"Attributes\">\n//                                             <Form.Row >\n//                                                 <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Field Name</Form.Label>\n//                                                     <Select\n//                                                         options={groupedOptions}\n//                                                         components={{ Group }}\n//                                                         value={props.productAttributeNameSelected}\n//                                                         onChange={props.attributeNameHandler}\n//                                                     />\n//                                                     <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\n//                                                         Add New\n//                                                     </Nav.Link>\n//                                                     <AddNewFieldNameModal\n//                                                         show={modalShow}\n//                                                         onHide={() => setModalShow(false)}\n//                                                     />\n//                                                 </Form.Group>\n//                                                 <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\n//                                                     <Form.Label style={styles.label}>Field Value </Form.Label>\n//                                                     <InputGroup>\n//                                                         <Form.Control\n//                                                             type=\"text\"\n//                                                             placeholder=\"Enter Value\"\n//                                                             name=\"sku\"\n//                                                             value={props.value}\n//                                                             onChange={props.attributeValueHandler}\n//                                                         />\n//                                                         <Button variant=\"outline-primary\" style={{ marginLeft: '1%' }}\n//                                                             onClick={props.addAttributeHandler}>Add</Button>\n//                                                     </InputGroup>\n//                                                 </Form.Group>\n//                                                 <Form.Label style={styles.label}>\n//                                                     <span style={{ color: 'red' }}>{props.error}</span>\n//                                                 </Form.Label>\n//                                             </Form.Row>\n//                                             <Form.Row>\n//                                                 <Form.Label style={styles.label} className=\"mr-auto\">For Multiple Values add | between values</Form.Label>\n//                                                 <Button variant=\"outline-primary\" size=\"sm\"\n//                                                     onClick={props.createVariationsHandler}>Create Variations</Button>\n//                                             </Form.Row>\n//                                             <hr />\n//                                             {/* <Card style={{ background: 'lightGray', margin: '0.5% 1%' }}> */}\n//                                             {props.attributesArray && props.attributesArray.map((data, index) =>\n//                                                 <Form.Row style={{ padding: '0%' }} key={index}>\n//                                                     <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\n//                                                         <Form.Control\n//                                                             as=\"select\"\n//                                                             size=\"sm\"\n//                                                             value={data.productAttributeName}\n//                                                             onChange={() => data.productAttributeName}\n//                                                         >\n//                                                             <option>{data.productAttributeName}</option>\n//                                                         </Form.Control>\n//                                                     </Form.Group>\n//                                                     <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\n//                                                         <InputGroup>\n//                                                             <Form.Control\n//                                                                 type=\"text\"\n//                                                                 size=\"sm\"\n//                                                                 placeholder=\"Enter Value\"\n//                                                                 name=\"sku\"\n//                                                                 value={data.productAttributeValue}\n//                                                                 onChange={() => data.productAttributeValue}\n//                                                             />\n//                                                             <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\n//                                                                 onClick={() => props.deleteAttributeHandler(index)}> delete</Button>\n//                                                         </InputGroup>\n//                                                     </Form.Group>\n//                                                     {/* <Button variant=\"outline-primary\" size=\"sm\" block style={{ width: '100px' }}\n//                                                     onClick={() => props.update(index, data.fieldName, data.fieldValue)}> update</Button> */}\n//                                                 </Form.Row>\n//                                             )}\n//                                         </Tab.Pane>\n//                                         <Tab.Pane eventKey=\"Variations\">\n//                                             {variations ?\n//                                                 <>\n//                                                     <Form.Row>\n//                                                         {/* Same Price */}\n//                                                         <Form.Group as={Col} >\n//                                                             <Form.Label style={styles.label}> Same Price</Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"number\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Price\"\n//                                                                     name=\"samePrice\"\n//                                                                     value={props.samePriceInput}\n//                                                                     onChange={props.variationsSamePriceChanged}\n//                                                                     isInvalid={props.samePriceError}\n//                                                                 />\n//                                                                 <InputGroup.Prepend>\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSamePriceHandler} size=\"sm\">Apply</Button>\n//                                                                 </InputGroup.Prepend>\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.samePriceError}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                         {/* Same Stock */}\n//                                                         <Form.Group as={Col} >\n//                                                             <Form.Label style={styles.label}> Same Stock</Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"number\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Stock\"\n//                                                                     name=\"sameStock\"\n//                                                                     value={props.sameStockInput}\n//                                                                     onChange={props.variationsSameStockChanged}\n//                                                                     isInvalid={props.sameStockError}\n//                                                                 />\n//                                                                 <InputGroup.Prepend>\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSameStockHandler} size=\"sm\">Apply</Button>\n//                                                                 </InputGroup.Prepend>\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.sameStockError}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                         {/* Same Image Link */}\n//                                                         <Form.Group as={Col} >\n//                                                             <Form.Label style={styles.label}> Same Image</Form.Label>\n//                                                             <InputGroup>\n//                                                                 <Form.Control\n//                                                                     type=\"text\"\n//                                                                     size=\"sm\"\n//                                                                     placeholder=\"Enter Image Link\"\n//                                                                     name=\"sameImgLinkInput\"\n//                                                                     value={props.sameImgLinkInput}\n//                                                                     onChange={props.variationsSameImgLinkChanged}\n//                                                                     isInvalid={props.sameImgLinkError}\n//                                                                 />\n//                                                                 <InputGroup.Prepend>\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSameImgLinkHandler} size=\"sm\">Apply</Button>\n//                                                                 </InputGroup.Prepend>\n//                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                     {props.sameImgLinkError}\n//                                                                 </Form.Control.Feedback>\n//                                                             </InputGroup>\n//                                                         </Form.Group>\n//                                                     </Form.Row>\n//                                                     <hr />\n//                                                     {props.variationsArray && props.variationsArray.map((data, index) =>\n//                                                         <div key={index} >\n//                                                             <Accordion>\n//                                                                 <Row noGutters style={{ border: props.variationsErrorHandler(data) }}>\n//                                                                     {data.items && data.items.map((d, i) =>\n//                                                                         <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\n//                                                                             <Form.Control\n//                                                                                 type=\"text\"\n//                                                                                 size=\"sm\"\n//                                                                                 placeholder=\"Enter Value\"\n//                                                                                 name=\"sku\"\n//                                                                                 value={d.value}\n//                                                                                 onChange={() => data.productAttributeValue}\n//                                                                             />\n//                                                                         </Form.Group>\n//                                                                     )}\n//                                                                     <div className=\"mr-auto\"></div>\n//                                                                     <Accordion.Toggle as={Form.Group} eventKey=\"0\">\n//                                                                         <Button variant=\"outline-primary\" size=\"sm\" style={{ marginRight: '10px' }}>\n//                                                                             <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\n//                                                                         </Button>\n//                                                                     </Accordion.Toggle>\n//                                                                     <Form.Group style={{ float: 'right' }}>\n//                                                                         <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\n//                                                                             onClick={() => props.deleteVariationHandler(index)}> delete</Button>\n//                                                                     </Form.Group>\n//                                                                 </Row>\n//                                                                 <Accordion.Collapse eventKey=\"0\">\n//                                                                     <div>\n//                                                                         <Form.Row>\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\n//                                                                                 <Form.Label style={styles.label}>Product Price<span>*</span></Form.Label>\n//                                                                                 <InputGroup>\n//                                                                                     <Form.Control\n//                                                                                         type=\"number\"\n//                                                                                         size=\"sm\"\n//                                                                                         placeholder=\"Enter Product Price\"\n//                                                                                         name=\"product_price\"\n//                                                                                         value={data.price}\n//                                                                                         onChange={(e) => props.variationPriceHandler(e, index)}\n//                                                                                         isInvalid={data.price_error}\n//                                                                                     />\n//                                                                                     <Form.Control.Feedback type=\"invalid\">\n//                                                                                         {data.price_error}\n//                                                                                     </Form.Control.Feedback>\n//                                                                                 </InputGroup>\n//                                                                             </Form.Group>\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\n//                                                                                 <Form.Label style={styles.label}>Product in Stock</Form.Label>\n//                                                                                 <Form.Control type=\"number\"\n//                                                                                     size=\"sm\"\n//                                                                                     name=\"product_in_stock\"\n//                                                                                     placeholder=\"Enter Product In Stock\"\n//                                                                                     value={data.stock}\n//                                                                                     onChange={(e) => props.variationStockHandler(e, index)}\n//                                                                                 />\n//                                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                                 </Form.Control.Feedback>\n//                                                                             </Form.Group>\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\n//                                                                                 <Form.Label style={styles.label}>Image Link</Form.Label>\n//                                                                                 <Form.Control type=\"text\"\n//                                                                                     size=\"sm\"\n//                                                                                     name=\"image_link\"\n//                                                                                     placeholder=\"Enter Image Link\"\n//                                                                                     value={data.image_link}\n//                                                                                     onChange={(e) => props.variationImageLinkHandler(e, index)}\n//                                                                                     isInvalid={data.image_link_error}\n//                                                                                 />\n//                                                                                 <Form.Control.Feedback type=\"invalid\">\n//                                                                                     {data.image_link_error}\n//                                                                                 </Form.Control.Feedback>\n//                                                                             </Form.Group>\n//                                                                         </Form.Row>\n//                                                                         <Form.Row>\n//                                                                             {data.customField && data.customField.map((d, i) =>\n//                                                                                 <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\n//                                                                                     <Form.Label style={styles.label}>{d.name}</Form.Label>\n//                                                                                     <InputGroup>\n//                                                                                         <Form.Control\n//                                                                                             type=\"text\"\n//                                                                                             size=\"sm\"\n//                                                                                             placeholder=\"Enter Value\"\n//                                                                                             name=\"sku\"\n//                                                                                             value={d.value}\n//                                                                                             onChange={() => data.productAttributeValue}\n//                                                                                         />\n//                                                                                         <InputGroup.Prepend>\n//                                                                                             <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\n//                                                                                                 onClick={() => props.deleteVariationCustomFieldHandler(index, i)}> delete</Button>\n//                                                                                         </InputGroup.Prepend>\n//                                                                                     </InputGroup>\n//                                                                                 </Form.Group>\n//                                                                             )}\n//                                                                         </Form.Row>\n//                                                                     </div>\n//                                                                 </Accordion.Collapse>\n//                                                             </Accordion>\n//                                                             <hr />\n//                                                         </div>\n//                                                     )}\n//                                                     <Button variant=\"outline-primary\" size=\"sm\" block onClick={props.saveVariationsHandler}> Save Variations</Button>\n//                                                 </>\n//                                                 :\n//                                                 <div style={{ width: '100%', textAlign: 'center', marginTop: '10%' }}>\n//                                                     <Form.Label>Please First add Attributes from Attributes Tab</Form.Label>\n//                                                 </div>\n//                                             }\n//                                         </Tab.Pane>\n//                                         <Tab.Pane eventKey=\"Advanced\">\n//                                             <Form.Row >\n//                                                 <Form.Label style={styles.label}>Purchase Note</Form.Label>\n//                                                 <InputGroup>\n//                                                     <Form.Control\n//                                                         type=\"text\"\n//                                                         size=\"sm\"\n//                                                         placeholder=\"Enter Purchase Notes\"\n//                                                         name=\"purchase_note\"\n//                                                         value={props.purchase_note_values}\n//                                                         onChange={props.onChange}\n//                                                         isInvalid={props.purchase_note_touched && props.purchase_note_errors}\n//                                                     />\n//                                                     <Form.Control.Feedback type=\"invalid\">\n//                                                         {props.purchase_note_errors}\n//                                                     </Form.Control.Feedback>\n//                                                 </InputGroup>\n//                                             </Form.Row>\n//                                         </Tab.Pane>\n//                                         {/* <Tab.Pane eventKey=\"Commission\">\n//                                     Commission\n//                                     </Tab.Pane> */}\n//                                     </Tab.Content>\n//                                 </Col>\n//                             </Row>\n//                         </Tab.Container>\n//                     </Card.Body>\n//                 </Accordion.Collapse>\n//             </Card>\n//             <style jsx>\n//                 {`\n//                     span {\n//                         color: red\n//                     }\n//                     @media (max-width: 991px) {\n//                         .linkName {\n//                             display: none\n//                         }\n//                     }\n//                 `}\n//             </style>\n//         </Accordion >\n//     )\n// }\n// const styles = {\n//     title_row: {\n//         borderBottom: '1px solid gray',\n//         padding: '1.5% 4%'\n//     },\n//     title_fontawesome: {\n//         color: 'gray',\n//         marginRight: '3%',\n//         width: '26px',\n//         height: '26px',\n//         maxHeight: '26px',\n//         maxWidth: '26px',\n//     },\n//     title: {\n//         color: 'gray'\n//     },\n//     nav_link: {\n//         color: 'white',\n//         fontSize: '12px',\n//         display: 'flex',\n//         alignItems: 'center',\n//         height: '45px',\n//     },\n//     row: {\n//         margin: '2%',\n//         padding: '0%'\n//     },\n//     card: {\n//         width: '100%',\n//     },\n//     card_header: {\n//         alignItems: 'center',\n//         // color: '#6A7074',\n//         fontSize: '15px',\n//         background: 'lightgray'\n//     },\n//     buttons: {\n//         background: `${GlobalStyleSheet.primry_color}`,\n//         border: 'none',\n//         fontSize: '10px',\n//     },\n//     submit_btn: {\n//         background: `${GlobalStyleSheet.primry_color}`,\n//         marginTop: '3%',\n//     },\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//     },\n//     term_condition_label: {\n//         width: '100%',\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         paddingTop: '-10px',\n//         marginTop: '-10px',\n//     },\n//     fontawesome: {\n//         color: `${GlobalStyleSheet.primary_text_color}`,\n//         width: '15px',\n//         height: '15px',\n//         maxHeight: '15px',\n//         maxWidth: '15px',\n//     },\n//     product_fontawesome: {\n//         color: `${GlobalStyleSheet.primary_text_color}`,\n//         marginRight: '10%',\n//         width: '15px',\n//         height: '15px',\n//         maxHeight: '15px',\n//         maxWidth: '15px',\n//     },\n//     variations_fontawesome: {\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '10%',\n//         width: '15px',\n//         height: '15px',\n//         maxHeight: '15px',\n//         maxWidth: '15px',\n//     },\n// }\n// export default ProductData;\nimport product_size_options from '../../../../../../../sdk/consts/product-size-options';\nimport product_color_options from '../../../../../../../sdk/consts/product-color-options';\nimport { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons';\nimport CreatableSelect from 'react-select/creatable';\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nconst groupStyles = {\n  border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\n  borderRadius: '5px',\n  background: 'white',\n  color: `${GlobalStyleSheet.admin_primry_color}`\n};\nconst coomponents = {\n  DropdownIndicator: null\n};\n\nconst Group = props => __jsx(\"div\", {\n  style: groupStyles\n}, __jsx(components.Group, props));\n\nconst ProductData = props => {\n  const [modalShow, setModalShow] = React.useState(false);\n  let variations = true;\n\n  if (props.attributesArray == '') {\n    variations = false;\n  } else {\n    variations = true;\n  }\n\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\"\n  }, __jsx(Card, {\n    style: styles.card\n  }, __jsx(Card.Header, {\n    style: styles.card_header\n  }, __jsx(Row, {\n    noGutters: true,\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(Col, {\n    lg: 3,\n    md: 3,\n    sm: 3,\n    xs: 4\n  }, \"Product Data\"), __jsx(Col, {\n    lg: 3,\n    md: 3,\n    sm: 5,\n    xs: 8\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    name: \"product_type\",\n    size: \"sm\",\n    value: props.product_type_values,\n    onChange: e => {\n      props.onChange(e);\n      props.productTypeHandler(e);\n    }\n  }, __jsx(\"option\", {\n    value: \"simple-product\",\n    className: \"jsx-1365533928\"\n  }, \" Simple Product \"), __jsx(\"option\", {\n    value: \"variable-prouct\",\n    className: \"jsx-1365533928\"\n  }, \" Variable Product \"))), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"mr-auto\"\n  }), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      float: 'right',\n      background: 'none'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome\n  })))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(Card.Body, {\n    style: {\n      padding: '0.5%',\n      margin: '0px'\n    }\n  }, __jsx(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: \"Inventory\"\n  }, __jsx(Row, {\n    style: {\n      margin: '0px'\n    },\n    noGutters: true\n  }, __jsx(Col, {\n    lg: \"auto\",\n    md: \"auto\",\n    sm: \"auto\",\n    xs: \"auto\",\n    style: {\n      background: `${GlobalStyleSheet.admin_primry_color}`\n    }\n  }, __jsx(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    style: {\n      margin: '0px'\n    }\n  }, __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Inventory\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faStoreAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" Inventory \")))), !props.isVariableProduct ? __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"General\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" General \")))) : __jsx(React.Fragment, null, __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Attributes\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faListAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" Attributes \")))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Variations\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faListAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" Variations \"))))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Shipping\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faTruck,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" Shipping \")))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Advanced\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faTools,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"linkName\"\n  }, \" Advanced \")))))), __jsx(Col, {\n    style: {\n      padding: '2%'\n    }\n  }, __jsx(Tab.Content, null, __jsx(Tab.Pane, {\n    eventKey: \"General\"\n  }, props.isVariableProduct ? null : __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Price \", __jsx(\"span\", {\n    className: \"jsx-1365533928\"\n  }, \" * \")), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Price\",\n    name: \"product_price\",\n    value: props.product_price_values,\n    onChange: props.onChange,\n    isInvalid: props.product_price_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_price_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product in Stock\"), __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    name: \"product_in_stock\",\n    value: props.product_in_stock_values,\n    onChange: props.onChange,\n    isInvalid: props.product_in_stock_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_in_stock_errors)), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Brand Name\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Brand Name\",\n    name: \"product_brand_name\",\n    value: props.product_brand_name_values,\n    onChange: props.onChange,\n    isInvalid: props.product_brand_name_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_brand_name_errors)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Image Link \", __jsx(\"span\", {\n    className: \"jsx-1365533928\"\n  }, \" * \")), __jsx(CreatableSelect, {\n    components: coomponents,\n    inputValue: props.inputValue,\n    isClearable: true,\n    isMulti: true,\n    menuIsOpen: false,\n    onChange: props.simpleProductImageLinkHandler,\n    onInputChange: props.simpleProductImageLinkInputChangeHandler,\n    onKeyDown: props.simpleProductImageLinkhandleKeyDownHandler,\n    placeholder: \"Type something and press enter...\",\n    value: props.imageLink\n  }))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Warranty (months) \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Warranty\",\n    name: \"product_warranty\",\n    value: props.product_warranty_values,\n    onChange: props.onChange,\n    isInvalid: props.product_warranty_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_warranty_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Warranty Type \"), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Form.Control, {\n    as: \"select\",\n    name: \"warranty_type\",\n    size: \"sm\",\n    value: props.warranty_type_values,\n    onChange: props.onChange,\n    isInvalid: props.warranty_type_errors\n  }, __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \"Waranty Type\"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" No Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Brand Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Local Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Local Seller Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Non-Local Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Internationsl Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" Internationsl Seller Warranty \"), __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, \" International Manufacturer Warranty \"))), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_warranty_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Discount\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Discount on on Product(%)\",\n    name: \"product_discount\",\n    value: props.product_discount_values,\n    onChange: props.onChange,\n    isInvalid: props.product_discount_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"%\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_discount_errors)))))), __jsx(Tab.Pane, {\n    eventKey: \"Inventory\"\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product SKU\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter SKU (Stock Keeping Unit)\",\n    name: \"sku\",\n    value: props.sku_values,\n    onChange: props.onChange,\n    isInvalid: props.sku_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.sku_errors))))), __jsx(Tab.Pane, {\n    eventKey: \"Shipping\"\n  }, __jsx(Form.Group, {\n    as: Row,\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Weight (kg)\"), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"product_weight\",\n    size: \"sm\",\n    value: props.product_weight_values,\n    onChange: props.onChange,\n    isInvalid: props.product_weight_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_weight_errors)), __jsx(Form.Group, {\n    as: Row,\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Dimensions (cm)\"), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_length\",\n    size: \"sm\",\n    value: props.dimension_length_values,\n    onChange: props.onChange,\n    placeholder: \"Length\",\n    isInvalid: props.dimension_length_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_length_errors)), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_width\",\n    size: \"sm\",\n    value: props.dimension_width_values,\n    placeholder: \"Width\",\n    onChange: props.onChange,\n    isInvalid: props.dimension_width_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_width_errors), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_height\",\n    size: \"sm\",\n    value: props.dimension_height_values,\n    placeholder: \"Height\",\n    onChange: props.onChange,\n    isInvalid: props.dimension_height_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_height_errors)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Shipping Charges\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Product Shipping Charges\",\n    name: \"shipping_charges\",\n    value: props.shipping_charges_values,\n    onChange: props.onChange,\n    isInvalid: props.shipping_charges_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"Riyal\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.shipping_charges_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Handling Fee\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Product Handling Fee\",\n    name: \"handling_fee\",\n    value: props.handling_fee_values,\n    onChange: props.onChange,\n    isInvalid: props.handling_fee_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"Riyal\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.handling_fee_errors))))), __jsx(Tab.Pane, {\n    eventKey: \"Attributes\"\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Name\"), __jsx(Select, {\n    options: groupedOptions,\n    components: {\n      Group\n    },\n    value: props.productAttributeNameSelected,\n    onChange: props.attributeNameHandler\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: () => setModalShow(true)\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false)\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Value \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.attributeValueHandler\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: props.addAttributeHandler\n  }, \"Add\"))), __jsx(Form.Label, {\n    style: styles.label\n  }, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    className: \"jsx-1365533928\"\n  }, props.error))), __jsx(Form.Row, null, __jsx(Form.Label, {\n    style: styles.label,\n    className: \"mr-auto\"\n  }, \"For Multiple Values add | between values\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    onClick: props.createVariationsHandler\n  }, \"Create Variations\")), __jsx(\"hr\", {\n    className: \"jsx-1365533928\"\n  }), props.attributesArray && props.attributesArray.map((data, index) => __jsx(Form.Row, {\n    style: {\n      padding: '0%'\n    },\n    key: index\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: data.productAttributeName,\n    onChange: () => data.productAttributeName\n  }, __jsx(\"option\", {\n    className: \"jsx-1365533928\"\n  }, data.productAttributeName))), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12\n  }, __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: data.productAttributeValue,\n    onChange: () => data.productAttributeValue\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => props.deleteAttributeHandler(index)\n  }, \" delete\")))))), __jsx(Tab.Pane, {\n    eventKey: \"Variations\"\n  }, variations ? __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Same Price\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Price\",\n    name: \"samePrice\",\n    value: props.samePriceInput,\n    onChange: props.variationsSamePriceChanged,\n    isInvalid: props.samePriceError\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    style: styles.label,\n    onClick: props.variationsSamePriceHandler,\n    size: \"sm\"\n  }, \"Apply\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.samePriceError))), __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Same Stock\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Stock\",\n    name: \"sameStock\",\n    value: props.sameStockInput,\n    onChange: props.variationsSameStockChanged,\n    isInvalid: props.sameStockError\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    style: styles.label,\n    onClick: props.variationsSameStockHandler,\n    size: \"sm\"\n  }, \"Apply\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.sameStockError))), __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Same Image\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Image Link\",\n    name: \"sameImgLinkInput\",\n    value: props.sameImgLinkInput,\n    onChange: props.variationsSameImgLinkChanged,\n    isInvalid: props.sameImgLinkError\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    style: styles.label,\n    onClick: props.variationsSameImgLinkHandler,\n    size: \"sm\"\n  }, \"Apply\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.sameImgLinkError)))), __jsx(\"hr\", {\n    className: \"jsx-1365533928\"\n  }), props.variationsArray && props.variationsArray.map((data, index) => __jsx(\"div\", {\n    key: index,\n    className: \"jsx-1365533928\"\n  }, __jsx(Accordion, null, __jsx(Row, {\n    noGutters: true,\n    style: {\n      border: props.variationsErrorHandler(data)\n    }\n  }, data.items && data.items.map((d, i) => __jsx(Form.Group, {\n    as: Col,\n    lg: 3,\n    md: 3,\n    sm: 6,\n    xs: 6,\n    key: i\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: d.value,\n    onChange: () => data.productAttributeValue\n  }))), __jsx(\"div\", {\n    className: \"jsx-1365533928\" + \" \" + \"mr-auto\"\n  }), __jsx(Accordion.Toggle, {\n    as: Form.Group,\n    eventKey: \"0\"\n  }, __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginRight: '10px'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome\n  }))), __jsx(Form.Group, {\n    style: {\n      float: 'right'\n    }\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => props.deleteVariationHandler(index)\n  }, \" delete\"))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1365533928\"\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 6\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Price\", __jsx(\"span\", {\n    className: \"jsx-1365533928\"\n  }, \"*\")), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Price\",\n    name: \"product_price\",\n    value: data.price,\n    onChange: e => props.variationPriceHandler(e, index),\n    isInvalid: data.price_error\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, data.price_error))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 6\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product in Stock\"), __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    name: \"product_in_stock\",\n    placeholder: \"Enter Product In Stock\",\n    value: data.stock,\n    onChange: e => props.variationStockHandler(e, index)\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Image Link\"), __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    name: \"image_link\",\n    placeholder: \"Enter Image Link\",\n    value: data.image_link,\n    onChange: e => props.variationImageLinkHandler(e, index),\n    isInvalid: data.image_link_error\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, data.image_link_error))), __jsx(Form.Row, null, data.customField && data.customField.map((d, i) => __jsx(Form.Group, {\n    as: Col,\n    lg: 3,\n    md: 3,\n    sm: 6,\n    xs: 6,\n    key: i\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, d.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: d.value,\n    onChange: () => data.productAttributeValue\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => props.deleteVariationCustomFieldHandler(index, i)\n  }, \" delete\"))))))))), __jsx(\"hr\", {\n    className: \"jsx-1365533928\"\n  }))), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    onClick: props.saveVariationsHandler\n  }, \" Save Variations\")) : __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      marginTop: '10%'\n    },\n    className: \"jsx-1365533928\"\n  }, __jsx(Form.Label, null, \"Please First add Attributes from Attributes Tab\"))), __jsx(Tab.Pane, {\n    eventKey: \"Advanced\"\n  }, __jsx(Form.Row, null, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Purchase Note\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Purchase Notes\",\n    name: \"purchase_note\",\n    value: props.purchase_note_values,\n    onChange: props.onChange,\n    isInvalid: props.purchase_note_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.purchase_note_errors))))))))))), __jsx(_JSXStyle, {\n    id: \"1365533928\"\n  }, [\"span.jsx-1365533928{color:red;}\", \"@media (max-width:991px){.linkName.jsx-1365533928{display:none;}}\"]));\n};\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  nav_link: {\n    color: 'white',\n    fontSize: '12px',\n    display: 'flex',\n    alignItems: 'center',\n    height: '45px'\n  },\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  buttons: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    border: 'none',\n    fontSize: '10px'\n  },\n  submit_btn: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    marginTop: '3%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  term_condition_label: {\n    width: '100%',\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    paddingTop: '-10px',\n    marginTop: '-10px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  },\n  product_fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  },\n  variations_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProductData;","map":null,"metadata":{},"sourceType":"module"}