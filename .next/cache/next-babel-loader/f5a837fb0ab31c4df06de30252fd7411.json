{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\n\nfunction ProducCategories(_ref) {\n  var categoryList = _ref.categoryList;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoading = _React$useState2[0],\n      setIsLoading = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      showToast = _React$useState4[0],\n      setShowToast = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      categoryValue = _React$useState6[0],\n      setCategoryValue = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      error = _React$useState8[0],\n      setError = _React$useState8[1];\n\n  function handleSubmit() {\n    if (categoryValue == '') {\n      setError('Enter Value First');\n    } else {\n      setIsLoading(true);\n      setError('');\n      addCategory(this);\n    }\n  }\n\n  function addCategory() {\n    return _regeneratorRuntime.async(function addCategory$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const url = MuhalikConfig.PATH + '/api/products/add';\n            // await axios.post(url, {\n            // this.state.categoryValue\n            // }, {\n            //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n            // }).then(function (response) {\n            console.log('asdfghjk');\n            setIsLoading(false);\n            setShowToast(true);\n            return _context.abrupt(\"return\", true);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    style: styles.title_row,\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faListAlt,\n    style: styles.title_fontawesome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"mr-auto\",\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \" Product Categories \")), __jsx(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Add Category Requests\")), __jsx(Card.Body, {\n    style: styles.card_body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Category Value\",\n    name: \"sku\",\n    value: categoryValue,\n    onChange: function onChange(e) {\n      return setCategoryValue(e.target.value);\n    },\n    isInvalid: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 37\n    }\n  }, error))), __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 2,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"outline-primary\",\n    size: \"sm\",\n    onClick: handleSubmit,\n    disabled: isLoading,\n    block: true,\n    style: styles.submit_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Edit\")), __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 2,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"outline-danger\",\n    size: \"sm\",\n    onClick: handleSubmit,\n    disabled: isLoading,\n    block: true,\n    style: styles.submit_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }\n  }, \"Discard\")), __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 2,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    variant: \"outline-success\",\n    size: \"sm\",\n    onClick: handleSubmit,\n    disabled: isLoading,\n    block: true,\n    style: styles.submit_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, \"Add\")))))), __jsx(Row, {\n    noGutters: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Add Category\")), __jsx(Card.Body, {\n    style: styles.card_body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Category Value\",\n    name: \"sku\",\n    value: categoryValue,\n    onChange: function onChange(e) {\n      return setCategoryValue(e.target.value);\n    },\n    isInvalid: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, error))), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    type: \"submit\",\n    size: \"sm\",\n    onClick: handleSubmit,\n    disabled: isLoading,\n    block: true,\n    style: styles.submit_btn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, isLoading ? 'Uploading' : 'Add Category', isLoading ? __jsx(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 46\n    }\n  }) : null))))));\n}\n\nProducCategories.getInitialProps = function _callee(ctx) {\n  return _regeneratorRuntime.async(function _callee$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          return _context2.abrupt(\"return\", {\n            categoryList: ['aa', 'bb', 'cc']\n          });\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faThumbsUp","faThumbsDown","React","Component","ProducCategories","categoryList","useState","isLoading","setIsLoading","showToast","setShowToast","categoryValue","setCategoryValue","error","setError","handleSubmit","addCategory","console","log","styles","title_row","title_fontawesome","title","card","card_body","e","target","value","submit_btn","getInitialProps","ctx","borderBottom","padding","color","marginRight","width","height","maxHeight","maxWidth","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\n\r\nfunction ProducCategories({ categoryList }) {\r\n    const [isLoading, setIsLoading] = React.useState(false);\r\n    const [showToast, setShowToast] = React.useState(false);\r\n    const [categoryValue, setCategoryValue] = React.useState('');\r\n    const [error, setError] = React.useState('');\r\n\r\n    function handleSubmit() {\r\n        if (categoryValue == '') {\r\n            setError('Enter Value First')\r\n        } else {\r\n            setIsLoading(true)\r\n            setError('')\r\n            addCategory(this);\r\n        }\r\n    }\r\n\r\n    async function addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        console.log('asdfghjk')\r\n        setIsLoading(false);\r\n        setShowToast(true);\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={styles.title_row} noGutters>\r\n                <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n            </Row>\r\n            <Row noGutters>\r\n                <Card style={styles.card}>\r\n                    <Card.Header>\r\n                        <div>Add Category Requests</div>\r\n                    </Card.Header>\r\n                    <Card.Body style={styles.card_body}>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={categoryValue}\r\n                                        onChange={(e) => setCategoryValue(e.target.value)}\r\n                                        isInvalid={error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                    Edit\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                    Discard\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                    Add\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n            {/* Add Categories */}\r\n            <Row noGutters>\r\n                <Card style={styles.card}>\r\n                    <Card.Header>\r\n                        <div>Add Category</div>\r\n                    </Card.Header>\r\n                    <Card.Body style={styles.card_body}>\r\n                        <Form.Group>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={categoryValue}\r\n                                    onChange={(e) => setCategoryValue(e.target.value)}\r\n                                    isInvalid={error}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {error}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                            <Button type=\"submit\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                {isLoading ? 'Uploading' : 'Add Category'}\r\n                                {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nProducCategories.getInitialProps = async ctx => {\r\n    // const res = await fetch('https://api.github.com/repos/zeit/next.js')\r\n    // const json = await res.json()\r\n    return { categoryList: ['aa', 'bb', 'cc'] }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n}\r\nexport default ProducCategories"]},"metadata":{},"sourceType":"module"}