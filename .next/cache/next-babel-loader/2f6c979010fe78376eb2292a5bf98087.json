{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nvar categoryArray = [];\n\nvar ProducCategories = /*#__PURE__*/function (_Component) {\n  _inherits(ProducCategories, _Component);\n\n  var _super = _createSuper(ProducCategories);\n\n  function ProducCategories(props) {\n    var _this;\n\n    _classCallCheck(this, ProducCategories);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        categoriesList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteCategoryClick\", function (index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoriesList);\n      categoryArray.forEach(function (element, i) {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n\n      _this.setState({\n        categoriesList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubCategoryChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.subCategoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        subCategoriesList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteSubCategoryClick\", function (index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.subCategoriesList);\n      categoryArray.forEach(function (element, i) {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n\n      _this.setState({\n        categoriesList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      subCategoryValue: '',\n      categoryError: '',\n      subCategoryError: '',\n      categoriesList: [],\n      subCategoriesList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      searchType: 'Category',\n      filterStr: ''\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(ProducCategories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, currentComponent;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/categories';\n              currentComponent = this;\n              _context.t0 = _regeneratorRuntime;\n              _context.t1 = axios;\n              _context.t2 = url;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 7:\n              _context.t3 = _context.sent;\n              _context.t4 = {\n                'authorization': _context.t3\n              };\n              _context.t5 = {\n                headers: _context.t4\n              };\n              _context.t6 = _context.t1.get.call(_context.t1, _context.t2, _context.t5).then(function (response) {\n                currentComponent.setState({\n                  categoriesList: response.data.category.docs,\n                  subCategoriesList: response.data.sub_category.docs\n                });\n              })[\"catch\"](function (error) {\n                console.log('Caterories Fetchig Error: ', error);\n              });\n              _context.next = 13;\n              return _context.t0.awrap.call(_context.t0, _context.t6);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addCategory\",\n    value: function addCategory(currentComponent) {\n      var data, url;\n      return _regeneratorRuntime.async(function addCategory$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = [];\n              data = {\n                category: {\n                  value: this.state.categoryValue,\n                  label: this.state.categoryValue\n                },\n                sub_category: {\n                  value: this.state.subCategoryValue,\n                  label: this.state.subCategoryValue\n                }\n              };\n              url = MuhalikConfig.PATH + '/api/categories/category';\n              _context2.t0 = _regeneratorRuntime;\n              _context2.t1 = axios;\n              _context2.t2 = url;\n              _context2.t3 = {\n                data: data\n              };\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 9:\n              _context2.t4 = _context2.sent;\n              _context2.t5 = {\n                'authorization': _context2.t4\n              };\n              _context2.t6 = {\n                headers: _context2.t5\n              };\n              _context2.t7 = _context2.t1.post.call(_context2.t1, _context2.t2, _context2.t3, _context2.t6).then(function (response) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                currentComponent.setState({\n                  showModalMessage: 'Product Category Added Successfully'\n                });\n                currentComponent.setState({\n                  showModal: true\n                });\n                return true;\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n\n                return false;\n              });\n              _context2.next = 15;\n              return _context2.t0.awrap.call(_context2.t0, _context2.t7);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n\n      if (e.target.value == '') {\n        this.setState({\n          categoriesList: categoryArray\n        });\n      } else {\n        var array = [];\n        this.state.categoriesList.filter(function (data) {\n          // var value = data.value.toLowerCase;\n          if (data.value.includes(e.target.value)) {\n            array.push(data);\n          }\n        });\n        this.setState({\n          categoriesList: array\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\n                if (this.state.categoryValue == '') {\n                  this.setState({\n                    categoryError: 'Enter Value First'\n                  });\n                }\n\n                if (this.state.subCategoryValue == '') {\n                  this.setState({\n                    subCategoryError: 'Enter Value First'\n                  });\n                }\n              } else {\n                this.setState({\n                  isLoading: true\n                });\n                this.addCategory(this);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } // // Category Request \n    // // => Field Value \n    // handleCategoryRequestChange = (e, index) => {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray[index].value = e.target.value;\n    //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n    //         copyArray[index].error = ''\n    //     } else {\n    //         copyArray[index].error = 'Value must be 3-20 characters'\n    //     }\n    //     this.setState({ categoryRequestList: copyArray })\n    // }\n    // //  => Edit\n    // async handleEditCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     var obj = {};\n    //     obj['value'] = copyArray[index].value;\n    //     obj['label'] = false;\n    //     obj['prevVal'] = copyArray[index].value;\n    //     obj['error'] = '';\n    //     copyArray[index] = obj\n    //     await this.setState({ categoryRequestList: copyArray })\n    // }\n    // //  => Cancle\n    // handleCancelCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray[index].value = copyArray[index].prevVal;\n    //     copyArray[index].label = true;\n    //     copyArray[index].error = '';\n    //     this.setState({ categoryRequestList: copyArray })\n    // }\n    // // Update\n    // handleUpdateCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     if (copyArray[index].value == copyArray[index].prevVal) {\n    //         copyArray[index].error = 'Enter Different Value';\n    //         this.setState({ categoryRequestList: copyArray });\n    //     } else {\n    //         if (copyArray[index].error == '') {\n    //             copyArray[index].label = true;\n    //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\n    //         }\n    //     }\n    // }\n    // //  => Add\n    // handleAddCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray.splice(index, 1);\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\n    //     this.addCategory(this)\n    // }\n    // //  => Delete\n    // handleDeleteCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray.splice(index, 1);\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\n    // }\n    // All categories\n    //  => Chane\n\n  }, {\n    key: \"handleEditCategoryClick\",\n    //  => Edit\n    value: function handleEditCategoryClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditCategoryClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.categoriesList);\n              obj = {};\n              obj['_id'] = copyArray[index]._id;\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context4.next = 11;\n              return _regeneratorRuntime.awrap(this.setState({\n                categoriesList: copyArray\n              }));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelCategoryClick\",\n    value: function handleCancelCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoriesList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        categoriesList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateCategoryClick\",\n    value: function handleUpdateCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoriesList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          categoryRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          categoryArray.forEach(function (element, i) {\n            if (copyArray[index].prevVal == element.value) {\n              element.value = copyArray[index].value;\n            }\n          });\n          this.setState({\n            categoriesList: copyArray,\n            showModalMessage: 'Product Category Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Delete\n\n  }, {\n    key: \"handleEditSubCategoryClick\",\n    //  => Edit\n    value: function handleEditSubCategoryClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditSubCategoryClick$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.subCategoriesList);\n              obj = {};\n              obj['_id'] = copyArray[index]._id;\n              obj['category_id'] = copyArray[index].category_id;\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context5.next = 12;\n              return _regeneratorRuntime.awrap(this.setState({\n                subCategoriesList: copyArray\n              }));\n\n            case 12:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelSubCategoryClick\",\n    value: function handleCancelSubCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.subCategoriesList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        subCategoriesList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateSubCategoryClick\",\n    value: function handleUpdateSubCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.subCategoriesList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          categoryRequestList: copyArray\n        });\n      } else {\n        copyArray[index].label = copyArray[index].value;\n        copyArray[index].prevVal = copyArray[index].value;\n        this.setState({\n          subCategoriesList: copyArray,\n          showModalMessage: 'Product Category Updated Successfully',\n          showModal: true\n        });\n      }\n    } //  => Delete\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this2.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconname: faThumbsUp,\n        color: \"#00b300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 17\n        }\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Categories',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }), __jsx(CardAccordion, {\n        title: 'Add New Category',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Label, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 29\n        }\n      }, \"Category\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            categoryValue: e.target.value,\n            categoryError: ''\n          });\n        },\n        isInvalid: this.state.categoryError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 33\n        }\n      }, this.state.categoryError))), __jsx(Form.Group, {\n        as: Col,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Label, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, \"Sub Category\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.subCategoryValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            subCategoryValue: e.target.value,\n            subCategoryError: ''\n          });\n        },\n        isInvalid: this.state.subCategoryError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 33\n        }\n      }, this.state.subCategoryError))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 29\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 57\n        }\n      }) : null)))), __jsx(CardAccordion, {\n        title: 'All Categories',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 29\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 33\n        }\n      }, __jsx(Dropdown, {\n        as: ButtonGroup,\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 37\n        }\n      }, __jsx(Dropdown.Toggle, {\n        as: Button,\n        variant: \"outline-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 41\n        }\n      }, this.state.searchType), __jsx(Dropdown.Menu, {\n        className: \"super-colors\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 41\n        }\n      }, __jsx(Dropdown.Item, {\n        onClick: function onClick(e) {\n          return _this2.setState({\n            searchType: 'Category'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 45\n        }\n      }, \"Category\"), __jsx(Dropdown.Item, {\n        onClick: function onClick(e) {\n          return _this2.setState({\n            searchType: 'Sub Category'\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 45\n        }\n      }, \"Sub Category\")))), __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Search Here\",\n        name: \"search\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this2.handleFilterStrChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 33\n        }\n      })))), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }\n      }), this.state.categoriesList && this.state.categoriesList.map(function (element, index) {\n        return __jsx(\"div\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.value,\n          disabled: element.label,\n          onChange: function onChange(e) {\n            return _this2.handleCategoryChange(e, index);\n          },\n          isInvalid: element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 37\n          }\n        }, element.error)), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 33\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-primary\" : \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleEditCategoryClick(index);\n          } : function () {\n            return _this2.handleUpdateCategoryClick(index);\n          },\n          disabled: element.label ? false : element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 37\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 41\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 33\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleDeleteCategoryClick(index);\n          } : function () {\n            return _this2.handleCancelCategoryClick(index);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 37\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 41\n          }\n        }, element.label ? 'Delete' : 'Cancel')))), __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }\n        }, _this2.state.subCategoriesList.map(function (e, i) {\n          return element._id == e.category_id ? __jsx(Col, {\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            key: e._id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 37\n            }\n          }, __jsx(Form.Row, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 41\n            }\n          }, __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: 12,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 45\n            }\n          }, __jsx(Form.Control, {\n            type: \"text\",\n            size: \"sm\",\n            name: \"sku\",\n            value: e.value,\n            disabled: e.label,\n            onChange: function onChange(event) {\n              return _this2.handleSubCategoryChange(event, i);\n            },\n            isInvalid: e.error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 49\n            }\n          }), __jsx(Form.Control.Feedback, {\n            type: \"invalid\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 49\n            }\n          }, element.error)), __jsx(\"div\", {\n            className: \"mr-auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 45\n            }\n          }), __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: \"auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 45\n            }\n          }, __jsx(Button, {\n            type: \"submit\",\n            variant: e.label ? \"outline-primary\" : \"outline-success\",\n            size: \"sm\",\n            block: true,\n            style: styles.submit_btn,\n            onClick: e.label ? function () {\n              return _this2.handleEditSubCategoryClick(i);\n            } : function () {\n              return _this2.handleUpdateSubCategoryClick(i);\n            },\n            disabled: e.label ? false : e.error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 49\n            }\n          }, __jsx(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 53\n            }\n          }, e.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: \"auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 45\n            }\n          }, __jsx(Button, {\n            type: \"submit\",\n            variant: e.label ? \"outline-danger\" : \"outline-primary\",\n            size: \"sm\",\n            block: true,\n            style: styles.submit_btn,\n            onClick: e.label ? function () {\n              return _this2.handleDeleteSubCategoryClick(i);\n            } : function () {\n              return _this2.handleCancelSubCategoryClick(i);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 49\n            }\n          }, __jsx(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 53\n            }\n          }, e.label ? 'Delete' : 'Cancel'))))) : null;\n        })), __jsx(\"hr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 29\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return ProducCategories;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","Dropdown","ButtonGroup","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","categoryArray","ProducCategories","props","e","index","copyArray","Object","assign","state","categoriesList","value","target","length","error","setState","forEach","element","i","splice","showModalMessage","showModal","subCategoriesList","isLoading","showToast","categoryValue","subCategoryValue","categoryError","subCategoryError","categoryRequestList","editRequestedCategory","searchType","filterStr","url","PATH","currentComponent","headers","get","then","response","data","category","docs","sub_category","console","log","label","post","alert","message","err","array","filter","includes","push","addCategory","obj","_id","prevVal","category_id","styles","handleSubmit","bind","submit_btn","margin","handleFilterStrChange","map","handleCategoryChange","handleEditCategoryClick","handleUpdateCategoryClick","handleDeleteCategoryClick","handleCancelCategoryClick","event","handleSubCategoryChange","handleEditSubCategoryClick","handleUpdateSubCategoryClick","handleDeleteSubCategoryClick","handleCancelSubCategoryClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet categoryArray = [];\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            categoryValue: '',\r\n            subCategoryValue: '',\r\n\r\n            categoryError: '',\r\n            subCategoryError: '',\r\n\r\n            categoriesList: [],\r\n            subCategoriesList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            searchType: 'Category',\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        const currentComponent = this;\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            currentComponent.setState({\r\n                categoriesList: response.data.category.docs,\r\n                subCategoriesList: response.data.sub_category.docs\r\n            });\r\n        }).catch((error) => {\r\n            console.log('Caterories Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async addCategory(currentComponent) {\r\n        let data = [];\r\n\r\n        data = {\r\n            category: { value: this.state.categoryValue, label: this.state.categoryValue },\r\n            sub_category: { value: this.state.subCategoryValue, label: this.state.subCategoryValue }\r\n        }\r\n        const url = MuhalikConfig.PATH + '/api/categories/category';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                console.log('Request Failed:', error)\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ categoriesList: categoryArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.categoriesList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ categoriesList: array });\r\n        }\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\r\n            if (this.state.categoryValue == '') {\r\n                this.setState({ categoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subCategoryValue == '') {\r\n                this.setState({ subCategoryError: 'Enter Value First' });\r\n            }\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.addCategory(this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // // Category Request \r\n    // // => Field Value \r\n    // handleCategoryRequestChange = (e, index) => {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = e.target.value;\r\n\r\n    //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n    //         copyArray[index].error = ''\r\n    //     } else {\r\n    //         copyArray[index].error = 'Value must be 3-20 characters'\r\n    //     }\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Edit\r\n    // async handleEditCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     var obj = {};\r\n    //     obj['value'] = copyArray[index].value;\r\n    //     obj['label'] = false;\r\n    //     obj['prevVal'] = copyArray[index].value;\r\n    //     obj['error'] = '';\r\n    //     copyArray[index] = obj\r\n    //     await this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Cancle\r\n    // handleCancelCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = copyArray[index].prevVal;\r\n    //     copyArray[index].label = true;\r\n    //     copyArray[index].error = '';\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // // Update\r\n    // handleUpdateCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     if (copyArray[index].value == copyArray[index].prevVal) {\r\n    //         copyArray[index].error = 'Enter Different Value';\r\n    //         this.setState({ categoryRequestList: copyArray });\r\n    //     } else {\r\n    //         if (copyArray[index].error == '') {\r\n    //             copyArray[index].label = true;\r\n    //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    //         }\r\n    //     }\r\n    // }\r\n    // //  => Add\r\n    // handleAddCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    //     this.addCategory(this)\r\n    // }\r\n    // //  => Delete\r\n    // handleDeleteCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                categoryArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ categoriesList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoriesList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n    // \r\n    // Sub Category\r\n    handleSubCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['category_id'] = copyArray[index].category_id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            copyArray[index].label = copyArray[index].value;\r\n            copyArray[index].prevVal = copyArray[index].value;\r\n            this.setState({ subCategoriesList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteSubCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoriesList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Categories'} />\r\n\r\n\r\n\r\n                {/* Add New Category */}\r\n                <CardAccordion title={'Add New Category'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.categoryValue}\r\n                                    onChange={(e) => this.setState({ categoryValue: e.target.value, categoryError: '' })}\r\n                                    isInvalid={this.state.categoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.categoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subCategoryValue}\r\n                                    onChange={(e) => this.setState({ subCategoryValue: e.target.value, subCategoryError: '' })}\r\n                                    isInvalid={this.state.subCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                </CardAccordion>\r\n\r\n                {/* Add Category Requests */}\r\n                {/* <CardAccordion title={'Add Category Requests'}>\r\n                    {this.state.categoryRequestList.map((element, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion> */}\r\n\r\n                {/* All Categories */}\r\n                <CardAccordion title={'All Categories'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend >\r\n                                    <Dropdown as={ButtonGroup} size='sm'>\r\n                                        <Dropdown.Toggle as={Button} variant='outline-success'>\r\n                                            {this.state.searchType}\r\n                                        </Dropdown.Toggle>\r\n                                        <Dropdown.Menu className=\"super-colors\">\r\n                                            <Dropdown.Item onClick={(e) => this.setState({ searchType: 'Category' })}>Category</Dropdown.Item>\r\n                                            <Dropdown.Item onClick={(e) => this.setState({ searchType: 'Sub Category' })}>Sub Category</Dropdown.Item>\r\n                                        </Dropdown.Menu>\r\n                                    </Dropdown>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Search Here\"\r\n                                    name=\"search\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.categoriesList && this.state.categoriesList.map((element, index) =>\r\n                        <div key={index}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        disabled={element.label}\r\n                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)}\r\n                                        disabled={element.label ? false : element.error}\r\n                                    >\r\n                                        <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index)}>\r\n                                        <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row >\r\n                                {this.state.subCategoriesList.map((e, i) => (element._id == e.category_id) ?\r\n                                    <Col lg={6} md={6} sm={6} xs={12} key={e._id}>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={12}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    name=\"sku\"\r\n                                                    value={e.value}\r\n                                                    disabled={e.label}\r\n                                                    onChange={(event) => this.handleSubCategoryChange(event, i)}\r\n                                                    isInvalid={e.error}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {element.error}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                            <div className='mr-auto'></div>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={e.label ? () => this.handleEditSubCategoryClick(i) : () => this.handleUpdateSubCategoryClick(i)}\r\n                                                    disabled={e.label ? false : e.error}\r\n                                                >\r\n                                                    <div>{e.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={e.label ? () => this.handleDeleteSubCategoryClick(i) : () => this.handleCancelSubCategoryClick(i)}>\r\n                                                    <div>{e.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                )}\r\n                            </Form.Row>\r\n                            <hr />\r\n                        </div>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}