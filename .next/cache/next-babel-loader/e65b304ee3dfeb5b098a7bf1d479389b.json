{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nvar categoryArray = [];\n\nvar ProducCategories = /*#__PURE__*/function (_Component) {\n  _inherits(ProducCategories, _Component);\n\n  var _super = _createSuper(ProducCategories);\n\n  function ProducCategories(props) {\n    var _this;\n\n    _classCallCheck(this, ProducCategories);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryRequestChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoryRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        categoryRequestList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoryList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        categoryList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDeleteCategoryClick\", function (index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoryList);\n      categoryArray.forEach(function (element, i) {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n\n      _this.setState({\n        categoryList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      subCategoryValue: '',\n      subSubCategoryValue: '',\n      categoryError: '',\n      subCategoryError: '',\n      subSubCategoryError: '',\n      categoryList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(ProducCategories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var url;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/categories';\n              _context.t0 = _regeneratorRuntime;\n              _context.t1 = axios;\n              _context.t2 = url;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 6:\n              _context.t3 = _context.sent;\n              _context.t4 = {\n                'authorization': _context.t3\n              };\n              _context.t5 = {\n                headers: _context.t4\n              };\n              _context.t6 = _context.t1.get.call(_context.t1, _context.t2, _context.t5).then(function (response) {\n                console.log('tags:', response.data.data);\n                var copyArray = [];\n                copyArray = response.data.data;\n                copyArray.forEach(function (data, index) {\n                  data.label = true;\n                });\n\n                _this2.setState({\n                  categoryList: copyArray\n                });\n\n                _this2.setState({\n                  categoryRequestList: _this2.state.categoryList\n                });\n\n                categoryArray = copyArray;\n              })[\"catch\"](function (error) {\n                alert('Caterories Fetchig Error: ', error);\n              });\n              _context.next = 12;\n              return _context.t0.awrap.call(_context.t0, _context.t6);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"addCategory\",\n    value: function addCategory() {\n      var data, url;\n      return _regeneratorRuntime.async(function addCategory$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = [];\n              data = {\n                category: this.state.categoryValue,\n                sub_category: this.state.subCategoryValue,\n                sub_sub_Category: this.state.subSubCategoryValue\n              };\n              url = MuhalikConfig.PATH + '/api/categories/add-category';\n              _context2.t0 = _regeneratorRuntime;\n              _context2.t1 = axios;\n              _context2.t2 = url;\n              _context2.t3 = {\n                data: data\n              };\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 9:\n              _context2.t4 = _context2.sent;\n              _context2.t5 = {\n                'authorization': _context2.t4\n              };\n              _context2.t6 = {\n                headers: _context2.t5\n              };\n              _context2.t7 = _context2.t1.post.call(_context2.t1, _context2.t2, _context2.t3, _context2.t6).then(function (response) {\n                this.setState({\n                  isLoading: false\n                });\n                this.setState({\n                  showModalMessage: 'Product Category Added Successfully'\n                });\n                this.setState({\n                  showModal: true\n                });\n                return true;\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                alert('Error: ', error.response.data.message);\n                return false;\n              });\n              _context2.next = 15;\n              return _context2.t0.awrap.call(_context2.t0, _context2.t7);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n\n      if (e.target.value == '') {\n        this.setState({\n          categoryList: categoryArray\n        });\n      } else {\n        var array = [];\n        this.state.categoryList.filter(function (data) {\n          // var value = data.value.toLowerCase;\n          if (data.value.includes(e.target.value)) {\n            array.push(data);\n          }\n        });\n        this.setState({\n          categoryList: array\n        });\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (this.state.categoryValue == '' || this.state.subCategoryValue == '' || this.state.subSubCategoryValue == '') {\n        if (this.state.categoryValue == '') {\n          this.setState({\n            categoryError: 'Enter Value First'\n          });\n        }\n\n        if (this.state.subCategoryValue == '') {\n          this.setState({\n            subCategoryError: 'Enter Value First'\n          });\n        }\n\n        if (this.state.subSubCategoryValue == '') {\n          this.setState({\n            subSubCategoryError: 'Enter Value First'\n          });\n        }\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.addCategory(this);\n      }\n    } // Category Request \n    // => Field Value \n\n  }, {\n    key: \"handleEditCategoryRequestClick\",\n    //  => Edit\n    value: function handleEditCategoryRequestClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditCategoryRequestClick$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.categoryRequestList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context3.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                categoryRequestList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelCategoryRequestClick\",\n    value: function handleCancelCategoryRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryRequestList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].label = true;\n      copyArray[index].error = '';\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    } // Update\n\n  }, {\n    key: \"handleUpdateCategoryRequestClick\",\n    value: function handleUpdateCategoryRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryRequestList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          categoryRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          this.setState({\n            categoryRequestList: copyArray,\n            showModalMessage: 'Product Category Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Add\n\n  }, {\n    key: \"handleAddCategoryRequestClick\",\n    value: function handleAddCategoryRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        categoryRequestList: copyArray,\n        showModalMessage: 'Product Category Added Successfully',\n        showModal: true\n      });\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteCategoryRequestClick\",\n    value: function handleDeleteCategoryRequestClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryRequestList);\n      copyArray.splice(index, 1);\n      this.setState({\n        categoryRequestList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n    } // All categories\n    //  => Chane\n\n  }, {\n    key: \"handleEditCategoryClick\",\n    //  => Edit\n    value: function handleEditCategoryClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditCategoryClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.categoryList);\n              obj = {};\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context4.next = 10;\n              return _regeneratorRuntime.awrap(this.setState({\n                categoryList: copyArray\n              }));\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelCategoryClick\",\n    value: function handleCancelCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        categoryList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateCategoryClick\",\n    value: function handleUpdateCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoryList);\n\n      if (copyArray[index].value == copyArray[index].prevVal) {\n        copyArray[index].error = 'Enter Different Value';\n        this.setState({\n          categoryRequestList: copyArray\n        });\n      } else {\n        if (copyArray[index].error == '') {\n          copyArray[index].label = true;\n          categoryArray.forEach(function (element, i) {\n            if (copyArray[index].prevVal == element.value) {\n              element.value = copyArray[index].value;\n            }\n          });\n          this.setState({\n            categoryList: copyArray,\n            showModalMessage: 'Product Category Updated Successfully',\n            showModal: true\n          });\n        }\n      }\n    } //  => Delete\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this3.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconName: faThumbsUp,\n        color: \"#00b300\"\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Categories'\n      }), __jsx(CardAccordion, {\n        title: 'Add New Category'\n      }, __jsx(Form.Row, null, __jsx(Form.Group, {\n        as: Col,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12\n      }, __jsx(Form.Label, {\n        style: styles.label\n      }, \"Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            categoryValue: e.target.value,\n            categoryError: ''\n          });\n        },\n        isInvalid: this.state.categoryError\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, this.state.categoryError))), __jsx(Form.Group, {\n        as: Col,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12\n      }, __jsx(Form.Label, {\n        style: styles.label\n      }, \"Sub Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.subCategoryValue,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            subCategoryValue: e.target.value,\n            subCategoryError: ''\n          });\n        },\n        isInvalid: this.state.subCategoryError\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, this.state.subCategoryError))), __jsx(Form.Group, {\n        as: Col,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12\n      }, __jsx(Form.Label, {\n        style: styles.label\n      }, \"Sub Sub Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.subSubCategoryValue,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            subSubCategoryValue: e.target.value,\n            subSubCategoryError: ''\n          });\n        },\n        isInvalid: this.state.subSubCategoryError\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\"\n      }, this.state.subSubCategoryError)))), __jsx(Form.Group, null, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\"\n      }) : null))), __jsx(CardAccordion, {\n        title: 'Add Category Requests'\n      }, this.state.categoryRequestList.map(function (data, index) {\n        return __jsx(Form.Row, null, __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.value,\n          disabled: true\n        })), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: 6,\n          xs: 12\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.value,\n          disabled: true\n        })), __jsx(\"div\", {\n          className: \"mr-auto\"\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 4,\n          md: 4,\n          sm: 6,\n          xs: 12\n        }, __jsx(InputGroup, null, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.value,\n          onChange: function onChange(e) {\n            return _this3.handleCategoryRequestChange(e, index);\n          },\n          isInvalid: data.error,\n          disabled: data.label\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, data.error))), __jsx(\"div\", {\n          className: \"mr-auto\"\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\"\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return data.label ? _this3.handleEditCategoryRequestClick(index) : _this3.handleUpdateCategoryRequestClick(index);\n          }\n        }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\"\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            data.label ? _this3.handleAddCategoryRequestClick(index) : _this3.handleCancelCategoryRequestClick(index);\n          }\n        }, __jsx(\"div\", null, data.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n          className: \"mr-auto\"\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\"\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: function onClick() {\n            return _this3.handleDeleteCategoryRequestClick(index);\n          }\n        }, __jsx(\"div\", null, \"Discard\"))));\n      })), __jsx(CardAccordion, {\n        title: 'All Categories'\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        }\n      }, __jsx(Form.Group, {\n        as: Col\n      }, __jsx(InputGroup, null, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this3.handleFilterStrChange(e);\n        }\n      })))), __jsx(\"hr\", null), this.state.categoryList.map(function (data, index) {\n        return __jsx(Form.Row, null, __jsx(Form.Group, {\n          as: Col,\n          lg: 8,\n          md: 8,\n          sm: 12,\n          xs: 12\n        }, __jsx(InputGroup, null, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.value,\n          onChange: function onChange(e) {\n            return _this3.handleCategoryChange(e, index);\n          },\n          disabled: data.label,\n          isInvalid: data.error\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, data.error))), __jsx(Form.Group, {\n          as: Col,\n          lg: 1,\n          md: 1,\n          sm: \"auto\",\n          xs: \"auto\"\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: data.label ? function () {\n            return _this3.handleEditCategoryClick(index);\n          } : function () {\n            return _this3.handleUpdateCategoryClick(index);\n          }\n        }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n          className: \"mr-auto\"\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: 2,\n          md: 2,\n          sm: \"auto\",\n          xs: \"auto\"\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: data.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: data.label ? function () {\n            return _this3.handleDeleteCategoryClick(index);\n          } : function () {\n            return _this3.handleCancelCategoryClick(index);\n          }\n        }, __jsx(\"div\", null, data.label ? 'Delete' : 'Cancel'))));\n      })));\n    }\n  }]);\n\n  return ProducCategories;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","categoryArray","ProducCategories","props","e","index","copyArray","Object","assign","state","categoryRequestList","value","target","length","error","setState","categoryList","forEach","element","i","splice","showModalMessage","showModal","isLoading","showToast","categoryValue","subCategoryValue","subSubCategoryValue","categoryError","subCategoryError","subSubCategoryError","editRequestedCategory","filterStr","url","PATH","headers","get","then","response","console","log","data","label","alert","category","sub_category","sub_sub_Category","post","currentComponent","message","array","filter","includes","push","addCategory","obj","prevVal","styles","handleSubmit","bind","submit_btn","map","handleCategoryRequestChange","handleEditCategoryRequestClick","handleUpdateCategoryRequestClick","handleAddCategoryRequestClick","handleCancelCategoryRequestClick","handleDeleteCategoryRequestClick","margin","handleFilterStrChange","handleCategoryChange","handleEditCategoryClick","handleUpdateCategoryClick","handleDeleteCategoryClick","handleCancelCategoryClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet categoryArray = [];\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            categoryValue: '',\r\n            subCategoryValue: '',\r\n            subSubCategoryValue: '',\r\n\r\n            categoryError: '',\r\n            subCategoryError: '',\r\n            subSubCategoryError: '',\r\n\r\n            categoryList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            console.log('tags:', response.data.data)\r\n            let copyArray = [];\r\n            copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ categoryList: copyArray });\r\n            this.setState({ categoryRequestList: this.state.categoryList });\r\n            categoryArray = copyArray;\r\n        }).catch((error) => {\r\n            alert('Caterories Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async addCategory() {\r\n        let data = [];\r\n        data = { category: this.state.categoryValue, sub_category: this.state.subCategoryValue, sub_sub_Category: this.state.subSubCategoryValue }\r\n        const url = MuhalikConfig.PATH + '/api/categories/add-category';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            this.setState({ isLoading: false })\r\n            this.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n            this.setState({ showModal: true })\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ categoryList: categoryArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.categoryList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ categoryList: array });\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.categoryValue == '' || this.state.subCategoryValue == '' || this.state.subSubCategoryValue == '') {\r\n            if (this.state.categoryValue == '') {\r\n                this.setState({ categoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subCategoryValue == '') {\r\n                this.setState({ subCategoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subSubCategoryValue == '') {\r\n                this.setState({ subSubCategoryError: 'Enter Value First' });\r\n            }\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Category Request \r\n    // => Field Value \r\n    handleCategoryRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                categoryArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Categories'} />\r\n\r\n\r\n\r\n                {/* Add New Category */}\r\n                <CardAccordion title={'Add New Category'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.categoryValue}\r\n                                    onChange={(e) => this.setState({ categoryValue: e.target.value, categoryError: '' })}\r\n                                    isInvalid={this.state.categoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.categoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subCategoryValue}\r\n                                    onChange={(e) => this.setState({ subCategoryValue: e.target.value, subCategoryError: '' })}\r\n                                    isInvalid={this.state.subCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subSubCategoryValue}\r\n                                    onChange={(e) => this.setState({ subSubCategoryValue: e.target.value, subSubCategoryError: '' })}\r\n                                    isInvalid={this.state.subSubCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subSubCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Category Requests */}\r\n                <CardAccordion title={'Add Category Requests'}>\r\n                    {this.state.categoryRequestList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                        isInvalid={data.error}\r\n                                        disabled={data.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Categories */}\r\n                <CardAccordion title={'All Categories'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.categoryList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                        disabled={data.label}\r\n                                        isInvalid={data.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index)}>\r\n                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}