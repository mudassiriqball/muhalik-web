{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\nimport React, { Component } from 'react';\nvar UpdatingPopover = React.forwardRef(function (_ref, ref) {\n  var popper = _ref.popper,\n      children = _ref.children,\n      _ = _ref.show,\n      props = _objectWithoutProperties(_ref, [\"popper\", \"children\", \"show\"]);\n\n  React.useEffect(function () {\n    console.log('updating!');\n    popper.scheduleUpdate();\n  }, [children, popper]);\n  return __jsx(Popover, _extends({\n    ref: ref,\n    content: true\n  }, props), children);\n});\nvar longContent = \"\\n  Very long\\n  Multiline content\\n  that is engaging and what-not\\n\";\nvar shortContent = 'Short and sweet!';\n\nfunction OverlayPopover(props) {\n  var _React$useState = React.useState(shortContent),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      content = _React$useState2[0],\n      setContent = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timerId = setInterval(function () {\n      setContent(content === shortContent ? longContent : shortContent);\n    }, 3000);\n    return function () {\n      return clearInterval(timerId);\n    };\n  });\n  return __jsx(OverlayTrigger, {\n    trigger: \"hover\",\n    overlay: __jsx(UpdatingPopover, {\n      id: \"popover-contained\"\n    }, content)\n  }, props.children);\n}\n\nexport default OverlayPopover;","map":null,"metadata":{},"sourceType":"module"}