{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-category.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Row, Form, Col, Card, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport ShowToast from '../../../../toast';\n\nclass AddCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCategoryValueChange\", e => {\n      this.setState({\n        categoryValue: e.target.value\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: ''\n    };\n  } //  Submit data to api\n\n\n  async uploadProduct(data, currentComponent) {\n    console.log('data: ', data); // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    //     data\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n\n    currentComponent.setState({\n      isLoading: false\n    });\n    currentComponent.setState({\n      showToast: true\n    });\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  handleSubmit() {}\n\n  render() {\n    return __jsx(React.Fragment, null, this.state.showToast ? __jsx(ShowToast, {\n      onCloseHandler: e => this.setState({\n        showToast: false\n      }),\n      show: this.state.showToast,\n      header: 'Success',\n      message: 'Category Added Successfully',\n      iconName: faThumbsUp,\n      color: \"green\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }) : null, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      style: styles.title_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, \" Add New Category \")), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Product Category\"), __jsx(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 10,\n      md: 10,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: this.handleCategoryValueChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      onSubmit: this.handleSubmit,\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 37\n      }\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 65\n      }\n    }) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 106\n      }\n    })))), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Label, {\n      style: styles.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, this.state.error))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default AddCategory;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-category.js"],"names":["React","Component","Row","Form","Col","Card","Button","Spinner","FontAwesomeIcon","faPlus","faThumbsUp","faThumbsDown","ShowToast","AddCategory","constructor","props","e","setState","categoryValue","target","value","state","isLoading","showToast","error","uploadProduct","data","currentComponent","console","log","handleSubmit","render","styles","title_row","title_fontawesome","title","card","handleCategoryValueChange","submit_btn","borderBottom","padding","color","marginRight","width","height","maxHeight","maxWidth","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Form, Col, Card, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport ShowToast from '../../../../toast';\r\n\r\nclass AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n        }\r\n    }\r\n    //  Submit data to api\r\n    async uploadProduct(data, currentComponent) {\r\n        console.log('data: ', data)\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        //     data\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        currentComponent.setState({ isLoading: false });\r\n        currentComponent.setState({ showToast: true });\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n    handleCategoryValueChange = (e) => {\r\n        this.setState({ categoryValue: e.target.value })\r\n    }\r\n\r\n    handleSubmit() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showToast ? <ShowToast onCloseHandler={(e) => this.setState({ showToast: false })} show={this.state.showToast}\r\n                    header={'Success'} message={'Category Added Successfully'} iconName={faThumbsUp} color={\"green\"} />\r\n                    : null\r\n                }\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Add New Category </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            Product Category\r\n                        </Card.Header>\r\n                        <Card.Body>\r\n                            <Row noGutters>\r\n                                <Form.Group as={Col} lg={10} md={10} sm={12} xs={12}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={this.state.categoryValue}\r\n                                        onChange={this.handleCategoryValueChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={2} md={2} sm={12} xs={12}>\r\n                                    {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                    <Button type=\"submit\" onSubmit={this.handleSubmit} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                        {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                        {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row noGutters>\r\n                                <Form.Label style={styles.error}>{this.state.error}</Form.Label>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n\r\n}\r\n\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}