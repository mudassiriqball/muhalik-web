{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-fields.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport ConfirmModal from '../../../../confirm-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nlet fieldsArray = [];\n\nclass ProducFields extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleFieldRequestChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.fieldRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        fieldRequestList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleFieldChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.fieldList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        fieldList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteFieldClick\", index => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.fieldList);\n      fieldsArray.forEach((element, i) => {\n        if (copyArray[index].value == element.value) {\n          fieldsArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n      this.setState({\n        showConfirmDeleteModal: false,\n        fieldList: copyArray,\n        showModalMessage: 'Product Field Deleted',\n        showModal: true\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      showConfirmDeleteModal: false,\n      isFieldDelete: '',\n      delete_field_id: '',\n      delete_field_name: '',\n      delete_field_index: '',\n      fieldValue: '',\n      error: '',\n      fieldList: [],\n      fieldRequestList: [],\n      editRequestedField: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n  } // Getting Product Fields from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/categories/fields';\n    const currentComponent = this;\n    await axios.get(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      let copyArray = [];\n      copyArray = response.data.data.docs;\n      copyArray.forEach((e, index) => {\n        e.label = true;\n      });\n      currentComponent.setState({\n        fieldList: copyArray\n      });\n      currentComponent.setState({\n        fieldRequestList: copyArray\n      });\n      fieldsArray = copyArray;\n    }).catch(function (error) {\n      alert('F error: ', error);\n    });\n  }\n\n  async addField(fieldValue, currentComponent) {\n    const url = MuhalikConfig.PATH + '/api/categories/field';\n    let data = [];\n    data = {\n      label: fieldValue,\n      value: fieldValue\n    };\n    await axios.post(url, {\n      data\n    }, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      currentComponent.setState({\n        showModalMessage: 'Product Field Added Successfully'\n      });\n      currentComponent.setState({\n        showModal: true\n      });\n    }).catch(function (error) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      alert('Error: ', error.response.data.message);\n    });\n  }\n\n  handleFilterStrChange(e) {\n    this.setState({\n      filterStr: e.target.value\n    });\n\n    if (e.target.value == '') {\n      this.setState({\n        fieldList: fieldsArray\n      });\n    } else {\n      let array = [];\n      this.state.fieldList.filter(function (data) {\n        // var value = data.value.toLowerCase;\n        if (data.value.includes(e.target.value)) {\n          array.push(data);\n        }\n      });\n      this.setState({\n        fieldList: array\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.fieldValue == '') {\n      this.setState({\n        error: 'Enter Value First'\n      });\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        error: ''\n      });\n      this.addField(this.state.fieldValue, this);\n    }\n  } // Field Request \n  // => Field Value \n\n\n  //  => Edit\n  async handleEditFieldRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldRequestList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      fieldRequestList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelFieldRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldRequestList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    copyArray[index].error = '';\n    this.setState({\n      fieldRequestList: copyArray\n    });\n  } // Update\n\n\n  handleUpdateFieldRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldRequestList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        fieldRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        this.setState({\n          fieldRequestList: copyArray,\n          showModalMessage: 'Product Field Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Add\n\n\n  handleAddFieldRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      fieldRequestList: copyArray,\n      showModalMessage: 'Product Field Added Successfully',\n      showModal: true\n    });\n    this.addField(copyArray[index].value, this);\n  } //  => Delete\n\n\n  handleDeleteFieldRequestClick() {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldRequestList);\n    copyArray.splice(this.state.delete_field_index, 1);\n    this.setState({\n      showConfirmDeleteModal: false,\n      fieldRequestList: copyArray,\n      showModalMessage: 'Product Field Deleted',\n      showModal: true\n    });\n  } // All fields\n  //  => Chane\n\n\n  //  => Edit\n  async handleEditFieldClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      fieldList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelFieldClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].error = '';\n    copyArray[index].label = true;\n    this.setState({\n      fieldList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateFieldClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.fieldList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        fieldRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        fieldsArray.forEach((element, i) => {\n          if (copyArray[index].prevVal == element.value) {\n            element.value = copyArray[index].value;\n          }\n        });\n        this.setState({\n          fieldList: copyArray,\n          showModalMessage: 'Product Field Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Delete\n\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showModal: false\n      }),\n      show: this.state.showModal,\n      header: 'Success',\n      message: this.state.showModalMessage,\n      iconname: faThumbsUp,\n      color: \"#00b300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }), __jsx(ConfirmModal, {\n      onHide: () => this.setState({\n        showConfirmDeleteModal: false\n      }),\n      show: this.state.showConfirmDeleteModal,\n      title: 'Delete Add Field Request ?',\n      _id: this.state.delete_field_id,\n      name: this.state.delete_field_name,\n      confirm: this.state.isFieldDelete ? this.handleDeleteFieldClick().bind(this) : this.handleDeleteFieldRequestClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }), __jsx(TitleRow, {\n      icon: faListAlt,\n      title: ' Admin Dashboard / Product Fields',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    }), __jsx(CardAccordion, {\n      title: 'Add New Field',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Field Value\",\n      name: \"sku\",\n      value: this.state.fieldValue,\n      onChange: e => this.setState({\n        fieldValue: e.target.value\n      }),\n      isInvalid: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, this.state.error))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, this.state.isLoading ? 'Uploading' : 'Add Field', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 53\n      }\n    }) : null))), __jsx(CardAccordion, {\n      title: 'Add Field Requests',\n      notification: true,\n      badge: this.state.fieldRequestList.length,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 17\n      }\n    }, this.state.fieldRequestList.map((element, index) => __jsx(Form.Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      name: \"sku\",\n      value: element.entry_date,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 33\n      }\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 3,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      name: \"sku\",\n      value: element.entry_date,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Field Value\",\n      name: \"sku\",\n      value: element.value,\n      onChange: e => this.handleFieldRequestChange(e, index),\n      isInvalid: element.error,\n      disabled: element.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 37\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 37\n      }\n    }, element.error))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => element.label ? this.handleEditFieldRequestClick(index) : this.handleUpdateFieldRequestClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 37\n      }\n    }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        element.label ? this.handleAddFieldRequestClick(index) : this.handleCancelFieldRequestClick(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 37\n      }\n    }, element.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => this.setState({\n        isFieldDelete: true,\n        showConfirmDeleteModal: true,\n        delete_field_id: element._id,\n        delete_field_name: element.value,\n        delete_field_index: index\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 37\n      }\n    }, \"Discard\")))))), __jsx(CardAccordion, {\n      title: 'All Fields',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }\n    }, __jsx(Form.Row, {\n      style: {\n        margin: '0% 5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 21\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Field Value\",\n      name: \"sku\",\n      value: this.state.filterStr,\n      onChange: e => this.handleFilterStrChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 33\n      }\n    })))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }), this.state.fieldList && this.state.fieldList.map((element, index) => __jsx(Form.Row, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      name: \"sku\",\n      value: element.entry_date,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 33\n      }\n    })), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 29\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Field Value\",\n      name: \"sku\",\n      value: element.value,\n      onChange: e => this.handleFieldChange(e, index),\n      disabled: element.label,\n      isInvalid: element.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 37\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 37\n      }\n    }, element.error))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: element.label ? () => this.handleEditFieldClick(index) : () => this.handleUpdateFieldClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 37\n      }\n    }, element.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 29\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: element.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: element.label ? () => this.setState({\n        isFieldDelete: false,\n        showConfirmDeleteModal: true,\n        delete_field_id: element._id,\n        delete_field_name: element.value,\n        delete_field_index: index\n      }) : () => this.handleCancelFieldClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 33\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 37\n      }\n    }, element.label ? 'Delete' : 'Cancel')))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-fields.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","ConfirmModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","fieldsArray","ProducFields","constructor","props","e","index","copyArray","Object","assign","state","fieldRequestList","value","target","length","error","setState","fieldList","forEach","element","i","splice","showConfirmDeleteModal","showModalMessage","showModal","isLoading","showToast","isFieldDelete","delete_field_id","delete_field_name","delete_field_index","fieldValue","editRequestedField","filterStr","componentDidMount","url","PATH","currentComponent","get","headers","then","response","data","docs","label","catch","alert","addField","post","message","handleFilterStrChange","array","filter","includes","push","handleSubmit","handleEditFieldRequestClick","obj","handleCancelFieldRequestClick","prevVal","handleUpdateFieldRequestClick","handleAddFieldRequestClick","handleDeleteFieldRequestClick","handleEditFieldClick","handleCancelFieldClick","handleUpdateFieldClick","render","handleDeleteFieldClick","bind","styles","submit_btn","map","entry_date","handleFieldRequestChange","_id","margin","handleFieldChange","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport ConfirmModal from '../../../../confirm-modal'\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet fieldsArray = [];\r\nclass ProducFields extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            showConfirmDeleteModal: false,\r\n            isFieldDelete: '',\r\n            delete_field_id: '',\r\n            delete_field_name: '',\r\n            delete_field_index: '',\r\n\r\n            fieldValue: '',\r\n            error: '',\r\n            fieldList: [],\r\n            fieldRequestList: [],\r\n\r\n            editRequestedField: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Fields from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/fields';\r\n        const currentComponent = this;\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            let copyArray = [];\r\n            copyArray = response.data.data.docs;\r\n            copyArray.forEach((e, index) => {\r\n                e.label = true;\r\n            })\r\n            currentComponent.setState({ fieldList: copyArray });\r\n            currentComponent.setState({ fieldRequestList: copyArray });\r\n            fieldsArray = copyArray;\r\n        }).catch(function (error) {\r\n            alert('F error: ', error)\r\n        })\r\n    }\r\n\r\n    async addField(fieldValue, currentComponent) {\r\n        const url = MuhalikConfig.PATH + '/api/categories/field';\r\n        let data = [];\r\n        data = { label: fieldValue, value: fieldValue }\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Field Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ fieldList: fieldsArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.fieldList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ fieldList: array });\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.fieldValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addField(this.state.fieldValue, this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Field Request \r\n    // => Field Value \r\n    handleFieldRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ fieldRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddFieldRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Added Successfully', showModal: true })\r\n        this.addField(copyArray[index].value, this)\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldRequestClick() {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(this.state.delete_field_index, 1);\r\n        this.setState({\r\n            showConfirmDeleteModal: false,\r\n            fieldRequestList: copyArray,\r\n            showModalMessage: 'Product Field Deleted',\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All fields\r\n    //  => Chane\r\n    handleFieldChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateFieldClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ fieldRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                fieldsArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ fieldList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.fieldList);\r\n        fieldsArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                fieldsArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({\r\n            showConfirmDeleteModal: false,\r\n            fieldList: copyArray,\r\n            showModalMessage: 'Product Field Deleted',\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <ConfirmModal\r\n                    onHide={() => this.setState({ showConfirmDeleteModal: false })}\r\n                    show={this.state.showConfirmDeleteModal}\r\n                    title={'Delete Add Field Request ?'}\r\n                    _id={this.state.delete_field_id}\r\n                    name={this.state.delete_field_name}\r\n                    confirm={this.state.isFieldDelete ? this.handleDeleteFieldClick().bind(this) : this.handleDeleteFieldRequestClick.bind(this)}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Fields'} />\r\n\r\n                {/* Add New Field */}\r\n                <CardAccordion title={'Add New Field'}>\r\n                    <Form.Group>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                size=\"sm\"\r\n                                placeholder=\"Enter Field Value\"\r\n                                name=\"sku\"\r\n                                value={this.state.fieldValue}\r\n                                onChange={(e) => this.setState({ fieldValue: e.target.value })}\r\n                                isInvalid={this.state.error}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                {this.state.error}\r\n                            </Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Field'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Field Requests */}\r\n                <CardAccordion title={'Add Field Requests'} notification={true} badge={this.state.fieldRequestList.length}>\r\n                    {this.state.fieldRequestList.map((element, index) =>\r\n                        <Form.Row key={index}>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={3} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleFieldRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditFieldRequestClick(index) : this.handleUpdateFieldRequestClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddFieldRequestClick(index) : this.handleCancelFieldRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.setState({\r\n                                        isFieldDelete: true,\r\n                                        showConfirmDeleteModal: true,\r\n                                        delete_field_id: element._id,\r\n                                        delete_field_name: element.value,\r\n                                        delete_field_index: index,\r\n                                    })}\r\n                                >\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Fields */}\r\n                <CardAccordion title={'All Fields'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.fieldList && this.state.fieldList.map((element, index) =>\r\n                        <Form.Row key={index}>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    name=\"sku\"\r\n                                    value={element.entry_date}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Field Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleFieldChange(e, index)}\r\n                                        disabled={element.label}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ? () => this.handleEditFieldClick(index) : () => this.handleUpdateFieldClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={element.label ?\r\n                                        () => this.setState({\r\n                                            isFieldDelete: false,\r\n                                            showConfirmDeleteModal: true,\r\n                                            delete_field_id: element._id,\r\n                                            delete_field_name: element.value,\r\n                                            delete_field_index: index,\r\n                                        })\r\n                                        : () => this.handleCancelFieldClick(index)}>\r\n                                    <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducFields\r\n"]},"metadata":{},"sourceType":"module"}