{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nlet categoryArray = [];\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCategoryRequestChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.categoryRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleCategoryChange\", (e, index) => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.categoryList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        categoryList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteCategoryClick\", index => {\n      let copyArray = [];\n      copyArray = Object.assign([], this.state.categoryList);\n      categoryArray.forEach((element, i) => {\n        if (copyArray[index].value == element.value) {\n          categoryArray.splice(index, 1);\n        }\n      });\n      copyArray.splice(index, 1);\n      this.setState({\n        categoryList: copyArray,\n        showModalMessage: 'Product Category Deleted',\n        showModal: true\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      subCategoryValue: '',\n      subSubCategoryValue: '',\n      categoryError: '',\n      subCategoryError: '',\n      subSubCategoryError: '',\n      categoryList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: ''\n    };\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/categories/categories';\n\n    try {\n      const response = await axios.get(url);\n      let copyArray = [];\n      copyArray = response.data.data;\n      copyArray.forEach((data, index) => {\n        data.label = true;\n      });\n      this.setState({\n        categoryList: copyArray\n      });\n      this.setState({\n        categoryRequestList: this.state.categoryList\n      });\n      categoryArray = copyArray;\n    } catch (error) {\n      console.log('feror:', error);\n    }\n  }\n\n  async addCategory() {\n    let data = [];\n    data = {\n      category: this.state.categoryValue,\n      sub_category: this.state.subCategoryValue,\n      sub_sub_Category: this.state.subSubCategoryValue\n    };\n    const url = MuhalikConfig.PATH + '/api/categories/add-category';\n    await axios.post(url, {\n      data\n    }, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      this.setState({\n        isLoading: false\n      });\n      this.setState({\n        showModalMessage: 'Product Category Added Successfully'\n      });\n      this.setState({\n        showModal: true\n      });\n      return true;\n    }).catch(function (error) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      alert('Error: ', error.response.data.message);\n      return false;\n    });\n  }\n\n  handleFilterStrChange(e) {\n    this.setState({\n      filterStr: e.target.value\n    });\n\n    if (e.target.value == '') {\n      this.setState({\n        categoryList: categoryArray\n      });\n    } else {\n      let array = [];\n      this.state.categoryList.filter(function (data) {\n        // var value = data.value.toLowerCase;\n        if (data.value.includes(e.target.value)) {\n          array.push(data);\n        }\n      });\n      this.setState({\n        categoryList: array\n      });\n    }\n  }\n\n  handleSubmit() {\n    if (this.state.categoryValue == '' || this.state.subCategoryValue == '' || this.state.subSubCategoryValue == '') {\n      if (this.state.categoryValue == '') {\n        this.setState({\n          categoryError: 'Enter Value First'\n        });\n      }\n\n      if (this.state.subCategoryValue == '') {\n        this.setState({\n          subCategoryError: 'Enter Value First'\n        });\n      }\n\n      if (this.state.subSubCategoryValue == '') {\n        this.setState({\n          subSubCategoryError: 'Enter Value First'\n        });\n      }\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.addCategory(this);\n    }\n  } // Category Request \n  // => Field Value \n\n\n  //  => Edit\n  async handleEditCategoryRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryRequestList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      categoryRequestList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelCategoryRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    copyArray[index].error = '';\n    this.setState({\n      categoryRequestList: copyArray\n    });\n  } // Update\n\n\n  handleUpdateCategoryRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryRequestList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        this.setState({\n          categoryRequestList: copyArray,\n          showModalMessage: 'Product Category Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Add\n\n\n  handleAddCategoryRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      categoryRequestList: copyArray,\n      showModalMessage: 'Product Category Added Successfully',\n      showModal: true\n    });\n  } //  => Delete\n\n\n  handleDeleteCategoryRequestClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      categoryRequestList: copyArray,\n      showModalMessage: 'Product Category Deleted',\n      showModal: true\n    });\n  } // All categories\n  //  => Chane\n\n\n  //  => Edit\n  async handleEditCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      categoryList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].error = '';\n    copyArray[index].label = true;\n    this.setState({\n      categoryList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateCategoryClick(index) {\n    let copyArray = [];\n    copyArray = Object.assign([], this.state.categoryList);\n\n    if (copyArray[index].value == copyArray[index].prevVal) {\n      copyArray[index].error = 'Enter Different Value';\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    } else {\n      if (copyArray[index].error == '') {\n        copyArray[index].label = true;\n        categoryArray.forEach((element, i) => {\n          if (copyArray[index].prevVal == element.value) {\n            element.value = copyArray[index].value;\n          }\n        });\n        this.setState({\n          categoryList: copyArray,\n          showModalMessage: 'Product Category Updated Successfully',\n          showModal: true\n        });\n      }\n    }\n  } //  => Delete\n\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showModal: false\n      }),\n      show: this.state.showModal,\n      header: 'Success',\n      message: this.state.showModalMessage,\n      iconName: faThumbsUp,\n      color: \"#00b300\"\n    }), __jsx(TitleRow, {\n      icon: faListAlt,\n      title: ' Admin Dashboard / Product Categories'\n    }), __jsx(CardAccordion, {\n      title: 'Add New Category'\n    }, __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 4,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: e => this.setState({\n        categoryValue: e.target.value,\n        categoryError: ''\n      }),\n      isInvalid: this.state.categoryError\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.categoryError))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 4,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Sub Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.subCategoryValue,\n      onChange: e => this.setState({\n        subCategoryValue: e.target.value,\n        subCategoryError: ''\n      }),\n      isInvalid: this.state.subCategoryError\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.subCategoryError))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 4,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Sub Sub Category\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.subSubCategoryValue,\n      onChange: e => this.setState({\n        subSubCategoryValue: e.target.value,\n        subSubCategoryError: ''\n      }),\n      isInvalid: this.state.subSubCategoryError\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.subSubCategoryError)))), __jsx(Form.Group, null, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\"\n    }) : null))), __jsx(CardAccordion, {\n      title: 'Add Category Requests'\n    }, this.state.categoryRequestList.map((data, index) => __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      disabled: true\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      disabled: true\n    })), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 6,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryRequestChange(e, index),\n      isInvalid: data.error,\n      disabled: data.label\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, data.error))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index);\n      }\n    }, __jsx(\"div\", null, data.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => this.handleDeleteCategoryRequestClick(index)\n    }, __jsx(\"div\", null, \"Discard\")))))), __jsx(CardAccordion, {\n      title: 'All Categories'\n    }, __jsx(Form.Row, {\n      style: {\n        margin: '0% 5%'\n      }\n    }, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.filterStr,\n      onChange: e => this.handleFilterStrChange(e)\n    })))), __jsx(\"hr\", null), this.state.categoryList.map((data, index) => __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 8,\n      md: 8,\n      sm: 12,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, data.error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 1,\n      md: 1,\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n      className: \"mr-auto\"\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: \"auto\",\n      xs: \"auto\"\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: data.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index)\n    }, __jsx(\"div\", null, data.label ? 'Delete' : 'Cancel')))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","TitleRow","CardAccordion","categoryArray","ProducCategories","constructor","props","e","index","copyArray","Object","assign","state","categoryRequestList","value","target","length","error","setState","categoryList","forEach","element","i","splice","showModalMessage","showModal","isLoading","showToast","categoryValue","subCategoryValue","subSubCategoryValue","categoryError","subCategoryError","subSubCategoryError","editRequestedCategory","filterStr","componentDidMount","url","PATH","response","get","data","label","console","log","addCategory","category","sub_category","sub_sub_Category","post","headers","getUncodededTokenFromStorage","then","catch","currentComponent","alert","message","handleFilterStrChange","array","filter","includes","push","handleSubmit","handleEditCategoryRequestClick","obj","handleCancelCategoryRequestClick","prevVal","handleUpdateCategoryRequestClick","handleAddCategoryRequestClick","handleDeleteCategoryRequestClick","handleEditCategoryClick","handleCancelCategoryClick","handleUpdateCategoryClick","render","styles","bind","submit_btn","map","handleCategoryRequestChange","margin","handleCategoryChange","handleDeleteCategoryClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nlet categoryArray = [];\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            categoryValue: '',\r\n            subCategoryValue: '',\r\n            subSubCategoryValue: '',\r\n\r\n            categoryError: '',\r\n            subCategoryError: '',\r\n            subSubCategoryError: '',\r\n\r\n            categoryList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = [];\r\n            copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ categoryList: copyArray });\r\n            this.setState({ categoryRequestList: this.state.categoryList });\r\n            categoryArray = copyArray;\r\n        } catch (error) {\r\n            console.log('feror:', error);\r\n        }\r\n    }\r\n\r\n    async addCategory() {\r\n        let data = [];\r\n        data = { category: this.state.categoryValue, sub_category: this.state.subCategoryValue, sub_sub_Category: this.state.subSubCategoryValue }\r\n        const url = MuhalikConfig.PATH + '/api/categories/add-category';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            this.setState({ isLoading: false })\r\n            this.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n            this.setState({ showModal: true })\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        if (e.target.value == '') {\r\n            this.setState({ categoryList: categoryArray });\r\n        } else {\r\n            let array = [];\r\n            this.state.categoryList.filter(function (data) {\r\n                // var value = data.value.toLowerCase;\r\n                if (data.value.includes(e.target.value)) {\r\n                    array.push(data);\r\n                }\r\n            })\r\n            this.setState({ categoryList: array });\r\n        }\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.state.categoryValue == '' || this.state.subCategoryValue == '' || this.state.subSubCategoryValue == '') {\r\n            if (this.state.categoryValue == '') {\r\n                this.setState({ categoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subCategoryValue == '') {\r\n                this.setState({ subCategoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subSubCategoryValue == '') {\r\n                this.setState({ subSubCategoryError: 'Enter Value First' });\r\n            }\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Category Request \r\n    // => Field Value \r\n    handleCategoryRequestChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        copyArray[index].error = '';\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryRequestClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            if (copyArray[index].error == '') {\r\n                copyArray[index].label = true;\r\n                categoryArray.forEach((element, i) => {\r\n                    if (copyArray[index].prevVal == element.value) {\r\n                        element.value = copyArray[index].value;\r\n                    }\r\n                });\r\n                this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n            }\r\n        }\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick = (index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoryList);\r\n        categoryArray.forEach((element, i) => {\r\n            if (copyArray[index].value == element.value) {\r\n                categoryArray.splice(index, 1);\r\n            }\r\n        });\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Categories'} />\r\n\r\n\r\n\r\n                {/* Add New Category */}\r\n                <CardAccordion title={'Add New Category'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.categoryValue}\r\n                                    onChange={(e) => this.setState({ categoryValue: e.target.value, categoryError: '' })}\r\n                                    isInvalid={this.state.categoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.categoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subCategoryValue}\r\n                                    onChange={(e) => this.setState({ subCategoryValue: e.target.value, subCategoryError: '' })}\r\n                                    isInvalid={this.state.subCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={4} md={4} sm={4} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subSubCategoryValue}\r\n                                    onChange={(e) => this.setState({ subSubCategoryValue: e.target.value, subSubCategoryError: '' })}\r\n                                    isInvalid={this.state.subSubCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subSubCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <Form.Group>\r\n                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                            {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                        </Button>\r\n                    </Form.Group>\r\n                </CardAccordion>\r\n\r\n                {/* Add Category Requests */}\r\n                <CardAccordion title={'Add Category Requests'}>\r\n                    {this.state.categoryRequestList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                        isInvalid={data.error}\r\n                                        disabled={data.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n\r\n                {/* All Categories */}\r\n                <CardAccordion title={'All Categories'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.categoryList.map((data, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={data.value}\r\n                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                        disabled={data.label}\r\n                                        isInvalid={data.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {data.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)} >\r\n                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={data.label ? () => this.handleDeleteCategoryClick(index) : () => this.handleCancelCategoryClick(index)}>\r\n                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}