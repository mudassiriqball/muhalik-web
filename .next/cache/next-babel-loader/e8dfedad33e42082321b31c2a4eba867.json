{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nvar groupStyles = {\n  border: \"1px solid \".concat(GlobalStyleSheet.admin_primry_color),\n  borderRadius: '5px',\n  background: 'white',\n  color: \"\".concat(GlobalStyleSheet.admin_primry_color)\n};\n\nvar Group = function Group(props) {\n  return __jsx(\"div\", {\n    style: groupStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(components.Group, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar CustomFields = function CustomFields(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Header, {\n    style: styles.card_header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \"Custome Fields\"), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      \"float\": 'right',\n      background: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.accordin_fontawesome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, props.showCustomFields ? __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 51\n    }\n  }, \"Please First Create Variations\") : __jsx(Form.Row, {\n    style: {\n      margin: '0.5% 1%',\n      padding: '1% 2%',\n      background: 'lightGray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }\n  }, \"Field Name\"), __jsx(Select, {\n    options: groupedOptions,\n    components: {\n      Group: Group\n    },\n    value: props.customFieldNameSelected,\n    onChange: props.fieldNameHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 37\n    }\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: function onClick() {\n      return setModalShow(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 37\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.fieldValueHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 41\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 41\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 37\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    style: {\n      margin: '2% 0px'\n    },\n    onClick: props.addFieldHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Add Field\")), __jsx(\"div\", {\n    style: {\n      background: 'lightGray',\n      margin: '0.5% 1%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map(function (data, index) {\n    return __jsx(Form.Row, {\n      style: {\n        padding: '1% 2%'\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, __jsx(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      value: data.name,\n      onChange: function onChange() {\n        return data.name;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 41\n      }\n    }, __jsx(\"option\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 45\n      }\n    }, data.name))), __jsx(Form.Group, {\n      as: Col,\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: function onChange() {\n        return data.value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 45\n      }\n    }), __jsx(Button, {\n      variant: \"outline-danger\",\n      size: \"sm\",\n      style: {\n        marginLeft: '1%'\n      },\n      onClick: function onClick() {\n        return props[\"delete\"](index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 45\n      }\n    }, \" delete\"))));\n  }))))));\n};\n\nvar styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  label: {\n    fontSize: '13px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["React","Component","Accordion","Form","InputGroup","Col","Button","Row","Card","Modal","Nav","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","Select","components","groupedOptions","AddNewFieldNameModal","groupStyles","border","admin_primry_color","borderRadius","background","color","Group","props","CustomFields","useState","modalShow","setModalShow","width","styles","card","card_header","accordin_fontawesome","showCustomFields","label","margin","padding","customFieldNameSelected","fieldNameHandler","fontSize","value","fieldValueHandler","isVariableProduct","error","addFieldHandler","customFieldsArray","map","data","index","name","marginLeft","row","alignItems","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        {props.showCustomFields ? <Form.Label style={styles.label}>\r\n                            Please First Create Variations\r\n                        </Form.Label> :\r\n                            <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                    <Select\r\n                                        options={groupedOptions}\r\n                                        components={{ Group }}\r\n                                        value={props.customFieldNameSelected}\r\n                                        onChange={props.fieldNameHandler}\r\n                                    />\r\n                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                        Add New\r\n                                </Nav.Link>\r\n\r\n                                    <AddNewFieldNameModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Value\"\r\n                                            name=\"sku\"\r\n                                            value={props.value}\r\n                                            onChange={props.fieldValueHandler}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Label style={styles.label}>\r\n                                    {/* <span>For Multiple Values add | between values</span> */}\r\n                                    {props.isVariableProduct ?\r\n                                        <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                        : null\r\n                                    }\r\n                                    <span style={{ color: 'red' }}>\r\n                                        {props.error}</span>\r\n                                </Form.Label>\r\n                                <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                    onClick={props.addFieldHandler}>Add Field</Button>\r\n                            </Form.Row>\r\n                        }\r\n\r\n\r\n                        {/* Map */}\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.name}\r\n                                            onChange={() => data.name}\r\n                                        >\r\n                                            <option>{data.name}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.value}\r\n                                                onChange={() => data.value}\r\n                                            />\r\n                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}