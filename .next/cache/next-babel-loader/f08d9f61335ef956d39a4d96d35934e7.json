{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\nimport ConfirmModal from '../../../../confirm-modal';\nimport TitleRow from '../../../../title-row';\nimport CardAccordion from '../../../../card_accordion';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nvar categoryArray = [];\n\nvar ProducCategories = /*#__PURE__*/function (_Component) {\n  _inherits(ProducCategories, _Component);\n\n  var _super = _createSuper(ProducCategories);\n\n  function ProducCategories(props) {\n    var _this;\n\n    _classCallCheck(this, ProducCategories);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.categoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        categoriesList: copyArray\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubCategoryChange\", function (e, index) {\n      var copyArray = [];\n      copyArray = Object.assign([], _this.state.subCategoriesList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      _this.setState({\n        subCategoriesList: copyArray\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      showConfirmDeleteModal: false,\n      delete_category_id: '',\n      delete_category_name: '',\n      index: '',\n      categoryValue: '',\n      subCategoryValue: '',\n      categoryError: '',\n      subCategoryError: '',\n      categoriesList: [],\n      subCategoriesList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      searchType: 'Category',\n      filterStr: ''\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(ProducCategories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, currentComponent;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/categories/categories';\n              currentComponent = this;\n              _context.t0 = _regeneratorRuntime;\n              _context.t1 = axios;\n              _context.t2 = url;\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 7:\n              _context.t3 = _context.sent;\n              _context.t4 = {\n                'authorization': _context.t3\n              };\n              _context.t5 = {\n                headers: _context.t4\n              };\n              _context.t6 = _context.t1.get.call(_context.t1, _context.t2, _context.t5).then(function (response) {\n                currentComponent.setState({\n                  categoriesList: response.data.category.docs,\n                  subCategoriesList: response.data.sub_category.docs\n                });\n                categoryArray = response.data.category.docs;\n              })[\"catch\"](function (error) {\n                console.log('Caterories Fetchig Error: ', error);\n              });\n              _context.next = 13;\n              return _context.t0.awrap.call(_context.t0, _context.t6);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"addCategory\",\n    value: function addCategory(currentComponent) {\n      var data, url;\n      return _regeneratorRuntime.async(function addCategory$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = [];\n              data = {\n                category: {\n                  value: this.state.categoryValue,\n                  label: this.state.categoryValue\n                },\n                sub_category: {\n                  value: this.state.subCategoryValue,\n                  label: this.state.subCategoryValue\n                }\n              };\n              url = MuhalikConfig.PATH + '/api/categories/category';\n              _context2.t0 = _regeneratorRuntime;\n              _context2.t1 = axios;\n              _context2.t2 = url;\n              _context2.t3 = {\n                data: data\n              };\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 9:\n              _context2.t4 = _context2.sent;\n              _context2.t5 = {\n                'authorization': _context2.t4\n              };\n              _context2.t6 = {\n                headers: _context2.t5\n              };\n              _context2.t7 = _context2.t1.post.call(_context2.t1, _context2.t2, _context2.t3, _context2.t6).then(function (response) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n                currentComponent.setState({\n                  showModalMessage: 'Product Category Added Successfully'\n                });\n                currentComponent.setState({\n                  showModal: true\n                });\n                return true;\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n\n                return false;\n              });\n              _context2.next = 15;\n              return _context2.t0.awrap.call(_context2.t0, _context2.t7);\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      return _regeneratorRuntime.async(function handleSubmit$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\n                if (this.state.categoryValue == '') {\n                  this.setState({\n                    categoryError: 'Enter Value First'\n                  });\n                }\n\n                if (this.state.subCategoryValue == '') {\n                  this.setState({\n                    subCategoryError: 'Enter Value First'\n                  });\n                }\n              } else {\n                this.setState({\n                  isLoading: true\n                });\n                this.addCategory(this);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } // // Category Request \n    // // => Field Value \n    // handleCategoryRequestChange = (e, index) => {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray[index].value = e.target.value;\n    //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n    //         copyArray[index].error = ''\n    //     } else {\n    //         copyArray[index].error = 'Value must be 3-20 characters'\n    //     }\n    //     this.setState({ categoryRequestList: copyArray })\n    // }\n    // //  => Edit\n    // async handleEditCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     var obj = {};\n    //     obj['value'] = copyArray[index].value;\n    //     obj['label'] = false;\n    //     obj['prevVal'] = copyArray[index].value;\n    //     obj['error'] = '';\n    //     copyArray[index] = obj\n    //     await this.setState({ categoryRequestList: copyArray })\n    // }\n    // //  => Cancle\n    // handleCancelCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray[index].value = copyArray[index].prevVal;\n    //     copyArray[index].label = true;\n    //     copyArray[index].error = '';\n    //     this.setState({ categoryRequestList: copyArray })\n    // }\n    // // Update\n    // handleUpdateCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     if (copyArray[index].value == copyArray[index].prevVal) {\n    //         copyArray[index].error = 'Enter Different Value';\n    //         this.setState({ categoryRequestList: copyArray });\n    //     } else {\n    //         if (copyArray[index].error == '') {\n    //             copyArray[index].label = true;\n    //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\n    //         }\n    //     }\n    // }\n    // //  => Add\n    // handleAddCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray.splice(index, 1);\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\n    //     this.addCategory(this)\n    // }\n    // //  => Delete\n    // handleDeleteCategoryRequestClick(index) {\n    //     let copyArray = [];\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\n    //     copyArray.splice(index, 1);\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\n    // }\n    // All categories\n\n  }, {\n    key: \"handleFilterStrChange\",\n    value: function handleFilterStrChange(e) {\n      this.setState({\n        filterStr: e.target.value\n      });\n      var array = [];\n\n      if (e.target.value != '') {\n        if (this.state.searchType == 'Category') {\n          this.state.categoriesList.filter(function (data) {\n            var value = data.value.toLowerCase();\n\n            if (value.includes(e.target.value.toLowerCase())) {\n              array.push(data);\n            }\n          });\n        } else {\n          var currentComponent = this;\n          this.state.subCategoriesList.filter(function (element) {\n            var value = element.value.toLowerCase();\n\n            if (value.includes(e.target.value.toLowerCase())) {\n              currentComponent.state.categoriesList.filter(function (e) {\n                if (element.category_id == e._id) {\n                  array.push(e);\n                }\n              });\n            }\n          });\n          var a = [];\n          array.map(function (x) {\n            if (!a.includes(x)) {\n              a.push(x);\n            }\n          });\n          array = a;\n        }\n\n        this.setState({\n          categoriesList: array\n        });\n      } else {\n        this.setState({\n          categoriesList: categoryArray\n        });\n      }\n    } //  => Chane\n\n  }, {\n    key: \"handleEditCategoryClick\",\n    //  => Edit\n    value: function handleEditCategoryClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditCategoryClick$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.categoriesList);\n              obj = {};\n              obj['_id'] = copyArray[index]._id;\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context4.next = 11;\n              return _regeneratorRuntime.awrap(this.setState({\n                categoriesList: copyArray\n              }));\n\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelCategoryClick\",\n    value: function handleCancelCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.categoriesList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        categoriesList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateCategoryClick\",\n    value: function handleUpdateCategoryClick() {\n      var copyArray, index, currentComponent, _data, url;\n\n      return _regeneratorRuntime.async(function handleUpdateCategoryClick$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              copyArray = [];\n              index = this.state.index;\n              copyArray = Object.assign([], this.state.categoriesList);\n\n              if (!(copyArray[index].value == copyArray[index].prevVal)) {\n                _context5.next = 8;\n                break;\n              }\n\n              copyArray[index].error = 'Enter Different Value';\n              this.setState({\n                categoryRequestList: copyArray\n              });\n              _context5.next = 24;\n              break;\n\n            case 8:\n              currentComponent = this;\n              _data = [];\n              _data = {\n                category: {\n                  value: copyArray[index].value,\n                  label: copyArray[index].value\n                }\n              };\n              url = MuhalikConfig.PATH + \"/api/categories/category/\".concat(copyArray[index]._id);\n              _context5.t0 = _regeneratorRuntime;\n              _context5.t1 = axios;\n              _context5.t2 = url;\n              _context5.t3 = {\n                data: _data\n              };\n              _context5.next = 18;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 18:\n              _context5.t4 = _context5.sent;\n              _context5.t5 = {\n                'authorization': _context5.t4\n              };\n              _context5.t6 = {\n                headers: _context5.t5\n              };\n              _context5.t7 = _context5.t1.put.call(_context5.t1, _context5.t2, _context5.t3, _context5.t6).then(function (response) {\n                copyArray[index].label = copyArray[index].value;\n                copyArray[index].prevVal = copyArray[index].value;\n                currentComponent.setState({\n                  categoriesList: copyArray,\n                  showModalMessage: 'Product Category Updated Successfully',\n                  showModal: true\n                });\n                categoryArray = copyArray;\n                return true;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n\n                return false;\n              });\n              _context5.next = 24;\n              return _context5.t0.awrap.call(_context5.t0, _context5.t7);\n\n            case 24:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } // \n    // Sub Category\n\n  }, {\n    key: \"handleEditSubCategoryClick\",\n    //  => Edit\n    value: function handleEditSubCategoryClick(index) {\n      var copyArray, obj;\n      return _regeneratorRuntime.async(function handleEditSubCategoryClick$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.subCategoriesList);\n              obj = {};\n              obj['_id'] = copyArray[index]._id;\n              obj['category_id'] = copyArray[index].category_id;\n              obj['value'] = copyArray[index].value;\n              obj['label'] = false;\n              obj['prevVal'] = copyArray[index].value;\n              obj['error'] = '';\n              copyArray[index] = obj;\n              _context6.next = 12;\n              return _regeneratorRuntime.awrap(this.setState({\n                subCategoriesList: copyArray\n              }));\n\n            case 12:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Cancle\n\n  }, {\n    key: \"handleCancelSubCategoryClick\",\n    value: function handleCancelSubCategoryClick(index) {\n      var copyArray = [];\n      copyArray = Object.assign([], this.state.subCategoriesList);\n      copyArray[index].value = copyArray[index].prevVal;\n      copyArray[index].error = '';\n      copyArray[index].label = true;\n      this.setState({\n        subCategoriesList: copyArray\n      });\n    } //  => Update\n\n  }, {\n    key: \"handleUpdateSubCategoryClick\",\n    value: function handleUpdateSubCategoryClick(index) {\n      var copyArray, currentComponent, _data2, url;\n\n      return _regeneratorRuntime.async(function handleUpdateSubCategoryClick$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              copyArray = [];\n              copyArray = Object.assign([], this.state.subCategoriesList);\n\n              if (!(copyArray[index].value == copyArray[index].prevVal)) {\n                _context7.next = 7;\n                break;\n              }\n\n              copyArray[index].error = 'Enter Different Value';\n              this.setState({\n                categoryRequestList: copyArray\n              });\n              _context7.next = 23;\n              break;\n\n            case 7:\n              currentComponent = this;\n              _data2 = [];\n              _data2 = {\n                category: {\n                  value: copyArray[index].value,\n                  label: copyArray[index].value\n                }\n              };\n              url = MuhalikConfig.PATH + \"/api/categories/sub-category/\".concat(copyArray[index]._id);\n              _context7.t0 = _regeneratorRuntime;\n              _context7.t1 = axios;\n              _context7.t2 = url;\n              _context7.t3 = {\n                data: _data2\n              };\n              _context7.next = 17;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 17:\n              _context7.t4 = _context7.sent;\n              _context7.t5 = {\n                'authorization': _context7.t4\n              };\n              _context7.t6 = {\n                headers: _context7.t5\n              };\n              _context7.t7 = _context7.t1.put.call(_context7.t1, _context7.t2, _context7.t3, _context7.t6).then(function (response) {\n                copyArray[index].label = copyArray[index].value;\n                copyArray[index].prevVal = copyArray[index].value;\n                currentComponent.setState({\n                  categoriesList: copyArray,\n                  showModalMessage: 'Product Sub Category Updated Successfully',\n                  showModal: true\n                });\n                categoryArray = copyArray;\n                return true;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n\n                return false;\n              });\n              _context7.next = 23;\n              return _context7.t0.awrap.call(_context7.t0, _context7.t7);\n\n            case 23:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    } //  => Delete\n\n  }, {\n    key: \"handleDeleteSubCategoryClick\",\n    value: function handleDeleteSubCategoryClick() {\n      var copyArray, index, currentComponent, url;\n      return _regeneratorRuntime.async(function handleDeleteSubCategoryClick$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              this.setState({\n                showConfirmDeleteModal: false\n              });\n              copyArray = [];\n              index = this.state.index;\n              currentComponent = this;\n              copyArray = Object.assign([], this.state.subCategoriesList);\n              url = MuhalikConfig.PATH + \"/api/categories/sub-category/\".concat(copyArray[index]._id);\n              _context8.t0 = _regeneratorRuntime;\n              _context8.t1 = axios;\n              _context8.t2 = url;\n              _context8.t3 = {\n                data: data\n              };\n              _context8.next = 12;\n              return _regeneratorRuntime.awrap(getUncodededTokenFromStorage());\n\n            case 12:\n              _context8.t4 = _context8.sent;\n              _context8.t5 = {\n                'authorization': _context8.t4\n              };\n              _context8.t6 = {\n                headers: _context8.t5\n              };\n              _context8.t7 = _context8.t1.put.call(_context8.t1, _context8.t2, _context8.t3, _context8.t6).then(function (response) {\n                copyArray.splice(index, 1);\n                currentComponent.setState({\n                  subCategoriesList: copyArray,\n                  showModalMessage: 'Product Category Deleted',\n                  showModal: true\n                });\n                categoryArray = copyArray;\n              })[\"catch\"](function (error) {\n                try {\n                  alert('Error: ', error.response.data.message);\n                } catch (err) {\n                  console.log('Request Failed:', error);\n                }\n\n                return false;\n              });\n              _context8.next = 18;\n              return _context8.t0.awrap.call(_context8.t0, _context8.t7);\n\n            case 18:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(AlertModal, {\n        onHide: function onHide(e) {\n          return _this2.setState({\n            showModal: false\n          });\n        },\n        show: this.state.showModal,\n        header: 'Success',\n        message: this.state.showModalMessage,\n        iconname: faThumbsUp,\n        color: \"#00b300\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 17\n        }\n      }), __jsx(ConfirmModal, {\n        onHide: function onHide() {\n          return _this2.setState({\n            showConfirmDeleteModal: false\n          });\n        },\n        show: this.state.showConfirmDeleteModal,\n        title: 'Delete Sub Category',\n        _id: this.state.delete_category_id,\n        name: this.state.delete_category_name,\n        confirm: this.handleDeleteSubCategoryClick.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 17\n        }\n      }), __jsx(TitleRow, {\n        icon: faListAlt,\n        title: ' Admin Dashboard / Product Categories',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }\n      }), __jsx(CardAccordion, {\n        title: 'Add New Category',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Label, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 29\n        }\n      }, \"Category\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            categoryValue: e.target.value,\n            categoryError: ''\n          });\n        },\n        isInvalid: this.state.categoryError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 33\n        }\n      }, this.state.categoryError))), __jsx(Form.Group, {\n        as: Col,\n        lg: 6,\n        md: 6,\n        sm: 6,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }\n      }, __jsx(Form.Label, {\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 29\n        }\n      }, \"Sub Category\"), __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.subCategoryValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            subCategoryValue: e.target.value,\n            subCategoryError: ''\n          });\n        },\n        isInvalid: this.state.subCategoryError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 33\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 33\n        }\n      }, this.state.subCategoryError))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 25\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 29\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 57\n        }\n      }) : null)))), __jsx(CardAccordion, {\n        title: 'All Categories',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 17\n        }\n      }, __jsx(Form.Row, {\n        style: {\n          margin: '0% 5%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 21\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 25\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 29\n        }\n      }, __jsx(InputGroup.Prepend, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 33\n        }\n      }, __jsx(Form.Control, {\n        as: \"select\",\n        variant: \"primary\",\n        size: \"sm\",\n        value: this.state.searchType,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            searchType: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 37\n        }\n      }, __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 41\n        }\n      }, \"Category\"), __jsx(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 41\n        }\n      }, \"Sub Category\"))), __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Search Here\",\n        name: \"search\",\n        value: this.state.filterStr,\n        onChange: function onChange(e) {\n          return _this2.handleFilterStrChange(e);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 33\n        }\n      })))), __jsx(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }\n      }), this.state.categoriesList && this.state.categoriesList.map(function (element, index) {\n        return __jsx(\"div\", {\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 25\n          }\n        }, __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 29\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          lg: 6,\n          md: 6,\n          sm: 6,\n          xs: 12,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 33\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          name: \"sku\",\n          value: element.value,\n          disabled: element.label,\n          onChange: function onChange(e) {\n            return _this2.handleCategoryChange(e, index);\n          },\n          isInvalid: element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 37\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 37\n          }\n        }, element.error)), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 33\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-primary\" : \"outline-success\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? function () {\n            return _this2.handleEditCategoryClick(index);\n          } : function () {\n            return _this2.handleUpdateCategoryClick(index);\n          },\n          disabled: element.label ? false : element.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 37\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 41\n          }\n        }, element.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 33\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: element.label ? \"outline-danger\" : \"outline-primary\",\n          size: \"sm\",\n          block: true,\n          style: styles.submit_btn,\n          onClick: element.label ? null : function () {\n            return _this2.handleCancelCategoryClick(index);\n          },\n          disabled: element.label ? true : false,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 37\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 41\n          }\n        }, element.label ? 'Delete' : 'Cancel')))), __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 29\n          }\n        }, _this2.state.subCategoriesList.map(function (e, i) {\n          return element._id == e.category_id ? __jsx(Col, {\n            lg: 6,\n            md: 6,\n            sm: 6,\n            xs: 12,\n            key: e._id,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 37\n            }\n          }, __jsx(Form.Row, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 41\n            }\n          }, __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: 12,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 45\n            }\n          }, __jsx(Form.Control, {\n            type: \"text\",\n            size: \"sm\",\n            name: \"sku\",\n            value: e.value,\n            disabled: e.label,\n            onChange: function onChange(event) {\n              return _this2.handleSubCategoryChange(event, i);\n            },\n            isInvalid: e.error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 607,\n              columnNumber: 49\n            }\n          }), __jsx(Form.Control.Feedback, {\n            type: \"invalid\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 49\n            }\n          }, e.error)), __jsx(\"div\", {\n            className: \"mr-auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 45\n            }\n          }), __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: \"auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 45\n            }\n          }, __jsx(Button, {\n            type: \"submit\",\n            variant: e.label ? \"outline-primary\" : \"outline-success\",\n            size: \"sm\",\n            block: true,\n            style: styles.submit_btn,\n            onClick: e.label ? function () {\n              return _this2.handleEditSubCategoryClick(i);\n            } : function () {\n              return _this2.handleUpdateSubCategoryClick(i);\n            },\n            disabled: e.label ? false : e.error,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 49\n            }\n          }, __jsx(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 53\n            }\n          }, e.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n            as: Col,\n            lg: \"auto\",\n            md: \"auto\",\n            sm: \"auto\",\n            xs: \"auto\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 45\n            }\n          }, __jsx(Button, {\n            type: \"submit\",\n            variant: e.label ? \"outline-danger\" : \"outline-primary\",\n            size: \"sm\",\n            block: true,\n            style: styles.submit_btn,\n            onClick: e.label ? function () {\n              return _this2.setState({\n                showConfirmDeleteModal: true,\n                delete_category_id: e._id,\n                delete_category_name: e.value,\n                index: index\n              });\n            } : function () {\n              return _this2.handleCancelSubCategoryClick(i);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 49\n            }\n          }, __jsx(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 53\n            }\n          }, e.label ? 'Delete' : 'Cancel'))))) : null;\n        })), __jsx(\"hr\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 651,\n            columnNumber: 29\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return ProducCategories;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","Dropdown","ButtonGroup","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","ConfirmModal","TitleRow","CardAccordion","getUncodededTokenFromStorage","categoryArray","ProducCategories","props","e","index","copyArray","Object","assign","state","categoriesList","value","target","length","error","setState","subCategoriesList","isLoading","showToast","showConfirmDeleteModal","delete_category_id","delete_category_name","categoryValue","subCategoryValue","categoryError","subCategoryError","categoryRequestList","editRequestedCategory","showModalMessage","showModal","searchType","filterStr","url","PATH","currentComponent","headers","get","then","response","data","category","docs","sub_category","console","log","label","post","alert","message","err","addCategory","array","filter","toLowerCase","includes","push","element","category_id","_id","a","map","x","obj","prevVal","put","splice","handleDeleteSubCategoryClick","bind","styles","handleSubmit","submit_btn","margin","handleFilterStrChange","handleCategoryChange","handleEditCategoryClick","handleUpdateCategoryClick","handleCancelCategoryClick","i","event","handleSubCategoryChange","handleEditSubCategoryClick","handleUpdateSubCategoryClick","handleCancelSubCategoryClick","title_row","borderBottom","padding","title_fontawesome","color","marginRight","width","height","maxHeight","maxWidth","title","card","card_body","fontSize","form_label_fontsize","textAlign","accordin_fontawesome","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner, Dropdown, ButtonGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\nimport ConfirmModal from '../../../../confirm-modal'\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n\r\nlet categoryArray = [];\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n\r\n            showConfirmDeleteModal: false,\r\n            delete_category_id: '',\r\n            delete_category_name: '',\r\n            index: '',\r\n\r\n\r\n            categoryValue: '',\r\n            subCategoryValue: '',\r\n\r\n            categoryError: '',\r\n            subCategoryError: '',\r\n\r\n            categoriesList: [],\r\n            subCategoriesList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            searchType: 'Category',\r\n            filterStr: '',\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        const currentComponent = this;\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            currentComponent.setState({\r\n                categoriesList: response.data.category.docs,\r\n                subCategoriesList: response.data.sub_category.docs\r\n            });\r\n            categoryArray = response.data.category.docs\r\n        }).catch((error) => {\r\n            console.log('Caterories Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async addCategory(currentComponent) {\r\n        let data = [];\r\n        data = {\r\n            category: { value: this.state.categoryValue, label: this.state.categoryValue },\r\n            sub_category: { value: this.state.subCategoryValue, label: this.state.subCategoryValue }\r\n        }\r\n        const url = MuhalikConfig.PATH + '/api/categories/category';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false })\r\n            currentComponent.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n            currentComponent.setState({ showModal: true })\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                console.log('Request Failed:', error)\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    async handleSubmit() {\r\n        if (this.state.categoryValue == '' || this.state.subCategoryValue == '') {\r\n            if (this.state.categoryValue == '') {\r\n                this.setState({ categoryError: 'Enter Value First' });\r\n            }\r\n            if (this.state.subCategoryValue == '') {\r\n                this.setState({ subCategoryError: 'Enter Value First' });\r\n            }\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.addCategory(this)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // // Category Request \r\n    // // => Field Value \r\n    // handleCategoryRequestChange = (e, index) => {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = e.target.value;\r\n\r\n    //     if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n    //         copyArray[index].error = ''\r\n    //     } else {\r\n    //         copyArray[index].error = 'Value must be 3-20 characters'\r\n    //     }\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Edit\r\n    // async handleEditCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     var obj = {};\r\n    //     obj['value'] = copyArray[index].value;\r\n    //     obj['label'] = false;\r\n    //     obj['prevVal'] = copyArray[index].value;\r\n    //     obj['error'] = '';\r\n    //     copyArray[index] = obj\r\n    //     await this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // //  => Cancle\r\n    // handleCancelCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray[index].value = copyArray[index].prevVal;\r\n    //     copyArray[index].label = true;\r\n    //     copyArray[index].error = '';\r\n    //     this.setState({ categoryRequestList: copyArray })\r\n    // }\r\n    // // Update\r\n    // handleUpdateCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     if (copyArray[index].value == copyArray[index].prevVal) {\r\n    //         copyArray[index].error = 'Enter Different Value';\r\n    //         this.setState({ categoryRequestList: copyArray });\r\n    //     } else {\r\n    //         if (copyArray[index].error == '') {\r\n    //             copyArray[index].label = true;\r\n    //             this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    //         }\r\n    //     }\r\n    // }\r\n    // //  => Add\r\n    // handleAddCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    //     this.addCategory(this)\r\n    // }\r\n    // //  => Delete\r\n    // handleDeleteCategoryRequestClick(index) {\r\n    //     let copyArray = [];\r\n    //     copyArray = Object.assign([], this.state.categoryRequestList);\r\n    //     copyArray.splice(index, 1);\r\n    //     this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n\r\n    handleFilterStrChange(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        let array = [];\r\n        if (e.target.value != '') {\r\n            if (this.state.searchType == 'Category') {\r\n                this.state.categoriesList.filter(function (data) {\r\n                    const value = data.value.toLowerCase()\r\n                    if (value.includes(e.target.value.toLowerCase())) {\r\n                        array.push(data);\r\n                    }\r\n                })\r\n            } else {\r\n                let currentComponent = this\r\n                this.state.subCategoriesList.filter(function (element) {\r\n                    const value = element.value.toLowerCase()\r\n                    if (value.includes(e.target.value.toLowerCase())) {\r\n                        currentComponent.state.categoriesList.filter(function (e) {\r\n                            if (element.category_id == e._id) {\r\n                                array.push(e)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                let a = []\r\n                array.map(x => {\r\n                    if (!a.includes(x)) {\r\n                        a.push(x)\r\n                    }\r\n                })\r\n                array = a\r\n            }\r\n            this.setState({ categoriesList: array })\r\n        } else {\r\n            this.setState({ categoriesList: categoryArray })\r\n        }\r\n    }\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ categoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    async handleUpdateCategoryClick() {\r\n        let copyArray = [];\r\n        let index = this.state.index\r\n        copyArray = Object.assign([], this.state.categoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            const currentComponent = this\r\n            let data = [];\r\n            data = {\r\n                category: { value: copyArray[index].value, label: copyArray[index].value },\r\n            }\r\n            const url = MuhalikConfig.PATH + `/api/categories/category/${copyArray[index]._id}`\r\n            await axios.put(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n            }).then(function (response) {\r\n                copyArray[index].label = copyArray[index].value;\r\n                copyArray[index].prevVal = copyArray[index].value;\r\n                currentComponent.setState({\r\n                    categoriesList: copyArray,\r\n                    showModalMessage: 'Product Category Updated Successfully',\r\n                    showModal: true\r\n                });\r\n                categoryArray = copyArray\r\n                return true;\r\n            }).catch(function (error) {\r\n                try {\r\n                    alert('Error: ', error.response.data.message);\r\n                } catch (err) {\r\n                    console.log('Request Failed:', error)\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    // \r\n    // Sub Category\r\n    handleSubCategoryChange = (e, index) => {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        var obj = {};\r\n        obj['_id'] = copyArray[index]._id;\r\n        obj['category_id'] = copyArray[index].category_id;\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].error = '';\r\n        copyArray[index].label = true;\r\n        this.setState({ subCategoriesList: copyArray })\r\n    }\r\n    //  => Update\r\n    async handleUpdateSubCategoryClick(index) {\r\n        let copyArray = [];\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n        if (copyArray[index].value == copyArray[index].prevVal) {\r\n            copyArray[index].error = 'Enter Different Value';\r\n            this.setState({ categoryRequestList: copyArray });\r\n        } else {\r\n            const currentComponent = this\r\n            let data = [];\r\n            data = {\r\n                category: { value: copyArray[index].value, label: copyArray[index].value },\r\n            }\r\n            const url = MuhalikConfig.PATH + `/api/categories/sub-category/${copyArray[index]._id}`\r\n            await axios.put(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n            }).then(function (response) {\r\n                copyArray[index].label = copyArray[index].value;\r\n                copyArray[index].prevVal = copyArray[index].value;\r\n                currentComponent.setState({\r\n                    categoriesList: copyArray,\r\n                    showModalMessage: 'Product Sub Category Updated Successfully',\r\n                    showModal: true\r\n                });\r\n                categoryArray = copyArray\r\n                return true;\r\n            }).catch(function (error) {\r\n                try {\r\n                    alert('Error: ', error.response.data.message);\r\n                } catch (err) {\r\n                    console.log('Request Failed:', error)\r\n                }\r\n                return false;\r\n            });\r\n\r\n        }\r\n    }\r\n    //  => Delete\r\n    async handleDeleteSubCategoryClick() {\r\n        this.setState({ showConfirmDeleteModal: false })\r\n        let copyArray = [];\r\n        const index = this.state.index\r\n        const currentComponent = this\r\n        copyArray = Object.assign([], this.state.subCategoriesList);\r\n\r\n        const url = MuhalikConfig.PATH + `/api/categories/sub-category/${copyArray[index]._id}`\r\n        await axios.put(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            copyArray.splice(index, 1);\r\n            currentComponent.setState({\r\n                subCategoriesList: copyArray,\r\n                showModalMessage: 'Product Category Deleted',\r\n                showModal: true\r\n            })\r\n            categoryArray = copyArray\r\n        }).catch(function (error) {\r\n            try {\r\n                alert('Error: ', error.response.data.message);\r\n            } catch (err) {\r\n                console.log('Request Failed:', error)\r\n            }\r\n            return false;\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconname={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <ConfirmModal\r\n                    onHide={() => this.setState({ showConfirmDeleteModal: false })}\r\n                    show={this.state.showConfirmDeleteModal}\r\n                    title={'Delete Sub Category'}\r\n                    _id={this.state.delete_category_id}\r\n                    name={this.state.delete_category_name}\r\n                    confirm={this.handleDeleteSubCategoryClick.bind(this)}\r\n                />\r\n\r\n                <TitleRow icon={faListAlt} title={' Admin Dashboard / Product Categories'} />\r\n\r\n\r\n\r\n                {/* Add New Category */}\r\n                <CardAccordion title={'Add New Category'}>\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.categoryValue}\r\n                                    onChange={(e) => this.setState({ categoryValue: e.target.value, categoryError: '' })}\r\n                                    isInvalid={this.state.categoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.categoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                            <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={this.state.subCategoryValue}\r\n                                    onChange={(e) => this.setState({ subCategoryValue: e.target.value, subCategoryError: '' })}\r\n                                    isInvalid={this.state.subCategoryError}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {this.state.subCategoryError}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                            </Button>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n\r\n                </CardAccordion>\r\n\r\n                {/* Add Category Requests */}\r\n                {/* <CardAccordion title={'Add Category Requests'}>\r\n                    {this.state.categoryRequestList.map((element, index) =>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Category Value\"\r\n                                    name=\"sku\"\r\n                                    value={element.value}\r\n                                    disabled={true}\r\n                                />\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                        disabled={element.label}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => element.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                    <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => { element.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                    <div>{element.label ? 'Add' : 'Cancel'}</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n                            <div className=\"mr-auto\"></div>\r\n                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                    <div>Discard</div>\r\n                                </Button>\r\n                            </Form.Group>\r\n\r\n                        </Form.Row>\r\n                    )}\r\n                </CardAccordion> */}\r\n\r\n                {/* All Categories */}\r\n                <CardAccordion title={'All Categories'}>\r\n                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                        <Form.Group as={Col}>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend >\r\n                                    <Form.Control as=\"select\" variant=\"primary\" size='sm'\r\n                                        value={this.state.searchType} onChange={(e) => this.setState({ searchType: e.target.value })}>\r\n                                        <option>Category</option>\r\n                                        <option>Sub Category</option>\r\n                                    </Form.Control>\r\n                                </InputGroup.Prepend>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Search Here\"\r\n                                    name=\"search\"\r\n                                    value={this.state.filterStr}\r\n                                    onChange={(e) => this.handleFilterStrChange(e)}\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                    <hr />\r\n                    {this.state.categoriesList && this.state.categoriesList.map((element, index) =>\r\n                        <div key={index}>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        name=\"sku\"\r\n                                        value={element.value}\r\n                                        disabled={element.label}\r\n                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                        isInvalid={element.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {element.error}\r\n                                    </Form.Control.Feedback>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)}\r\n                                        disabled={element.label ? false : element.error}\r\n                                    >\r\n                                        <div>{element.label ? 'Edit' : 'Update'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                    <Button type=\"submit\" variant={element.label ? \"outline-danger\" : \"outline-primary\"}\r\n                                        size=\"sm\" block style={styles.submit_btn}\r\n                                        onClick={element.label ? null : () => this.handleCancelCategoryClick(index)}\r\n                                        disabled={element.label ? true : false}\r\n                                    >\r\n                                        <div>{element.label ? 'Delete' : 'Cancel'}</div>\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n                            <Form.Row >\r\n                                {this.state.subCategoriesList.map((e, i) => (element._id == e.category_id) ?\r\n                                    <Col lg={6} md={6} sm={6} xs={12} key={e._id}>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={12}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    name=\"sku\"\r\n                                                    value={e.value}\r\n                                                    disabled={e.label}\r\n                                                    onChange={(event) => this.handleSubCategoryChange(event, i)}\r\n                                                    isInvalid={e.error}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {e.error}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                            <div className='mr-auto'></div>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-primary\" : \"outline-success\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={e.label ? () => this.handleEditSubCategoryClick(i) : () => this.handleUpdateSubCategoryClick(i)}\r\n                                                    disabled={e.label ? false : e.error}\r\n                                                >\r\n                                                    <div>{e.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={e.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={\r\n                                                        e.label ?\r\n                                                            () => this.setState({\r\n                                                                showConfirmDeleteModal: true,\r\n                                                                delete_category_id: e._id,\r\n                                                                delete_category_name: e.value,\r\n                                                                index: index\r\n                                                            })\r\n                                                            :\r\n                                                            () => this.handleCancelSubCategoryClick(i)}\r\n                                                >\r\n                                                    <div>{e.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Form.Row>\r\n                                    </Col>\r\n                                    :\r\n                                    null\r\n                                )}\r\n                            </Form.Row>\r\n                            <hr />\r\n                        </div>\r\n                    )}\r\n                </CardAccordion>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}