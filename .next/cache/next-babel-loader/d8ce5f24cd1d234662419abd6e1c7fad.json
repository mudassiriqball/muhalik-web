{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: '',\n      categoryList: []\n    };\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      this.setState({\n        categoryList: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async addCategory() {\n    // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    // this.state.categoryValue\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      showToast: true\n    });\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  handleSubmit() {\n    if (categoryValue == '') {\n      this.setState({\n        error: 'Enter Value First'\n      });\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        error: ''\n      });\n      this.addCategory(this);\n    }\n  }\n\n  render() {\n    // const [isLoading, setIsLoading] = React.useState(false);\n    // const [showToast, setShowToast] = React.useState(false);\n    // const [categoryValue, setCategoryValue] = React.useState('');\n    // const [error, setError] = React.useState('');\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faListAlt,\n      style: styles.title_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \" Product Categories \")), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Add Category Requests\")), __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, this.state.categoryList.map(data => __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data,\n      onChange: e => {\n        this.setState({\n          categoryValue: e.target.value\n        });\n      },\n      isInvalid: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 45\n      }\n    }, error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 41\n      }\n    }, \"Edit\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 41\n      }\n    }, \"Discard\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, \"Add\"))))))), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"Add Category\")), __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: categoryValue,\n      onChange: e => setCategoryValue(e.target.value),\n      isInvalid: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, error))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: handleSubmit,\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, isLoading ? 'Uploading' : 'Add Category', isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 50\n      }\n    }) : null))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faThumbsUp","faThumbsDown","React","Component","ProducCategories","constructor","props","state","isLoading","showToast","categoryValue","error","categoryList","componentDidMount","url","MuhalikConfig","PATH","response","axios","get","setState","data","console","addCategory","handleSubmit","render","styles","title_row","title_fontawesome","title","card","card_body","map","e","target","value","bind","submit_btn","setCategoryValue","borderBottom","padding","color","marginRight","width","height","maxHeight","maxWidth","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\n\r\n\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n            categoryList: [],\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            this.setState({ categoryList: response.data.data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showToast: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // const [isLoading, setIsLoading] = React.useState(false);\r\n        // const [showToast, setShowToast] = React.useState(false);\r\n        // const [categoryValue, setCategoryValue] = React.useState('');\r\n        // const [error, setError] = React.useState('');\r\n\r\n        return (\r\n            <>\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            <div>Add Category Requests</div>\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            {this.state.categoryList.map((data) =>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Category Value\"\r\n                                                name=\"sku\"\r\n                                                value={data}\r\n                                                onChange={(e) => { this.setState({ categoryValue: e.target.value }) }}\r\n                                                isInvalid={error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Edit\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Discard\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Add\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n                {/* Add Categories */}\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            <div>Add Category</div>\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            <Form.Group>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={categoryValue}\r\n                                        onChange={(e) => setCategoryValue(e.target.value)}\r\n                                        isInvalid={error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                <Button type=\"submit\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                    {isLoading ? 'Uploading' : 'Add Category'}\r\n                                    {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}