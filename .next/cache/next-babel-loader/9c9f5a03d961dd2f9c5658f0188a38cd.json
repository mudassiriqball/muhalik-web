{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// export default AuthenticationService;\nimport { reactLocalStorage } from 'reactjs-localstorage'; // import { useRouter } from 'next/router'\n// import Router from 'next/router'\n\nimport * as decode from 'jwt-decode';\nimport Router from 'next/router';\n\nconst AuthenticationService = () => __jsx(\"div\", null);\n\nexport async function saveTokenToStorage(token) {\n  await reactLocalStorage.set('token', token); // const decodedToken = decode(token);\n  // if (decodedToken.data.role == 'customer') {\n  //     Router.push('/index')\n  // } else if (decodedToken.data.role == 'vendor') {\n  //     Router.push('/vendor')\n  // } else if (decodedToken.data.role == 'admin') {\n  //     Router.push('/admin')\n  // } else {\n  //     Router.push('/index')\n  // }\n}\nexport function getTokenFromStorage() {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n    return decodedToken.data;\n  } catch (error) {\n    return null;\n  }\n}\nexport function getUncodededTokenFromStorage() {\n  return reactLocalStorage.get('token');\n}\nexport function removeTokenFromStorage() {\n  try {\n    reactLocalStorage.remove('token');\n    Router.push('/index');\n  } catch (error) {\n    console.log(\"error:\", error);\n  }\n}\nexport function chectAuth(rolee) {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n\n    if (decodedToken.data.role !== rolee) {\n      Router.push('/index');\n    } else {\n      return decodedToken.data.fullName;\n    }\n  } catch (error) {\n    return null;\n  }\n}\nexport default AuthenticationService;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/FYP/muhalikweb/src/sdk/core/authentication-service.js"],"names":["reactLocalStorage","decode","Router","AuthenticationService","saveTokenToStorage","token","set","getTokenFromStorage","get","decodedToken","data","error","getUncodededTokenFromStorage","removeTokenFromStorage","remove","push","console","log","chectAuth","rolee","role","fullName"],"mappings":";;AAAA;AACA,SAASA,iBAAT,QAAkC,sBAAlC,C,CACA;AACA;;AAEA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,qBAAqB,GAAG,MAC1B,kBADJ;;AAIA,OAAO,eAAeC,kBAAf,CAAkCC,KAAlC,EAAyC;AAC5C,QAAML,iBAAiB,CAACM,GAAlB,CAAsB,OAAtB,EAA+BD,KAA/B,CAAN,CAD4C,CAE5C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AAED,OAAO,SAASE,mBAAT,GAA+B;AAClC,MAAI;AACA,UAAMF,KAAK,GAAGL,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAd;AACA,UAAMC,YAAY,GAAGR,MAAM,CAACI,KAAD,CAA3B;AACA,WAAOI,YAAY,CAACC,IAApB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,WAAO,IAAP;AACH;AACJ;AAED,OAAO,SAASC,4BAAT,GAAwC;AAC3C,SAAOZ,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAP;AACH;AAED,OAAO,SAASK,sBAAT,GAAkC;AACrC,MAAG;AACHb,IAAAA,iBAAiB,CAACc,MAAlB,CAAyB,OAAzB;AACAZ,IAAAA,MAAM,CAACa,IAAP,CAAY,QAAZ;AACC,GAHD,CAGC,OAAMJ,KAAN,EAAY;AACTK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBN,KAAtB;AACH;AACJ;AAED,OAAO,SAASO,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,MAAI;AACA,UAAMd,KAAK,GAAGL,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAd;AACA,UAAMC,YAAY,GAAGR,MAAM,CAACI,KAAD,CAA3B;;AACA,QAAII,YAAY,CAACC,IAAb,CAAkBU,IAAlB,KAA2BD,KAA/B,EAAsC;AAClCjB,MAAAA,MAAM,CAACa,IAAP,CAAY,QAAZ;AACH,KAFD,MAEO;AACH,aAAON,YAAY,CAACC,IAAb,CAAkBW,QAAzB;AACH;AACJ,GARD,CAQE,OAAOV,KAAP,EAAc;AACZ,WAAO,IAAP;AACH;AACJ;AAED,eAAeR,qBAAf","sourcesContent":["// export default AuthenticationService;\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n// import { useRouter } from 'next/router'\r\n// import Router from 'next/router'\r\n\r\nimport * as decode from 'jwt-decode'\r\nimport Router from 'next/router'\r\n\r\nconst AuthenticationService = () => (\r\n    <div></div>\r\n)\r\n\r\nexport async function saveTokenToStorage(token) {\r\n    await reactLocalStorage.set('token', token);\r\n    // const decodedToken = decode(token);\r\n\r\n    // if (decodedToken.data.role == 'customer') {\r\n    //     Router.push('/index')\r\n    // } else if (decodedToken.data.role == 'vendor') {\r\n    //     Router.push('/vendor')\r\n    // } else if (decodedToken.data.role == 'admin') {\r\n    //     Router.push('/admin')\r\n    // } else {\r\n    //     Router.push('/index')\r\n    // }\r\n}\r\n\r\nexport function getTokenFromStorage() {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        return decodedToken.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getUncodededTokenFromStorage() {\r\n    return reactLocalStorage.get('token');\r\n}\r\n\r\nexport function removeTokenFromStorage() {\r\n    try{\r\n    reactLocalStorage.remove('token');\r\n    Router.push('/index');\r\n    }catch(error){\r\n        console.log(\"error:\", error)\r\n    }\r\n}\r\n\r\nexport function chectAuth(rolee) {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        if (decodedToken.data.role !== rolee) {\r\n            Router.push('/index')\r\n        } else {\r\n            return decodedToken.data.fullName;\r\n        }\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default AuthenticationService;"]},"metadata":{},"sourceType":"module"}