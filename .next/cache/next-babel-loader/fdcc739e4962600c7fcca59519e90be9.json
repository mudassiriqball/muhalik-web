{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Dashboard from './components/vendor/dashboard/dashboard';\nimport DashboardSideDrawer from './components/vendor/dashboard/dashboard-side-drawer';\nimport GlobalStyleSheet from '../styleSheet';\nimport { chectAuth, removeTokenFromStorage, getTokenFromStorage } from '../sdk/core/authentication-service';\nimport MuhalikConfig from '../sdk/muhalik.config';\n\nconst BackDrop = props => __jsx(\"div\", {\n  className: \"jsx-3404600223\"\n}, __jsx(\"div\", {\n  onClick: props.click,\n  className: \"jsx-3404600223\"\n}), __jsx(_JSXStyle, {\n  id: \"3404600223\"\n}, [\".jsx-3404600223{position:fixed;width:100%;height:100%;top:0;left:0;background:rgba(0,0,0,0.3);z-index:100;}\"]));\n\nclass Vendor extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"drawerToggleClickHandler\", () => {\n      this.setState(prevState => {\n        return {\n          sideDrawerOpen: !prevState.sideDrawerOpen\n        };\n      });\n    });\n\n    _defineProperty(this, \"ShowWrapperClickHandler\", () => {\n      this.setState(prevState => {\n        return {\n          showWrapper: !prevState.showWrapper\n        };\n      });\n    });\n\n    _defineProperty(this, \"backdropClickHandler\", () => {\n      this.setState({\n        sideDrawerOpen: false\n      });\n    });\n\n    this.authUser();\n    this.state = {\n      sideDrawerOpen: false,\n      showWrapper: true,\n      categories_list: [],\n      sub_categories_list: [],\n      fields_list: [],\n      field_requests_list: [],\n      token: '',\n      user_name: ''\n    };\n  }\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/categories/categories';\n\n    const _token = await getTokenFromStorage();\n\n    this.setState({\n      token: _token\n    });\n    const currentComponent = this;\n    await axios.get(url).then(response => {\n      currentComponent.setState({\n        categories_list: response.data.category.docs,\n        sub_categories_list: response.data.sub_category.docs\n      });\n    }).catch(error => {\n      console.log('Caterories Fetchig Error: ', error);\n    });\n    const url_1 = MuhalikConfig.PATH + '/api/categories/fields';\n    await axios.get(url_1).then(function (response) {\n      currentComponent.setState({\n        fields_list: response.data.data.docs,\n        field_requests_list: response.data.data.docs\n      });\n    }).catch(function (error) {\n      alert('F error: ', error);\n    });\n  }\n\n  async authUser() {\n    this.setState({\n      user_name: await chectAuth('vendor')\n    });\n  }\n\n  logout() {\n    removeTokenFromStorage();\n  }\n\n  render() {\n    let backdrop;\n\n    if (this.state.sideDrawerOpen) {\n      backdrop = __jsx(BackDrop, {\n        click: this.backdropClickHandler\n      });\n    }\n\n    return __jsx(\"div\", {\n      style: styles.body\n    }, __jsx(Dashboard, {\n      categories_list: this.state.categories_list,\n      sub_categories_list: this.state.sub_categories_list,\n      field_requests_list: this.state.field_requests_list,\n      fields_list: this.state.fields_list,\n      token: this.state.token,\n      user_name: this.state.user_name,\n      show: this.state.showWrapper,\n      drawerClickHandler: this.drawerToggleClickHandler,\n      wrapperBtnClickHandler: this.ShowWrapperClickHandler,\n      logoutClickHandler: this.logout\n    }), __jsx(DashboardSideDrawer, {\n      categories_list: this.state.categories_list,\n      sub_categories_list: this.state.sub_categories_list,\n      field_requests_list: this.state.field_requests_list,\n      fields_list: this.state.fields_list,\n      token: this.state.token,\n      user_name: this.state.user_name,\n      show: this.state.sideDrawerOpen,\n      click: this.backdropClickHandler,\n      logoutClickHandler: this.logout\n    }), backdrop);\n  }\n\n}\n\nconst styles = {\n  body: {\n    background: `${GlobalStyleSheet.body_color}`,\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    minHeight: '100vh'\n  }\n};\nexport default Vendor;","map":null,"metadata":{},"sourceType":"module"}