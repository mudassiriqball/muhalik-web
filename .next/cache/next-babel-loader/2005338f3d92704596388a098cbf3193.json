{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\n\nvar ProducCategories = /*#__PURE__*/function (_Component) {\n  _inherits(ProducCategories, _Component);\n\n  var _super = _createSuper(ProducCategories);\n\n  function ProducCategories(props) {\n    var _this;\n\n    _classCallCheck(this, ProducCategories);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: '',\n      categoryList: []\n    };\n    return _this;\n  } // Getting Product Categories from DB\n\n\n  _createClass(ProducCategories, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var url, response;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(url));\n\n            case 4:\n              response = _context.sent;\n              this.setState({\n                categoryList: response.data.data\n              });\n              console.log('list:', response);\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[1, 9]], Promise);\n    }\n  }, {\n    key: \"addCategory\",\n    value: function addCategory() {\n      return _regeneratorRuntime.async(function addCategory$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // const url = MuhalikConfig.PATH + '/api/products/add';\n              // await axios.post(url, {\n              // this.state.categoryValue\n              // }, {\n              //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n              // }).then(function (response) {\n              this.setState({\n                isLoading: true\n              });\n              this.setState({\n                showToast: true\n              });\n              return _context2.abrupt(\"return\", true);\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      if (categoryValue == '') {\n        this.setState({\n          error: 'Enter Value First'\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.setState({\n          error: ''\n        });\n        this.addCategory(this);\n      }\n    }\n  }, {\n    key: \"handleEditCategoryRequest\",\n    value: function handleEditCategoryRequest() {}\n  }, {\n    key: \"handleAddCategoryRequest\",\n    value: function handleAddCategoryRequest(index) {\n      var copyArray = Object.assign([], this.state.categoryList);\n      copyArray.splice(index, 1);\n      this.setState({\n        categoryList: copyArray\n      });\n    }\n  }, {\n    key: \"handleDeleteCategoryRequest\",\n    value: function handleDeleteCategoryRequest(index) {\n      var copyArray = Object.assign([], this.state.categoryList);\n      copyArray.splice(index, 1);\n      this.setState({\n        categoryList: copyArray\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, __jsx(Row, {\n        style: styles.title_row,\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faListAlt,\n        style: styles.title_fontawesome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"mr-auto\",\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, \" Product Categories \")), __jsx(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion, {\n        style: {\n          width: '100%'\n        },\n        defaultActiveKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, __jsx(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, \"Add Category Requests\"), __jsx(Accordion.Toggle, {\n        as: Button,\n        size: \"sm\",\n        eventKey: \"0\",\n        style: {\n          \"float\": 'right',\n          background: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 33\n        }\n      }, __jsx(FontAwesomeIcon, {\n        size: \"xs\",\n        icon: faSlidersH,\n        style: styles.accordin_fontawesome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }\n      }))), __jsx(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, __jsx(Card.Body, {\n        style: styles.card_body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, this.state.categoryList.map(function (data, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 41\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 45\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 49\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.label,\n          onChange: function onChange(e) {\n            _this2.setState({\n              categoryValue: e.target.value\n            });\n          },\n          isInvalid: _this2.state.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 53\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 53\n          }\n        }, _this2.state.error))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleEditCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 53\n          }\n        }, \"Edit\"))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleAddCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 53\n          }\n        }, \"Add\"))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 45\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleDeleteCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 53\n          }\n        }, \"Discard\"))));\n      })))))), __jsx(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion, {\n        style: {\n          width: '100%'\n        },\n        defaultActiveKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, __jsx(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }\n      }, \"Add New Category \"), __jsx(Accordion.Toggle, {\n        as: Button,\n        size: \"sm\",\n        eventKey: \"0\",\n        style: {\n          \"float\": 'right',\n          background: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 33\n        }\n      }, __jsx(FontAwesomeIcon, {\n        size: \"xs\",\n        icon: faSlidersH,\n        style: styles.accordin_fontawesome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 37\n        }\n      }))), __jsx(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 29\n        }\n      }, __jsx(Card.Body, {\n        style: styles.card_body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }\n      }, __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 37\n        }\n      }, __jsx(InputGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 41\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            categoryValue: e.target.value\n          });\n        },\n        isInvalid: this.state.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 45\n        }\n      }), __jsx(Form.Control.Feedback, {\n        type: \"invalid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 45\n        }\n      }, this.state.error))), __jsx(Form.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 37\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onClick: this.handleSubmit.bind(this),\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 41\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 69\n        }\n      }) : null))))))), __jsx(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, __jsx(Accordion, {\n        style: {\n          width: '100%'\n        },\n        defaultActiveKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }\n      }, __jsx(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 33\n        }\n      }, \"Add Category Requests\"), __jsx(Accordion.Toggle, {\n        as: Button,\n        size: \"sm\",\n        eventKey: \"0\",\n        style: {\n          \"float\": 'right',\n          background: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 33\n        }\n      }, __jsx(FontAwesomeIcon, {\n        size: \"xs\",\n        icon: faSlidersH,\n        style: styles.accordin_fontawesome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 37\n        }\n      }))), __jsx(Accordion.Collapse, {\n        eventKey: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 29\n        }\n      }, __jsx(Card.Body, {\n        style: styles.card_body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 33\n        }\n      }, this.state.categoryList.map(function (data, index) {\n        return __jsx(Form.Row, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 41\n          }\n        }, __jsx(Form.Group, {\n          as: Col,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 45\n          }\n        }, __jsx(InputGroup, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 49\n          }\n        }, __jsx(Form.Control, {\n          type: \"text\",\n          size: \"sm\",\n          placeholder: \"Enter Category Value\",\n          name: \"sku\",\n          value: data.label,\n          onChange: function onChange(e) {\n            _this2.setState({\n              categoryValue: e.target.value\n            });\n          },\n          isInvalid: _this2.state.error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 53\n          }\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 53\n          }\n        }, _this2.state.error))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleEditCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 53\n          }\n        }, \"Edit\"))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-primary\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleAddCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 53\n          }\n        }, \"Add\"))), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 45\n          }\n        }), __jsx(Form.Group, {\n          as: Col,\n          lg: \"auto\",\n          md: \"auto\",\n          sm: \"auto\",\n          xs: 3,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 45\n          }\n        }, __jsx(Button, {\n          type: \"submit\",\n          variant: \"outline-danger\",\n          size: \"sm\",\n          onClick: function onClick() {\n            return _this2.handleDeleteCategoryRequest(index);\n          },\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 49\n          }\n        }, __jsx(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 53\n          }\n        }, \"Discard\"))));\n      })))))));\n    }\n  }]);\n\n  return ProducCategories;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","ProducCategories","props","state","isLoading","showToast","categoryValue","error","categoryList","url","PATH","get","response","setState","data","console","log","addCategory","index","copyArray","Object","assign","splice","styles","title_row","title_fontawesome","title","width","card","background","accordin_fontawesome","card_body","map","label","e","target","value","handleEditCategoryRequest","submit_btn","handleAddCategoryRequest","handleDeleteCategoryRequest","handleSubmit","bind","borderBottom","padding","color","marginRight","height","maxHeight","maxWidth","margin","textAlign","fontSize","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\n\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n            categoryList: [],\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            this.setState({ categoryList: response.data.data });\r\n            console.log('list:', response)\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showToast: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n    handleEditCategoryRequest() {\r\n\r\n    }\r\n    handleAddCategoryRequest(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n    handleDeleteCategoryRequest(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Category Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.categoryList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Category Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.label}\r\n                                                        onChange={(e) => { this.setState({ categoryValue: e.target.value }) }}\r\n                                                        isInvalid={this.state.error}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={() => this.handleEditCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Edit</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={() => this.handleAddCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Add</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                            </Form.Group>\r\n                                            {/* <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={0}>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={0}>\r\n                                            </Form.Group> */}\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={() => this.handleDeleteCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n                {/* Add Categories */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add New Category </Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Category Value\"\r\n                                                name=\"sku\"\r\n                                                value={this.state.categoryValue}\r\n                                                onChange={(e) => this.setState({ categoryValue: e.target.value })}\r\n                                                isInvalid={this.state.error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {this.state.error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n                {/* All Categories */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Category Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.categoryList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Category Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.label}\r\n                                                        onChange={(e) => { this.setState({ categoryValue: e.target.value }) }}\r\n                                                        isInvalid={this.state.error}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={() => this.handleEditCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Edit</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={() => this.handleAddCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Add</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                            </Form.Group>\r\n                                            {/* <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={0}>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={0}>\r\n                                            </Form.Group> */}\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs={3}>\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={() => this.handleDeleteCategoryRequest(index)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}