{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\orders.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport axios from 'axios';\nvar options = [{\n  value: 'chocolat',\n  label: 'Chocolat'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\n\nvar Orders = /*#__PURE__*/function (_Component) {\n  _inherits(Orders, _Component);\n\n  var _super = _createSuper(Orders);\n\n  function Orders() {\n    var _this;\n\n    _classCallCheck(this, Orders);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(Orders, [{\n    key: \"render\",\n    value: function render() {\n      function uploadFile() {\n        var fileToUpload = document.querySelector('input[type=file]').files[0];\n        var config = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        var fd = [];\n        fd.append('name', 'image');\n        fd.append('file', fileToUpload);\n        axios.post('http://localhost:3000/uploadFile', fd, config).then(function (response) {\n          console.log(\"Image posted successfully: \", response);\n          showOutput(\"Image posted successfully: \" + response.data);\n        })[\"catch\"](function (err) {\n          console.error(\"Image post failed: \", err);\n          showOutput(\"Image post failed!\");\n        });\n      }\n\n      function showOutput(html) {\n        document.getElementById(\"output\").innerHTML = html;\n      }\n\n      return __jsx(React.Fragment, null, __jsx(\"input\", {\n        type: \"file\",\n        onchange: \"uploadFile()\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), __jsx(\"p\", {\n        id: \"output\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      })) // <Select\n      //   isMulti\n      //   name=\"colors\"\n      //   options={options}\n      //   className=\"basic-multi-select\"\n      //   classNamePrefix=\"select\"\n      // />\n      ;\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/orders.js"],"names":["React","Component","Select","axios","options","value","label","Orders","uploadFile","fileToUpload","document","querySelector","files","config","headers","fd","append","post","then","response","console","log","showOutput","data","err","error","html","getElementById","innerHTML"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,IAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,UAAT;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CADc,EAEd;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFc,EAGd;AAAED,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAHc,CAAhB;;IAOMC,M;;;;;;;;;;;;;;;;4DACI,E;;;;;;;6BACC;AACP,eAASC,UAAT,GAAsB;AACpB,YAAIC,YAAY,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,EAA2CC,KAA3C,CAAiD,CAAjD,CAAnB;AACA,YAAIC,MAAM,GAAG;AACXC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADE,SAAb;AAMA,YAAIC,EAAE,GAAG,EAAT;AACAA,QAAAA,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkB,OAAlB;AACAD,QAAAA,EAAE,CAACC,MAAH,CAAU,MAAV,EAAkBP,YAAlB;AAEAN,QAAAA,KAAK,CAACc,IAAN,CAAW,kCAAX,EAA+CF,EAA/C,EAAmDF,MAAnD,EACGK,IADH,CACQ,UAACC,QAAD,EAAc;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,QAA3C;AACAG,UAAAA,UAAU,CAAC,gCAAgCH,QAAQ,CAACI,IAA1C,CAAV;AACD,SAJH,WAKS,UAAAC,GAAG,EAAI;AACZJ,UAAAA,OAAO,CAACK,KAAR,CAAc,qBAAd,EAAqCD,GAArC;AACAF,UAAAA,UAAU,CAAC,oBAAD,CAAV;AACD,SARH;AASD;;AAED,eAASA,UAAT,CAAoBI,IAApB,EAA0B;AACxBhB,QAAAA,QAAQ,CAACiB,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8CF,IAA9C;AACD;;AACD,aACE,4BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAG,QAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CAKE;AACA;AACA;AACA;AACA;AACA;AACA;AAXF;AAaD;;;;EA1CkBzB,S;;AA6CrB,eAAeM,MAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Select from 'react-select';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst options = [\r\n  { value: 'chocolat', label: 'Chocolat' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n]\r\n\r\n\r\nclass Orders extends Component {\r\n  state = {}\r\n  render() {\r\n    function uploadFile() {\r\n      var fileToUpload = document.querySelector('input[type=file]').files[0];\r\n      let config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      }\r\n\r\n      let fd = []\r\n      fd.append('name', 'image')\r\n      fd.append('file', fileToUpload)\r\n\r\n      axios.post('http://localhost:3000/uploadFile', fd, config)\r\n        .then((response) => {\r\n          console.log(\"Image posted successfully: \", response);\r\n          showOutput(\"Image posted successfully: \" + response.data);\r\n        })\r\n        .catch(err => {\r\n          console.error(\"Image post failed: \", err)\r\n          showOutput(\"Image post failed!\");\r\n        })\r\n    }\r\n\r\n    function showOutput(html) {\r\n      document.getElementById(\"output\").innerHTML = html;\r\n    }\r\n    return (\r\n      <>\r\n        <input type=\"file\" onchange=\"uploadFile()\" />\r\n        <p id=\"output\"></p>\r\n      </>\r\n      // <Select\r\n      //   isMulti\r\n      //   name=\"colors\"\r\n      //   options={options}\r\n      //   className=\"basic-multi-select\"\r\n      //   classNamePrefix=\"select\"\r\n      // />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}