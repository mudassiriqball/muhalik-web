{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nvar groupStyles = {\n  border: \"2px dotted yellow\",\n  borderRadius: '5px',\n  background: '#f2fcff'\n};\n\nvar Group = function Group(props) {\n  return __jsx(\"div\", {\n    style: groupStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(components.Group, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar groupedOptions = [// A\n{\n  value: 'Apricot',\n  label: 'Apricot'\n}, {\n  value: 'Aquamarine',\n  label: 'Aquamarine'\n}, // B\n{\n  value: 'Black',\n  label: 'Black'\n}, {\n  value: 'Blue',\n  label: 'Blue'\n}, {\n  value: 'Bronze',\n  label: 'Bronze'\n}, {\n  value: 'Baby-Blue',\n  label: 'Baby-Blue'\n}, {\n  value: 'Blue-Green',\n  label: 'Blue-Green'\n}, {\n  value: 'Blue-Violet',\n  label: 'Blue-Violet'\n}, // C\n{\n  value: 'Chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'Coffee',\n  label: 'Coffee'\n}, {\n  value: 'Cyan',\n  label: 'Cyan'\n}, // D\n{\n  value: 'Desert-Sand',\n  label: 'Desert-Sand'\n}, // G\n{\n  value: 'Gray',\n  label: 'Gray'\n}, {\n  value: 'Green',\n  label: 'Green'\n}, // I\n{\n  value: 'Indigo',\n  label: 'Indigo'\n}, // L\n{\n  value: 'Lime',\n  label: 'Lime'\n}, // M\n{\n  value: 'Magenta',\n  label: 'Magenta'\n}, {\n  value: 'Maroon',\n  label: 'Maroon'\n}, // N\n{\n  value: 'Navy',\n  label: 'Navy'\n}, {\n  value: 'Navy-Blue',\n  label: 'Navy-Blue'\n}, // O\n{\n  value: 'Orange',\n  label: 'Orange'\n}, {\n  value: 'Olive',\n  label: 'Olive'\n}, // P\n{\n  value: 'Pink',\n  label: 'Pink'\n}, {\n  value: 'Peach',\n  label: 'Peach'\n}, {\n  value: 'Purple',\n  label: 'Purple'\n}, // R\n{\n  value: 'Red',\n  label: 'Chocolate'\n}, {\n  value: 'Rose',\n  label: 'Rose'\n}, {\n  value: 'Red-Violet',\n  label: 'Red-Violet'\n}, // S\n{\n  value: 'Silver',\n  label: 'Silver'\n}, {\n  value: 'Sky-Blue',\n  label: 'Sky-Blue'\n}, // T\n{\n  value: 'Tan',\n  label: 'Tan'\n}, {\n  value: 'Teal',\n  label: 'Teal'\n}, {\n  value: 'Turquoise',\n  label: 'Turquoise'\n}, // V\n{\n  value: 'Violet',\n  label: 'Violet'\n}, // W\n{\n  value: 'White',\n  label: 'White'\n}, // Y\n{\n  value: 'Yellow',\n  label: 'Yellow'\n}];\n\nvar CustomFields = function CustomFields(props) {\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Header, {\n    style: styles.card_header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Custome Fields\"), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      \"float\": 'right',\n      background: 'none'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      background: 'lightGray',\n      margin: '0.5% 1%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map(function (data, index) {\n    return __jsx(Form.Row, {\n      style: {\n        padding: '1% 2%'\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 37\n      }\n    }, __jsx(Select, {\n      options: groupedOptions,\n      components: {\n        Group: Group\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 41\n      }\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 37\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Value\",\n      name: \"sku\",\n      value: data.customFieldValue,\n      onChange: function onChange() {\n        return data.fieldValue;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 45\n      }\n    }), __jsx(Button, {\n      variant: \"outline-primary\",\n      size: \"sm\",\n      style: {\n        marginLeft: '1%'\n      },\n      onClick: function onClick() {\n        return props[\"delete\"](index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 45\n      }\n    }, \" delete\"))));\n  })), __jsx(Form.Row, {\n    style: {\n      margin: '0.5% 1%',\n      padding: '1% 2%',\n      background: 'lightGray'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, \"Field Name\"), __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: props.name,\n    onChange: props.fieldNameHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }, __jsx(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 37\n    }\n  }, \"Select\"), __jsx(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, \"Aaaa\"), __jsx(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, \"Bbb\"), __jsx(\"option\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 37\n    }\n  }, \"Ccc\"))), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.fieldValueHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 37\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    style: {\n      margin: '2% 0px'\n    },\n    onClick: props.addFieldHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"Add Field\"))))));\n};\n\nvar styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  label: {\n    fontSize: '13px'\n  },\n  variations_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["Accordion","Form","InputGroup","Col","Button","Row","Card","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","groupStyles","border","borderRadius","background","Group","props","groupedOptions","value","label","CustomFields","width","styles","card","card_header","variations_fontawesome","margin","customFieldsArray","map","data","index","padding","customFieldValue","fieldValue","marginLeft","name","fieldNameHandler","fieldValueHandler","isVariableProduct","color","error","addFieldHandler","row","alignItems","fontSize","admin_primry_color","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nconst groupStyles = {\r\n    border: `2px dotted yellow`,\r\n    borderRadius: '5px',\r\n    background: '#f2fcff',\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\nconst groupedOptions = [\r\n    // A\r\n    { value: 'Apricot', label: 'Apricot' },\r\n    { value: 'Aquamarine', label: 'Aquamarine' },\r\n    // B\r\n    { value: 'Black', label: 'Black' },\r\n    { value: 'Blue', label: 'Blue' },\r\n    { value: 'Bronze', label: 'Bronze' },\r\n    { value: 'Baby-Blue', label: 'Baby-Blue' },\r\n    { value: 'Blue-Green', label: 'Blue-Green' },\r\n    { value: 'Blue-Violet', label: 'Blue-Violet' },\r\n    // C\r\n    { value: 'Chocolate', label: 'Chocolate' },\r\n    { value: 'Coffee', label: 'Coffee' },\r\n    { value: 'Cyan', label: 'Cyan' },\r\n    // D\r\n    { value: 'Desert-Sand', label: 'Desert-Sand' },\r\n    // G\r\n    { value: 'Gray', label: 'Gray' },\r\n    { value: 'Green', label: 'Green' },\r\n    // I\r\n    { value: 'Indigo', label: 'Indigo' },\r\n    // L\r\n    { value: 'Lime', label: 'Lime' },\r\n    // M\r\n    { value: 'Magenta', label: 'Magenta' },\r\n    { value: 'Maroon', label: 'Maroon' },\r\n    // N\r\n    { value: 'Navy', label: 'Navy' },\r\n    { value: 'Navy-Blue', label: 'Navy-Blue' },\r\n    // O\r\n    { value: 'Orange', label: 'Orange' },\r\n    { value: 'Olive', label: 'Olive' },\r\n    // P\r\n    { value: 'Pink', label: 'Pink' },\r\n    { value: 'Peach', label: 'Peach' },\r\n    { value: 'Purple', label: 'Purple' },\r\n    // R\r\n    { value: 'Red', label: 'Chocolate' },\r\n    { value: 'Rose', label: 'Rose' },\r\n    { value: 'Red-Violet', label: 'Red-Violet' },\r\n    // S\r\n    { value: 'Silver', label: 'Silver' },\r\n    { value: 'Sky-Blue', label: 'Sky-Blue' },\r\n    // T\r\n    { value: 'Tan', label: 'Tan' },\r\n    { value: 'Teal', label: 'Teal' },\r\n    { value: 'Turquoise', label: 'Turquoise' },\r\n    // V\r\n    { value: 'Violet', label: 'Violet' },\r\n    // W\r\n    { value: 'White', label: 'White' },\r\n    // Y\r\n    { value: 'Yellow', label: 'Yellow' },\r\n]\r\n\r\nconst CustomFields = props => {\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        {/* <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.fieldName}\r\n                                            onChange={() => data.customFieldName}\r\n                                        >\r\n                                            <option>Aaaa</option>\r\n                                            <option>Bbb</option>\r\n                                            <option>Ccc</option>\r\n                                        </Form.Control> */}\r\n                                        <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        />\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.customFieldValue}\r\n                                                onChange={() => data.fieldValue}\r\n                                            />\r\n                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                        <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                            <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    size=\"sm\"\r\n                                    value={props.name}\r\n                                    onChange={props.fieldNameHandler}\r\n                                >\r\n                                    <option>Select</option>\r\n                                    <option>Aaaa</option>\r\n                                    <option>Bbb</option>\r\n                                    <option>Ccc</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Value\"\r\n                                        name=\"sku\"\r\n                                        value={props.value}\r\n                                        onChange={props.fieldValueHandler}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Label style={styles.label}>\r\n                                {/* <span>For Multiple Values add | between values</span> */}\r\n                                {props.isVariableProduct ?\r\n                                    <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                    : null\r\n                                }\r\n                                <span style={{ color: 'red' }}>\r\n                                    {props.error}</span>\r\n                            </Form.Label>\r\n                            <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                onClick={props.addFieldHandler}>Add Field</Button>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}