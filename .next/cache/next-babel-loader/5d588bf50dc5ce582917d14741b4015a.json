{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\all-products-contents\\\\edit-product.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\nimport Spinner from 'react-spinkit';\nimport './App.css';\n\nclass EditProduct extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"fileChangedHandler\", event => {\n      const file = event.target.files[0];\n      this.setState({\n        selectedFile: file\n      });\n    });\n\n    _defineProperty(this, \"uploadImage\", event => {\n      event.preventDefault();\n      if (!this.state.selectedFile) return;\n      this.setState({\n        loading: true\n      });\n      const formData = new FormData();\n      formData.append('image', this.state.selectedFile, this.state.selectedFile.name);\n      axios.post('http://localhost:5000/upload', formData).then(({\n        data\n      }) => {\n        this.setState({\n          loading: false\n        });\n      });\n    });\n\n    this.state = {\n      images: [],\n      selectedFile: null,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    axios.get('http://localhost:5000').then(({\n      data\n    }) => {\n      this.setState({\n        images: [...data, ...this.state.images],\n        loading: false\n      });\n    });\n    const pusher = new Pusher('<your app key>', {\n      cluster: '<your app cluster>',\n      encrypted: true\n    });\n    const channel = pusher.subscribe('gallery');\n    channel.bind('upload', data => {\n      this.setState({\n        images: [data.image, ...this.state.images]\n      });\n    });\n  }\n\n  render() {\n    const image = (url, index) => __jsx(\"img\", {\n      alt: \"\",\n      className: \"photo\",\n      key: `image-${index} }`,\n      src: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\n    return __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(\"h1\", {\n      className: \"App-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, \"Live Photo Feed\"), __jsx(\"form\", {\n      method: \"post\",\n      onSubmit: this.uploadImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, __jsx(\"label\", {\n      className: \"label\",\n      htmlFor: \"gallery-image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Choose an image to upload\"), __jsx(\"input\", {\n      type: \"file\",\n      onChange: this.fileChangedHandler,\n      id: \"gallery-image\",\n      accept: \".jpg, .jpeg, .png\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), __jsx(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Upload!\")), __jsx(\"div\", {\n      className: \"loading-indicator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, this.state.loading ? __jsx(Spinner, {\n      name: \"spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 33\n      }\n    }) : ''), __jsx(\"div\", {\n      className: \"gallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, images));\n  }\n\n}\n\nexport default EditProduct;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products-contents/edit-product.js"],"names":["React","Component","axios","Pusher","Spinner","EditProduct","constructor","event","file","target","files","setState","selectedFile","preventDefault","state","loading","formData","FormData","append","name","post","then","data","images","componentDidMount","get","pusher","cluster","encrypted","channel","subscribe","bind","image","render","url","index","map","e","i","secure_url","uploadImage","fileChangedHandler"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\nimport Spinner from 'react-spinkit';\r\nimport './App.css';\r\n\r\nclass EditProduct extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      images: [],\r\n      selectedFile: null,\r\n      loading: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    axios.get('http://localhost:5000').then(({ data }) => {\r\n      this.setState({\r\n        images: [...data, ...this.state.images],\r\n        loading: false,\r\n      });\r\n    });\r\n\r\n    const pusher = new Pusher('<your app key>', {\r\n      cluster: '<your app cluster>',\r\n      encrypted: true,\r\n    });\r\n\r\n    const channel = pusher.subscribe('gallery');\r\n    channel.bind('upload', data => {\r\n      this.setState({\r\n        images: [data.image, ...this.state.images],\r\n      });\r\n    });\r\n  }\r\n\r\n  fileChangedHandler = event => {\r\n    const file = event.target.files[0];\r\n    this.setState({ selectedFile: file });\r\n  };\r\n\r\n  uploadImage = event => {\r\n    event.preventDefault();\r\n\r\n    if (!this.state.selectedFile) return;\r\n\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    const formData = new FormData();\r\n    formData.append(\r\n      'image',\r\n      this.state.selectedFile,\r\n      this.state.selectedFile.name\r\n    );\r\n\r\n    axios.post('http://localhost:5000/upload', formData).then(({ data }) => {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const image = (url, index) => (\r\n      <img alt=\"\" className=\"photo\" key={`image-${index} }`} src={url} />\r\n    );\r\n\r\n    const images = this.state.images.map((e, i) => image(e.secure_url, i));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"App-title\">Live Photo Feed</h1>\r\n\r\n        <form method=\"post\" onSubmit={this.uploadImage}>\r\n          <label className=\"label\" htmlFor=\"gallery-image\">\r\n            Choose an image to upload\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            onChange={this.fileChangedHandler}\r\n            id=\"gallery-image\"\r\n            accept=\".jpg, .jpeg, .png\"\r\n          />\r\n          <button type=\"submit\">Upload!</button>\r\n        </form>\r\n\r\n        <div className=\"loading-indicator\">\r\n          {this.state.loading ? <Spinner name=\"spinner\" /> : ''}\r\n        </div>\r\n\r\n        <div className=\"gallery\">{images}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}