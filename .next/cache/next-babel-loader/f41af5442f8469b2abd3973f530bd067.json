{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\overlay-popover.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport React, { Component } from 'react';\nconst UpdatingPopover = React.forwardRef((_ref, ref) => {\n  let {\n    popper,\n    children,\n    show: _\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"popper\", \"children\", \"show\"]);\n\n  useEffect(() => {\n    console.log('updating!');\n    popper.scheduleUpdate();\n  }, [children, popper]);\n  return __jsx(Popover, _extends({\n    ref: ref,\n    content: true\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }), children);\n});\nconst longContent = `\n  Very long\n  Multiline content\n  that is engaging and what-not\n`;\nconst shortContent = 'Short and sweet!';\n\nfunction OverlayPopover(props) {\n  const [content, setContent] = React.useState(shortContent);\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      setContent(content === shortContent ? longContent : shortContent);\n    }, 3000);\n    return () => clearInterval(timerId);\n  });\n  return __jsx(OverlayTrigger, {\n    trigger: \"click\",\n    overlay: __jsx(UpdatingPopover, {\n      id: \"popover-contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nexport default OverlayPopover;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/overlay-popover.js"],"names":["OverlayTrigger","React","Component","UpdatingPopover","forwardRef","ref","popper","children","show","_","props","useEffect","console","log","scheduleUpdate","longContent","shortContent","OverlayPopover","content","setContent","useState","timerId","setInterval","clearInterval"],"mappings":";;;;;;;;;AAAA,SAASA,cAAT,QAA+B,iBAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,eAAe,GAAGF,KAAK,CAACG,UAAN,CACpB,OAA0CC,GAA1C,KAAkD;AAAA,MAAjD;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,QAAV;AAAoBC,IAAAA,IAAI,EAAEC;AAA1B,GAAiD;AAAA,MAAjBC,KAAiB;;AAC9CC,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAP,IAAAA,MAAM,CAACQ,cAAP;AACH,GAHQ,EAGN,CAACP,QAAD,EAAWD,MAAX,CAHM,CAAT;AAKA,SACI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAED,GAAd;AAAmB,IAAA,OAAO;AAA1B,KAA+BK,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKH,QADL,CADJ;AAKH,CAZmB,CAAxB;AAcA,MAAMQ,WAAW,GAAI;;;;CAArB;AAKA,MAAMC,YAAY,GAAG,kBAArB;;AAEA,SAASC,cAAT,CAAwBP,KAAxB,EAA+B;AAC3B,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBlB,KAAK,CAACmB,QAAN,CAAeJ,YAAf,CAA9B;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC9BH,MAAAA,UAAU,CAACD,OAAO,KAAKF,YAAZ,GAA2BD,WAA3B,GAAyCC,YAA1C,CAAV;AACH,KAF0B,EAExB,IAFwB,CAA3B;AAIA,WAAO,MAAMO,aAAa,CAACF,OAAD,CAA1B;AACH,GANQ,CAAT;AAQA,SACI,MAAC,cAAD;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,OAAO,EACH,MAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCH,OAAzC,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKR,KAAK,CAACH,QANX,CADJ;AAUH;;AAED,eAAeU,cAAf","sourcesContent":["import { OverlayTrigger } from 'react-bootstrap'\r\nimport React, { Component } from 'react';\r\n\r\nconst UpdatingPopover = React.forwardRef(\r\n    ({ popper, children, show: _, ...props }, ref) => {\r\n        useEffect(() => {\r\n            console.log('updating!');\r\n            popper.scheduleUpdate();\r\n        }, [children, popper]);\r\n\r\n        return (\r\n            <Popover ref={ref} content {...props}>\r\n                {children}\r\n            </Popover>\r\n        );\r\n    },\r\n);\r\nconst longContent = `\r\n  Very long\r\n  Multiline content\r\n  that is engaging and what-not\r\n`;\r\nconst shortContent = 'Short and sweet!';\r\n\r\nfunction OverlayPopover(props) {\r\n    const [content, setContent] = React.useState(shortContent);\r\n\r\n    useEffect(() => {\r\n        const timerId = setInterval(() => {\r\n            setContent(content === shortContent ? longContent : shortContent);\r\n        }, 3000);\r\n\r\n        return () => clearInterval(timerId);\r\n    });\r\n\r\n    return (\r\n        <OverlayTrigger\r\n            trigger=\"click\"\r\n            overlay={\r\n                <UpdatingPopover id=\"popover-contained\">{content}</UpdatingPopover>\r\n            }\r\n        >\r\n            {props.children}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport default OverlayPopover"]},"metadata":{},"sourceType":"module"}