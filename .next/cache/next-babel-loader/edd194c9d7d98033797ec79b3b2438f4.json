{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\n// import React, { Component } from 'react';\n// import { Row, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\n// import axios from 'axios'\n// import { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\n// // import ViewProduct from './all-products-contents/view-product'\n// import Link from 'next/link'\n// import Router from 'next/router'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n// import CardAccordion from '../../../../card_accordion';\n// import MuhalikConfig from '../../../../../../sdk/muhalik.config'\n// import GlobalStyleSheet from '../../../../../../styleSheet'\n// import TitleRow from '../../../../title-row';\n// import AddNew from '../../../../vendor/dashboard/dashboard-contents/product-contents/add-new'\n// class AllProducts extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productsArray: [],\n//             viewProduct: false,\n//             data: {},\n//         }\n//     }\n//     // Getting Product Categories from DB\n//     // async componentDidMount() {\n//     //     const url = MuhalikConfig.PATH + '/api/products/';\n//     //     try {\n//     //         const response = await axios.get(url);\n//     //         console.log('data:', response.data.data.docs)\n//     //         this.setState({ productsArray: response.data.data.docs })\n//     //     } catch (error) {\n//     //         console.log('Data Fetching Eror:', error);\n//     //     }    \n//     // }\n//     async componentDidMount() {\n//         const url = MuhalikConfig.PATH + '/api/products/'\n//         const currentComponent = this\n//         await axios.get(url, {\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         }).then((response) => {\n//             console.log('data:', response.data.data)\n//             currentComponent.setState({ productsArray: response.data.data })\n//         }).catch((error) => {\n//             alert('Data Fetchig Error: ', error)\n//         });\n//     }\n//     handleEditProduct(index) {\n//         console.log('edit called')\n//         let element = []\n//         if (index == -1) {\n//             element = this.state.data\n//         } else {\n//             element = this.state.productsArray[index]\n//         }\n//         if (element.product_type != 'simple-product') {\n//             let array = [];\n//             let variations = element.product_variations\n//             variations.forEach((element, i) => {\n//                 array.push({\n//                     item: element.item, price: element.price, stock: element.stock, image_link: element.image_link,\n//                     price_error: '', stock_error: '', image_link_error: '', custom_fields: element.custom_fields\n//                 })\n//             })\n//             element.product_variations = array\n//         } else {\n//             element.product_variations = []\n//         }\n//         this.setState({ data: element, viewProduct: 'edit' })\n//     }\n//     async handleDeleteProduct(index) {\n//         // const copyArray = Object.assign([], this.state.productsArray)\n//         // const array = Object.assign([], this.state.productsArray)\n//         // let _id = ''\n//         // if (index == -1) {\n//         //     _id = this.state.data._id;\n//         // } else {\n//         //     _id = copyArray[index]._id;\n//         // }\n//         // const url = MuhalikConfig.PATH + `/api/products/${_id}`;\n//         // copyArray.forEach((element, i) => {\n//         //     if (element._id == _id) {\n//         //         array.splice(i, 1)\n//         //     }\n//         // })\n//         // this.setState({ productsArray: array })\n//         // await axios.delete(url, {\n//         //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         // }).then(function (response) {\n//         //     return true;\n//         // }).catch(function (error) {\n//         //     alert('Error: ', error.response.data.message);\n//         //     return false;\n//         // });\n//     }\n//     isVariableProduct(element) {\n//         if (element.product_type != \"simple-product\") {\n//             return true\n//         } else {\n//             return false\n//         }\n//     }\n//     renderSwitch(param) {\n//         switch (param) {\n//             case 'view':\n//                 return <ViewProduct\n//                     data={this.state.data}\n//                     back={() => this.setState({ viewProduct: false, data: {} })}\n//                     isVariableProduct={this.state.data.product_type != \"simple-product\"}\n//                     delete={() => this.handleDeleteProduct(-1)}\n//                     edit={() => this.handleEditProduct(-1)}\n//                 />\n//                 break;\n//             case 'edit':\n//                 return <AddNew\n//                     title={'Vendor Dashboard / All Products / Update'}\n//                     isUpdateProduct={true}\n//                     _id={this.state.data._id}\n//                     isVariableProduct={this.state.data.product_type != 'simple-product'}\n//                     back={() => this.setState({ viewProduct: false, data: {} })}\n//                     view={() => this.setState({ viewProduct: 'view' })}\n//                     delete={() => this.handleDeleteProduct(-1)}\n//                     productCategories={this.state.data.product_category}\n//                     productSubCategories={this.state.data.product_sub_category}\n//                     productTags={this.state.data.product_tags}\n//                     warrantyType={this.state.data.warranty_type}\n//                     simple_product_image_link={this.state.data.product_image_link}\n//                     variationsArray={this.state.data.product_variations}\n//                     dangerousGoodsArray={this.state.data.dangerous_goods}\n//                     product_name={this.state.data.product_name}\n//                     product_description={this.state.data.product_description}\n//                     product_type={'variable-product'}\n//                     product_type={this.state.data.product_type}\n//                     sku={this.state.data.sku}\n//                     product_price={this.state.data.product_price}\n//                     product_in_stock={this.state.data.product_in_stock}\n//                     product_brand_name={this.state.data.product_brand_name}\n//                     product_warranty={this.state.data.product_warranty}\n//                     warranty_type={this.state.data.warranty_type}\n//                     product_discount={this.state.data.product_discount}\n//                     purchase_note={this.state.data.purchase_note}\n//                     product_weight={this.state.data.product_weight}\n//                     dimension_length={this.state.data.dimension_length}\n//                     dimension_width={this.state.data.dimension_width}\n//                     dimension_height={this.state.data.dimension_height}\n//                     shipping_charges={this.state.data.shipping_charges}\n//                     handling_fee={this.state.data.handling_fee}\n//                 />\n//                 break;\n//             default:\n//                 return <>\n//                     <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\n//                     <Row noGutters style={{ margin: '2%', background: 'white' }}>\n//                         <Table responsive bordered hover size=\"sm\">\n//                             <thead>\n//                                 <tr>\n//                                     <th style={{ textAlign: 'center' }}>\n//                                         <Form.Check type=\"checkbox\" />\n//                                     </th>\n//                                     <th style={{ textAlign: 'center' }}>Name</th>\n//                                     <th style={{ textAlign: 'center' }}>Product Type</th>\n//                                     <th style={{ textAlign: 'center' }}>SKU</th>\n//                                     <th style={{ textAlign: 'center' }}>Stock</th>\n//                                     <th style={{ textAlign: 'center' }}>Price</th>\n//                                     <th style={{ textAlign: 'center' }}>Categories</th>\n//                                     <th style={{ textAlign: 'center' }}>Tags</th>\n//                                     <th style={{ textAlign: 'center' }}>Date</th>\n//                                 </tr>\n//                             </thead>\n//                             <tbody>\n//                                 {this.state.productsArray && this.state.productsArray.map((element, index) =>\n//                                     <>\n//                                         {this.isVariableProduct(element) ?\n//                                             <tr key={index}>\n//                                                 <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\n//                                                 <td className=\"td\">\n//                                                     {element.product_name}\n//                                                     <div className=\"mr-auto\"></div>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, viewProduct: 'view' })}> View </Nav.Link>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\n//                                                     <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\n//                                                 </td>\n//                                                 <td align=\"center\" style={styles.label}>{element.product_type}</td>\n//                                                 <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\n//                                                 <td align=\"center\" style={styles.label}>\n//                                                     {element.product_variations.map(e =>\n//                                                         e.stock + ','\n//                                                     )}\n//                                                 </td>\n//                                                 <td align=\"center\" style={styles.label}>\n//                                                     {element.product_variations.map(e =>\n//                                                         e.price + ','\n//                                                     )}\n//                                                 </td>\n//                                                 <td align=\"center\" style={styles.label}>\n//                                                     {element.product_category.value + ' => ' + element.product_sub_category.value}\n//                                                 </td>\n//                                                 <td align=\"center\" style={styles.label}>\n//                                                     {element.product_tags && element.product_tags.map(e =>\n//                                                         e.value + ','\n//                                                     )}\n//                                                 </td>\n//                                                 <td align=\"center\" style={styles.label}>\n//                                                     {element.product_entry_date}\n//                                                 </td>\n//                                             </tr>\n//                                             :\n//                                             <>\n//                                                 <tr>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         <Form.Check type=\"checkbox\" />\n//                                                     </td>\n//                                                     <td className=\"td\">\n//                                                         {element.product_name}\n//                                                         <div className=\"mr-auto\"></div>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.setState({ data: element, viewProduct: 'view' })}>View</Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleEditProduct(index)}>Edit</Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>{element.product_type}</td>\n//                                                     <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_in_stock}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_price}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_category.value + ' => ' + element.product_sub_category.value}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_tags && element.product_tags.map(e =>\n//                                                             e.value + ','\n//                                                         )}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_entry_date}\n//                                                     </td>\n//                                                 </tr>\n//                                             </>\n//                                         }\n//                                     </>\n//                                 )}\n//                             </tbody>\n//                         </Table>\n//                     </Row >\n//                     <style jsx >\n//                         {`\n//                         .td {\n//                             display: flex;\n//                             flex-direction: row;\n//                             align-items: center;\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\n//                         }\n//                     `}\n//                     </style>\n//                 </>\n//         }\n//     }\n//     render() {\n//         return (\n//             <>\n//                 <div>\n//                     {this.renderSwitch(this.state.viewProduct)}\n//                 </div>\n//             </>\n//         );\n//     }\n// }\n// const ViewProduct = props => {\n//     const [imgPreview, setImgPreview] = React.useState(false);\n//     const [index, setIndex] = React.useState('')\n//     const [imgData, setImgData] = React.useState('')\n//     const len = props.data.product_image_link.length;\n//     function prevImage() {\n//         if (index > 0) {\n//             setIndex(index - 1)\n//         }\n//     }\n//     function nextImage() {\n//         if (index < (len - 1)) {\n//             setIndex(index + 1)\n//         }\n//     }\n//     return (\n//         <>\n//             <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\n//             <Form.Row style={{ margin: ' 0% 2%', display: 'flex', alignItems: 'center' }} >\n//                 <Nav.Link style={{ fontSize: '14px' }} className=\"mr-auto\" onClick={props.back}>Back</Nav.Link>\n//                 <div className=\"mr-auto\" style={{ fontSize: '14px' }}> {props.data.product_name}</div>\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.edit}> Edit </Nav.Link>\n//                 <Nav.Link style={{ fontSize: '14px' }} onClick={props.delete}> Delete </Nav.Link>\n//             </Form.Row>\n//             <CardAccordion title={'General Info'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Product Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Brand Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>SKU:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     {props.isVariableProduct ?\n//                         null :\n//                         <>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Price:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Product In Stock:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                         </>\n//                     }\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty (month):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty Type:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Discount (%):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\n//                         <Form.Label style={styles.label}>Description:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             {props.isVariableProduct ?\n//                 <CardAccordion title={'Product Variations'}>\n//                     {props.data.product_variations && props.data.product_variations.map(element =>\n//                         <>\n//                             <Row >\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Price</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Stock</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 {element.item && element.item.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {element.custom_fields && element.custom_fields.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {/* {element.image_link && element.image_link.map((img, i) =>\n//                                     <Row>\n//                                         <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\n//                                             onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\n//                                     </Row>\n//                                 )} */}\n//                             </Row>\n//                             <hr />\n//                         </>\n//                     )}\n//                 </CardAccordion>\n//                 :\n//                 <>\n//                     <CardAccordion title={'Custom Fields'}>\n//                         {props.data.custom_fields && props.data.custom_fields.map(element =>\n//                             <Row>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>{element.name}</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.value} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                             </Row>\n//                         )}\n//                     </CardAccordion>\n//                     <CardAccordion title={'Product Images'}>\n//                         {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\n//                             <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id=${element.value}`}\n//                                 alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\n//                         )}\n//                     </CardAccordion>\n//                 </>\n//             }\n//             <CardAccordion title={'Shipping Details'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Length (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Width (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Height (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Weight (kg):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             <CardAccordion title={'Product Categories'}>\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Categories:</Form.Label>\n//                     <InputGroup>\n//                         <Form.Label style={styles.label}>\n//                             {props.data.product_category.value + ' => ' + props.data.product_sub_category.value}\n//                         </Form.Label>\n//                     </InputGroup>\n//                 </Form.Group >\n//                 <hr />\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Product Tags:</Form.Label>\n//                     <InputGroup>\n//                         {props.data.product_tags && props.data.product_tags.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </ Form.Group >\n//                 <hr />\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '13px', fontWeight: 'bold' }}>Dangerous Goods:</Form.Label>\n//                     <InputGroup>\n//                         {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </Form.Group>\n//             </CardAccordion >\n//             {/* Image Preview */}\n//             {\n//                 imgPreview ?\n//                     <div className=\"modal-overlay\">\n//                         <div className=\"modal-body\">\n//                             <div className=\"close-modal\">\n//                                 <div className=\"mr-auto\"></div>\n//                                 <div className=\"mr-auto\"></div>\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\n//                                     onClick={() => prevImage} />\n//                                 <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\n//                                     onClick={nextImage} />\n//                                 <div className=\"mr-auto\"></div>\n//                                 <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\n//                                     onClick={() => setImgPreview(false)} />\n//                             </div>\n//                             <div className=\"image-container\">\n//                                 <img\n//                                     src={imgData[index].value}\n//                                     style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\n//                                 />\n//                             </div>\n//                         </div>\n//                     </div>\n//                     : null\n//             }\n//             <style jsx>\n//                 {`\n//                    .modal-overlay {\n//                         position: fixed;\n//                         top: 0;\n//                         left: 0;\n//                         bottom: 0;\n//                         right: 0;\n//                         z-index: 10;\n//                         width: 100%;\n//                         height: 100%;\n//                         background: rgba(21, 21, 21, 0.75);\n//                     }\n//                      .modal-body {\n//                         position: relative;\n//                         z-index: 11;\n//                         margin: 2.5%;\n//                         overflow: hidden;\n//                         max-width: 100%;\n//                         max-height: 100%;\n//                     }\n//                     .close-modal {\n//                         position: fixed;\n//                         display: flex;\n//                         top: 10px;\n//                         left: 0;\n//                         right: 0;\n//                         width: 100%;\n//                     }\n//                     .image-container {\n//                         display: grid;\n//                         height: 100%;\n//                         // display: flex;\n//                         // justify-content: center;\n//                         // align-items: center;\n//                     }\n//                 `}\n//             </style>\n//         </>\n//     )\n// }\n// const styles = {\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n//     },\n//     nav_link: {\n//         paddingLeft: '10px',\n//         paddingRight: '5px',\n//     },\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '2%'\n//     },\n//     row: {\n//         margin: '2%', padding: '0%'\n//     },\n//     img_preview_fontawesome: {\n//         cursor: 'pointer',\n//         color: 'white',\n//         fontWeight: 'lighter',\n//         width: '30px',\n//         height: '30px',\n//         maxHeight: '30px',\n//         maxWidth: '30px',\n//     },\n//     fontawesome: {\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '10%',\n//         width: '17px',\n//         height: '17px',\n//         maxHeight: '17px',\n//         maxWidth: '17px',\n//     },\n//     general_info_label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         width: '100%',\n//         borderBottom: '1px solid gray'\n//     },\n//     field_label: {\n//         border: `1px solid ${GlobalStyleSheet.body_color}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         margin: '0%',\n//         width: '100%',\n//         padding: '2px 5px'\n//     },\n//     card: {\n//         width: '100%',\n//         border: '1px solid lightgray'\n//     },\n//     card_header: {\n//         alignItems: 'center',\n//         fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n//         background: `${GlobalStyleSheet.card_header_background}`,\n//     },\n// }\n// export default AllProducts;\nvar AllProducts = function AllProducts() {\n  return __jsx(React.Fragment, null);\n};\n\nexport default AllProducts; // // import React, { Component } from 'react';\n// // import CreatableSelect from 'react-select/creatable';\n// // const colourOptions = [{ label: '111', value: '111' }]\n// // export default class AllProducts extends Component {\n// //     handleChange = (newValue) => {\n// //         console.log('Value Changed', newValue);\n// //     };\n// //     render() {\n// //         return (\n// //             <CreatableSelect\n// //                 isMulti\n// //                 onChange={this.handleChange}\n// //                 options={colourOptions}\n// //             />\n// //         );\n// //     }\n// // }","map":null,"metadata":{},"sourceType":"module"}