{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\n\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nvar groupStyles = {\n  border: \"1px solid \".concat(GlobalStyleSheet.admin_primry_color),\n  borderRadius: '5px',\n  background: 'white',\n  color: \"\".concat(GlobalStyleSheet.admin_primry_color)\n};\n\nvar Group = function Group(props) {\n  return __jsx(\"div\", {\n    style: groupStyles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(components.Group, _extends({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar CustomFields = function CustomFields(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fieldName = _React$useState4[0],\n      setFieldName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      fieldValue = _React$useState6[0],\n      setFieldValue = _React$useState6[1];\n\n  return __jsx(React.Fragment, null, props.showCustomFields ? __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \" Please First Create Variations \") : __jsx(Form.Row, {\n    style: {\n      margin: '0%',\n      padding: '1.5%',\n      background: \"\".concat(GlobalStyleSheet.body_color)\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, \"Field Name\"), __jsx(Select, {\n    styles: GlobalStyleSheet.react_select_styles,\n    options: groupedOptions,\n    components: {\n      Group: Group\n    },\n    value: fieldName,\n    onChange: function onChange(e) {\n      return setFieldName(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: function onClick() {\n      return setModalShow(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Control, {\n    style: {\n      fontSize: '14px'\n    },\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: fieldValue,\n    onChange: function onChange(e) {\n      return setFieldValue(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    onClick: props.addFieldHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, \"Add Field\")), __jsx(\"div\", {\n    style: {\n      background: \"\".concat(GlobalStyleSheet.body_color),\n      marginTop: '1%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map(function (data, index) {\n    return __jsx(Form.Row, {\n      style: {\n        padding: '1% 2%'\n      },\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, __jsx(Col, {\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      value: data.name,\n      onChange: function onChange() {\n        return data.name;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, __jsx(\"option\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, data.name))), __jsx(Col, {\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }, __jsx(InputGroup, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: function onChange() {\n        return data.value;\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }), __jsx(Button, {\n      variant: \"outline-danger\",\n      size: \"sm\",\n      style: {\n        marginLeft: '1%'\n      },\n      onClick: function onClick() {\n        return props[\"delete\"](index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, \" delete\"))));\n  })));\n};\n\nvar styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: \"\".concat(GlobalStyleSheet.card_header_fontsize),\n    background: \"\".concat(GlobalStyleSheet.card_header_background)\n  },\n  label: {\n    fontSize: '13px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["React","Component","Accordion","Form","InputGroup","Col","Button","Row","Card","Modal","Nav","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","Select","components","groupedOptions","AddNewFieldNameModal","groupStyles","border","admin_primry_color","borderRadius","background","color","Group","props","CustomFields","useState","modalShow","setModalShow","fieldName","setFieldName","fieldValue","setFieldValue","showCustomFields","styles","label","margin","padding","body_color","react_select_styles","e","fontSize","target","value","isVariableProduct","error","addFieldHandler","marginTop","customFieldsArray","map","data","index","name","marginLeft","row","card","width","card_header","alignItems","card_header_fontsize","card_header_background","accordin_fontawesome","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [fieldName, setFieldName] = React.useState('')\r\n    const [fieldValue, setFieldValue] = React.useState('')\r\n\r\n    return (\r\n        <>\r\n            {props.showCustomFields ?\r\n                <Form.Label style={styles.label}> Please First Create Variations </Form.Label>\r\n                :\r\n                <Form.Row style={{ margin: '0%', padding: '1.5%', background: `${GlobalStyleSheet.body_color}` }}>\r\n                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                        <Select\r\n                            styles={GlobalStyleSheet.react_select_styles}\r\n                            options={groupedOptions}\r\n                            components={{ Group }}\r\n                            value={fieldName}\r\n                            onChange={(e) => setFieldName(e)}\r\n                        />\r\n                        <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                            Add New\r\n                        </Nav.Link>\r\n                        <AddNewFieldNameModal\r\n                            show={modalShow}\r\n                            onHide={() => setModalShow(false)}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                        <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                        <InputGroup>\r\n                            <Form.Control\r\n                                style={{ fontSize: '14px' }}\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Value\"\r\n                                name=\"sku\"\r\n                                value={fieldValue}\r\n                                onChange={(e) => setFieldValue(e.target.value)}\r\n                            />\r\n                        </InputGroup>\r\n                    </Form.Group>\r\n                    <Form.Label style={styles.label}>\r\n                        {props.isVariableProduct ?\r\n                            <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                            : null\r\n                        }\r\n                        <span style={{ color: 'red' }}>\r\n                            {props.error}</span>\r\n                    </Form.Label>\r\n                    <Button variant=\"outline-primary\" size=\"sm\" block\r\n                        onClick={props.addFieldHandler}>Add Field</Button>\r\n                </Form.Row>\r\n            }\r\n\r\n\r\n            {/* Map */}\r\n            <div style={{ background: `${GlobalStyleSheet.body_color}`, marginTop: '1%' }}>\r\n                {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                    <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                        <Col lg={5} md={5} sm={12} xs={12}>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                size=\"sm\"\r\n                                value={data.name}\r\n                                onChange={() => data.name}\r\n                            >\r\n                                <option>{data.name}</option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <Col lg={7} md={7} sm={12} xs={12}>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Value\"\r\n                                    name=\"sku\"\r\n                                    value={data.value}\r\n                                    onChange={() => data.value}\r\n                                />\r\n                                <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                    onClick={() => props.delete(index)}> delete</Button>\r\n                            </InputGroup>\r\n                        </Col>\r\n                    </Form.Row>\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}