{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\FYP\\\\muhalikweb\\\\pages\\\\signup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nvar schema = yup.object({\n  firstName: yup.string().required(),\n  lastName: yup.string().required(),\n  username: yup.string().required(),\n  city: yup.string().required(),\n  state: yup.string().required(),\n  zip: yup.string().required(),\n  terms: yup.bool().required()\n});\n\nfunction FormExample() {\n  return __jsx(Formik, {\n    validationSchema: schema,\n    onSubmit: console.log,\n    initialValues: {\n      firstName: 'Mark',\n      lastName: 'Otto'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, function (_ref) {\n    var handleSubmit = _ref.handleSubmit,\n        handleChange = _ref.handleChange,\n        handleBlur = _ref.handleBlur,\n        values = _ref.values,\n        touched = _ref.touched,\n        isValid = _ref.isValid,\n        errors = _ref.errors;\n    return __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik01\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"First name\"), __jsx(Form.Control, {\n      type: \"text\",\n      name: \"firstName\",\n      value: values.firstName,\n      onChange: handleChange,\n      isValid: touched.firstName && !errors.firstName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Looks good!\")), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormik02\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Last name\"), __jsx(Form.Control, {\n      type: \"text\",\n      name: \"lastName\",\n      value: values.lastName,\n      onChange: handleChange,\n      isValid: touched.lastName && !errors.lastName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Looks good!\")), __jsx(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"validationFormikUsername\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Username\"), __jsx(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(InputGroup.Prepend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(InputGroup.Text, {\n      id: \"inputGroupPrepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"@\")), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Username\",\n      \"aria-describedby\": \"inputGroupPrepend\",\n      name: \"username\",\n      value: values.username,\n      onChange: handleChange,\n      isInvalid: !!errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, errors.username)))), __jsx(Form.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"validationFormik03\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"City\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"City\",\n      name: \"city\",\n      value: values.city,\n      onChange: handleChange,\n      isInvalid: !!errors.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, errors.city)), __jsx(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik04\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"State\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"State\",\n      name: \"state\",\n      value: values.state,\n      onChange: handleChange,\n      isInvalid: !!errors.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, errors.state)), __jsx(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"validationFormik05\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Zip\"), __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Zip\",\n      name: \"zip\",\n      value: values.zip,\n      onChange: handleChange,\n      isInvalid: !!errors.zip,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, errors.zip))), __jsx(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(Form.Check, {\n      required: true,\n      name: \"terms\",\n      label: \"Agree to terms and conditions\",\n      onChange: handleChange,\n      isInvalid: !!errors.terms,\n      feedback: errors.terms,\n      id: \"validationFormik0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), __jsx(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit form\"));\n  });\n}\n\nrender(__jsx(FormExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 145\n  },\n  __self: this\n}));","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/FYP/muhalikweb/pages/signup.js"],"names":["Form","Formik","yup","schema","object","firstName","string","required","lastName","username","city","state","zip","terms","bool","FormExample","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","Col","render"],"mappings":"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","sourcesContent":["import { Form} from 'react-bootstrap';\r\n\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst schema = yup.object({\r\n  firstName: yup.string().required(),\r\n  lastName: yup.string().required(),\r\n  username: yup.string().required(),\r\n  city: yup.string().required(),\r\n  state: yup.string().required(),\r\n  zip: yup.string().required(),\r\n  terms: yup.bool().required(),\r\n});\r\n\r\nfunction FormExample() {\r\n  return (\r\n    <Formik\r\n      validationSchema={schema}\r\n      onSubmit={console.log}\r\n      initialValues={{\r\n        firstName: 'Mark',\r\n        lastName: 'Otto',\r\n      }}\r\n    >\r\n      {({\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        touched,\r\n        isValid,\r\n        errors,\r\n      }) => (\r\n        <Form noValidate onSubmit={handleSubmit}>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik01\">\r\n              <Form.Label>First name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={values.firstName}\r\n                onChange={handleChange}\r\n                isValid={touched.firstName && !errors.firstName}\r\n              />\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormik02\">\r\n              <Form.Label>Last name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"lastName\"\r\n                value={values.lastName}\r\n                onChange={handleChange}\r\n                isValid={touched.lastName && !errors.lastName}\r\n              />\r\n\r\n              <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"4\" controlId=\"validationFormikUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <InputGroup>\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Username\"\r\n                  aria-describedby=\"inputGroupPrepend\"\r\n                  name=\"username\"\r\n                  value={values.username}\r\n                  onChange={handleChange}\r\n                  isInvalid={!!errors.username}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.username}\r\n                </Form.Control.Feedback>\r\n              </InputGroup>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n              <Form.Label>City</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"City\"\r\n                name=\"city\"\r\n                value={values.city}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.city}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.city}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\r\n              <Form.Label>State</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"State\"\r\n                name=\"state\"\r\n                value={values.state}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.state}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.state}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\r\n              <Form.Label>Zip</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Zip\"\r\n                name=\"zip\"\r\n                value={values.zip}\r\n                onChange={handleChange}\r\n                isInvalid={!!errors.zip}\r\n              />\r\n\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                {errors.zip}\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Form.Row>\r\n          <Form.Group>\r\n            <Form.Check\r\n              required\r\n              name=\"terms\"\r\n              label=\"Agree to terms and conditions\"\r\n              onChange={handleChange}\r\n              isInvalid={!!errors.terms}\r\n              feedback={errors.terms}\r\n              id=\"validationFormik0\"\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit form</Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nrender(<FormExample />);"]},"metadata":{},"sourceType":"module"}