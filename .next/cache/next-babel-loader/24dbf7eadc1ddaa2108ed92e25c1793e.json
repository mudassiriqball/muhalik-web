{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nvar groupStyles = {\n  border: \"1px solid \".concat(GlobalStyleSheet.admin_primry_color),\n  borderRadius: '5px',\n  background: 'white',\n  color: \"\".concat(GlobalStyleSheet.admin_primry_color)\n};\n\nvar Group = function Group(props) {\n  return __jsx(\"div\", {\n    style: groupStyles\n  }, __jsx(components.Group, props));\n};\n\nvar CustomFields = function CustomFields(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\"\n  }, __jsx(Card, {\n    style: styles.card\n  }, __jsx(Card.Header, {\n    style: styles.card_header\n  }, __jsx(Form.Label, null, \"Custome Fields\"), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      \"float\": 'right',\n      background: 'none'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(Card.Body, null, __jsx(Form.Row, {\n    style: {\n      margin: '0.5% 1%',\n      padding: '1% 2%',\n      background: 'lightGray'\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Name\"), __jsx(Select, {\n    options: groupedOptions,\n    components: {\n      Group: Group\n    },\n    value: props.customFieldNameSelected,\n    onChange: props.fieldNameHandler\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: function onClick() {\n      return setModalShow(true);\n    }\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Value \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.fieldValueHandler\n  }))), __jsx(Form.Label, {\n    style: styles.label\n  }, props.isVariableProduct ? __jsx(\"span\", null, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    style: {\n      margin: '2% 0px'\n    },\n    onClick: props.addFieldHandler\n  }, \"Add Field\")), __jsx(\"div\", {\n    style: {\n      background: 'lightGray',\n      margin: '0.5% 1%'\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map(function (data, index) {\n    return __jsx(Form.Row, {\n      style: {\n        padding: '1% 2%'\n      },\n      key: index\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      value: data.customFieldName,\n      onChange: function onChange() {\n        return data.customFieldName;\n      }\n    }, __jsx(\"option\", null, data.customFieldName))), __jsx(Form.Group, {\n      as: Col,\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Value\",\n      name: \"sku\",\n      value: data.customFieldValue,\n      onChange: function onChange() {\n        return data.fieldValue;\n      }\n    }), __jsx(Button, {\n      variant: \"outline-primary\",\n      size: \"sm\",\n      style: {\n        marginLeft: '1%'\n      },\n      onClick: function onClick() {\n        return props[\"delete\"](index);\n      }\n    }, \" delete\"))));\n  }))))));\n};\n\nvar styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  label: {\n    fontSize: '13px'\n  },\n  variations_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":null,"metadata":{},"sourceType":"module"}