{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// export default AuthenticationService;\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport * as decode from 'jwt-decode';\nimport Router from 'next/router';\n\nconst AuthenticationService = () => __jsx(\"div\", null);\n\nexport async function saveTokenToStorage(token) {\n  await reactLocalStorage.set('token', token);\n}\nexport function getDecodedTokenFromStorage() {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n    return decodedToken.data;\n  } catch (error) {\n    return null;\n  }\n}\nexport function getTokenFromStorage() {\n  return reactLocalStorage.get('token');\n}\nexport function removeTokenFromStorage() {\n  try {\n    reactLocalStorage.remove('token');\n    return true;\n  } catch (error) {\n    console.log(\"error:\", error);\n    return false;\n  }\n}\nexport function checkAuth(rolee) {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n\n    if (decodedToken.data.role == 'admin') {\n      return decodedToken.data.fullName;\n    } else if (decodedToken.data.role !== rolee) {\n      Router.replace('/index');\n    } else {\n      return decodedToken.data.fullName;\n    }\n  } catch (error) {\n    Router.replace('/index');\n  }\n}\nexport default AuthenticationService;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/sdk/core/authentication-service.js"],"names":["reactLocalStorage","decode","Router","AuthenticationService","saveTokenToStorage","token","set","getDecodedTokenFromStorage","get","decodedToken","data","error","getTokenFromStorage","removeTokenFromStorage","remove","console","log","checkAuth","rolee","role","fullName","replace"],"mappings":";;AAAA;AACA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,MAAZ,MAAwB,YAAxB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,MAAMC,qBAAqB,GAAG,MAC1B,kBADJ;;AAIA,OAAO,eAAeC,kBAAf,CAAkCC,KAAlC,EAAyC;AAC5C,QAAML,iBAAiB,CAACM,GAAlB,CAAsB,OAAtB,EAA+BD,KAA/B,CAAN;AACH;AAED,OAAO,SAASE,0BAAT,GAAsC;AACzC,MAAI;AACA,UAAMF,KAAK,GAAGL,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAd;AACA,UAAMC,YAAY,GAAGR,MAAM,CAACI,KAAD,CAA3B;AACA,WAAOI,YAAY,CAACC,IAApB;AACH,GAJD,CAIE,OAAOC,KAAP,EAAc;AACZ,WAAO,IAAP;AACH;AACJ;AAED,OAAO,SAASC,mBAAT,GAA+B;AAClC,SAAOZ,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAP;AACH;AAED,OAAO,SAASK,sBAAT,GAAkC;AACrC,MAAI;AACAb,IAAAA,iBAAiB,CAACc,MAAlB,CAAyB,OAAzB;AACA,WAAO,IAAP;AACH,GAHD,CAGE,OAAOH,KAAP,EAAc;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,KAAtB;AACA,WAAO,KAAP;AACH;AACJ;AAED,OAAO,SAASM,SAAT,CAAmBC,KAAnB,EAA0B;AAC7B,MAAI;AACA,UAAMb,KAAK,GAAGL,iBAAiB,CAACQ,GAAlB,CAAsB,OAAtB,CAAd;AACA,UAAMC,YAAY,GAAGR,MAAM,CAACI,KAAD,CAA3B;;AACA,QAAII,YAAY,CAACC,IAAb,CAAkBS,IAAlB,IAA0B,OAA9B,EAAuC;AACnC,aAAOV,YAAY,CAACC,IAAb,CAAkBU,QAAzB;AACH,KAFD,MAEO,IAAIX,YAAY,CAACC,IAAb,CAAkBS,IAAlB,KAA2BD,KAA/B,EAAsC;AACzChB,MAAAA,MAAM,CAACmB,OAAP,CAAe,QAAf;AACH,KAFM,MAEA;AACH,aAAOZ,YAAY,CAACC,IAAb,CAAkBU,QAAzB;AACH;AACJ,GAVD,CAUE,OAAOT,KAAP,EAAc;AACZT,IAAAA,MAAM,CAACmB,OAAP,CAAe,QAAf;AACH;AACJ;AAED,eAAelB,qBAAf","sourcesContent":["// export default AuthenticationService;\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\nimport * as decode from 'jwt-decode'\r\nimport Router from 'next/router'\r\n\r\nconst AuthenticationService = () => (\r\n    <div></div>\r\n)\r\n\r\nexport async function saveTokenToStorage(token) {\r\n    await reactLocalStorage.set('token', token);\r\n}\r\n\r\nexport function getDecodedTokenFromStorage() {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        return decodedToken.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getTokenFromStorage() {\r\n    return reactLocalStorage.get('token');\r\n}\r\n\r\nexport function removeTokenFromStorage() {\r\n    try {\r\n        reactLocalStorage.remove('token');\r\n        return true\r\n    } catch (error) {\r\n        console.log(\"error:\", error)\r\n        return false\r\n    }\r\n}\r\n\r\nexport function checkAuth(rolee) {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        if (decodedToken.data.role == 'admin') {\r\n            return decodedToken.data.fullName;\r\n        } else if (decodedToken.data.role !== rolee) {\r\n            Router.replace('/index')\r\n        } else {\r\n            return decodedToken.data.fullName;\r\n        }\r\n    } catch (error) {\r\n        Router.replace('/index')\r\n    }\r\n}\r\n\r\nexport default AuthenticationService;"]},"metadata":{},"sourceType":"module"}