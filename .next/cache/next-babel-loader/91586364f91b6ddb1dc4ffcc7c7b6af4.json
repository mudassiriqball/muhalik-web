{"ast":null,"code":"var __jsx = React.createElement;\n// import { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons'\n// import { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\n// import React, { Component } from 'react';\n// function ProducCategories({ categoryList }) {\n//     const [isLoading, setIsLoading] = React.useState(false);\n//     const [showToast, setShowToast] = React.useState(false);\n//     const [categoryValue, setCategoryValue] = React.useState('');\n//     const [error, setError] = React.useState('');\n//     function handleSubmit() {\n//         if (categoryValue == '') {\n//             setError('Enter Value First')\n//         } else {\n//             setIsLoading(true)\n//             setError('')\n//             addCategory(this);\n//         }\n//     }\n//     async function addCategory() {\n//         // const url = MuhalikConfig.PATH + '/api/products/add';\n//         // await axios.post(url, {\n//         // this.state.categoryValue\n//         // }, {\n//         //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         // }).then(function (response) {\n//         console.log('asdfghjk')\n//         setIsLoading(false);\n//         setShowToast(true);\n//         return true;\n//         // }).catch(function (error) {\n//         //     currentComponent.setState({ isLoading: false });\n//         //     alert('Error: ', error.response.data.message);\n//         //     return false;\n//         // });\n//     }\n//     return (\n//         <>\n//             <Row style={styles.title_row} noGutters>\n//                 <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\n//                 <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\n//             </Row>\n//             <Row noGutters>\n//                 <Card style={styles.card}>\n//                     <Card.Header>\n//                         <div>Add Category Requests</div>\n//                     </Card.Header>\n//                     <Card.Body style={styles.card_body}>\n//                         {categoryList = (data) =>\n//                             <Form.Row>\n//                                 <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\n//                                     <InputGroup>\n//                                         <Form.Control\n//                                             type=\"text\"\n//                                             size=\"sm\"\n//                                             placeholder=\"Enter Category Value\"\n//                                             name=\"sku\"\n//                                             value={data}\n//                                             onChange={(e) => setCategoryValue(e.target.value)}\n//                                             isInvalid={error}\n//                                         />\n//                                         <Form.Control.Feedback type=\"invalid\">\n//                                             {error}\n//                                         </Form.Control.Feedback>\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\n//                                     <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\n//                                         Edit\n//                                 </Button>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\n//                                     <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\n//                                         Discard\n//                                 </Button>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\n//                                     <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\n//                                         Add\n//                                 </Button>\n//                                 </Form.Group>\n//                             </Form.Row>\n//                         }\n//                     </Card.Body>\n//                 </Card>\n//             </Row>\n//             {/* Add Categories */}\n//             <Row noGutters>\n//                 <Card style={styles.card}>\n//                     <Card.Header>\n//                         <div>Add Category</div>\n//                     </Card.Header>\n//                     <Card.Body style={styles.card_body}>\n//                         <Form.Group>\n//                             <InputGroup>\n//                                 <Form.Control\n//                                     type=\"text\"\n//                                     size=\"sm\"\n//                                     placeholder=\"Enter Category Value\"\n//                                     name=\"sku\"\n//                                     value={categoryValue}\n//                                     onChange={(e) => setCategoryValue(e.target.value)}\n//                                     isInvalid={error}\n//                                 />\n//                                 <Form.Control.Feedback type=\"invalid\">\n//                                     {error}\n//                                 </Form.Control.Feedback>\n//                             </InputGroup>\n//                         </Form.Group>\n//                         <Form.Group>\n//                             {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\n//                                 <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\n//                             <Button type=\"submit\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\n//                                 {isLoading ? 'Uploading' : 'Add Category'}\n//                                 {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\n//                             </Button>\n//                         </Form.Group>\n//                     </Card.Body>\n//                 </Card>\n//             </Row>\n//         </>\n//     )\n// }\n// ProducCategories.getInitialProps = async ctx => {\n//     // const res = await fetch('https://api.github.com/repos/zeit/next.js')\n//     // const json = await res.json()\n//     console.log('Good')\n//     return { categoryList: ['aa', 'bb', 'cc'] }\n// }\n// const styles = {\n//     title_row: {\n//         borderBottom: '1px solid gray',\n//         padding: '1.5% 4%'\n//     },\n//     title_fontawesome: {\n//         color: 'gray',\n//         marginRight: '3%',\n//         width: '26px',\n//         height: '26px',\n//         maxHeight: '26px',\n//         maxWidth: '26px',\n//     },\n//     title: {\n//         color: 'gray'\n//     },\n//     card: {\n//         width: '100%',\n//         margin: '2%'\n//     },\n//     card_body: {\n//         // padding: '5%'\n//     },\n//     error: {\n//         width: '100%',\n//         textAlign: 'center',\n//         color: '#DC3545',\n//         fontSize: '14px',\n//     },\n// }\n// export default ProducCategories\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\n\nclass ProducCategories extends React.Component {\n  static async getInitialProps(ctx) {\n    const res = await fetch('https://api.github.com/repos/zeit/next.js');\n    const json = await res.json();\n    return {\n      stars: json.stargazers_count\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, \"Next stars: \", this.props.stars);\n  }\n\n}\n\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["React","fetch","ProducCategories","Component","getInitialProps","ctx","res","json","stars","stargazers_count","render","props"],"mappingskB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,gBAAN,SAA+BF,KAAK,CAACG,SAArC,CAA+C;AAC3C,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAC9B,UAAMC,GAAG,GAAG,MAAML,KAAK,CAAC,2CAAD,CAAvB;AACA,UAAMM,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,WAAO;AAAEC,MAAAA,KAAK,EAAED,IAAI,CAACE;AAAd,KAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,mCAAkB,KAAKC,KAAL,CAAWH,KAA7B,CAAP;AACH;;AAT0C;;AAY/C,eAAeN,gBAAf","sourcesContent":["// import { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons'\r\n// import { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\n// import React, { Component } from 'react';\r\n\r\n// function ProducCategories({ categoryList }) {\r\n//     const [isLoading, setIsLoading] = React.useState(false);\r\n//     const [showToast, setShowToast] = React.useState(false);\r\n//     const [categoryValue, setCategoryValue] = React.useState('');\r\n//     const [error, setError] = React.useState('');\r\n\r\n//     function handleSubmit() {\r\n//         if (categoryValue == '') {\r\n//             setError('Enter Value First')\r\n//         } else {\r\n//             setIsLoading(true)\r\n//             setError('')\r\n//             addCategory(this);\r\n//         }\r\n//     }\r\n\r\n//     async function addCategory() {\r\n//         // const url = MuhalikConfig.PATH + '/api/products/add';\r\n//         // await axios.post(url, {\r\n//         // this.state.categoryValue\r\n//         // }, {\r\n//         //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n//         // }).then(function (response) {\r\n//         console.log('asdfghjk')\r\n//         setIsLoading(false);\r\n//         setShowToast(true);\r\n//         return true;\r\n//         // }).catch(function (error) {\r\n//         //     currentComponent.setState({ isLoading: false });\r\n//         //     alert('Error: ', error.response.data.message);\r\n//         //     return false;\r\n//         // });\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <Row style={styles.title_row} noGutters>\r\n//                 <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n//                 <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n//             </Row>\r\n//             <Row noGutters>\r\n//                 <Card style={styles.card}>\r\n//                     <Card.Header>\r\n//                         <div>Add Category Requests</div>\r\n//                     </Card.Header>\r\n//                     <Card.Body style={styles.card_body}>\r\n//                         {categoryList = (data) =>\r\n//                             <Form.Row>\r\n//                                 <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control\r\n//                                             type=\"text\"\r\n//                                             size=\"sm\"\r\n//                                             placeholder=\"Enter Category Value\"\r\n//                                             name=\"sku\"\r\n//                                             value={data}\r\n//                                             onChange={(e) => setCategoryValue(e.target.value)}\r\n//                                             isInvalid={error}\r\n//                                         />\r\n//                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                             {error}\r\n//                                         </Form.Control.Feedback>\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n//                                     <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n//                                         Edit\r\n//                                 </Button>\r\n//                                 </Form.Group>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n//                                     <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n//                                         Discard\r\n//                                 </Button>\r\n//                                 </Form.Group>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n//                                     <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n//                                         Add\r\n//                                 </Button>\r\n//                                 </Form.Group>\r\n//                             </Form.Row>\r\n//                         }\r\n//                     </Card.Body>\r\n//                 </Card>\r\n//             </Row>\r\n//             {/* Add Categories */}\r\n//             <Row noGutters>\r\n//                 <Card style={styles.card}>\r\n//                     <Card.Header>\r\n//                         <div>Add Category</div>\r\n//                     </Card.Header>\r\n//                     <Card.Body style={styles.card_body}>\r\n//                         <Form.Group>\r\n//                             <InputGroup>\r\n//                                 <Form.Control\r\n//                                     type=\"text\"\r\n//                                     size=\"sm\"\r\n//                                     placeholder=\"Enter Category Value\"\r\n//                                     name=\"sku\"\r\n//                                     value={categoryValue}\r\n//                                     onChange={(e) => setCategoryValue(e.target.value)}\r\n//                                     isInvalid={error}\r\n//                                 />\r\n//                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                     {error}\r\n//                                 </Form.Control.Feedback>\r\n//                             </InputGroup>\r\n//                         </Form.Group>\r\n//                         <Form.Group>\r\n//                             {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n//                                 <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n//                             <Button type=\"submit\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n//                                 {isLoading ? 'Uploading' : 'Add Category'}\r\n//                                 {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n//                             </Button>\r\n//                         </Form.Group>\r\n//                     </Card.Body>\r\n//                 </Card>\r\n//             </Row>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// ProducCategories.getInitialProps = async ctx => {\r\n//     // const res = await fetch('https://api.github.com/repos/zeit/next.js')\r\n//     // const json = await res.json()\r\n//     console.log('Good')\r\n//     return { categoryList: ['aa', 'bb', 'cc'] }\r\n// }\r\n\r\n// const styles = {\r\n//     title_row: {\r\n//         borderBottom: '1px solid gray',\r\n//         padding: '1.5% 4%'\r\n//     },\r\n//     title_fontawesome: {\r\n//         color: 'gray',\r\n//         marginRight: '3%',\r\n//         width: '26px',\r\n//         height: '26px',\r\n//         maxHeight: '26px',\r\n//         maxWidth: '26px',\r\n//     },\r\n//     title: {\r\n//         color: 'gray'\r\n//     },\r\n\r\n//     card: {\r\n//         width: '100%',\r\n//         margin: '2%'\r\n//     },\r\n//     card_body: {\r\n//         // padding: '5%'\r\n//     },\r\n//     error: {\r\n//         width: '100%',\r\n//         textAlign: 'center',\r\n//         color: '#DC3545',\r\n//         fontSize: '14px',\r\n//     },\r\n// }\r\n// export default ProducCategories\r\n\r\nimport React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nclass ProducCategories extends React.Component {\r\n    static async getInitialProps(ctx) {\r\n        const res = await fetch('https://api.github.com/repos/zeit/next.js')\r\n        const json = await res.json()\r\n        return { stars: json.stargazers_count }\r\n    }\r\n\r\n    render() {\r\n        return <div>Next stars: {this.props.stars}</div>\r\n    }\r\n}\r\n\r\nexport default ProducCategories"]},"metadata":{},"sourceType":"module"}