{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\New folder\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\add-new-field-name-model.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Modal, Form, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\nimport { faClosedCaptioning } from '@fortawesome/free-solid-svg-icons';\n\nfunction AddNewFieldNameModal(props) {\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [value, setValue] = React.useState(\"\");\n  const [error, setError] = React.useState(\"\");\n  const [message, setMessage] = React.useState(\"\");\n\n  async function handleAdd() {\n    if (value.length > 2 && value.length < 21) {\n      setIsLoading(true);\n      const url = MuhalikConfig.PATH + '/api/categories/field-request';\n      let data = [];\n      data = {\n        value: value,\n        label: value\n      };\n      await axios.post(url, {\n        data\n      }, {\n        headers: {\n          'authorization': props.token\n        }\n      }).then(response => {\n        setIsLoading(false);\n        setMessage('Your Request Sended Successfully, You will be informed soon');\n      }).catch(error => {\n        setIsLoading(false);\n        setMessage('Request Failed');\n      });\n    } else {\n      setError('Must be 2-20 characters');\n    }\n  }\n\n  return __jsx(Modal, _extends({}, props, {\n    size: \"md\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, __jsx(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"Add New Field\")), __jsx(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, message ? __jsx(Form.Label, {\n    style: {\n      fontSize: '14px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, message) : __jsx(React.Fragment, null, __jsx(Form.Label, {\n    style: {\n      fontSize: '14px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 25\n    }\n  }, \"Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\"), __jsx(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Field Name\",\n    name: \"sku\",\n    value: value,\n    onChange: e => {\n      setValue(e.target.value);\n\n      if (e.target.value.length > 2 && e.target.value.length < 21) {\n        setError(\"\");\n      }\n    },\n    isInvalid: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, error))))), __jsx(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, message ? __jsx(Button, {\n    size: \"sm\",\n    className: \"mr-auto\",\n    onClick: () => {\n      setMessage(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, \"Add More?\") : __jsx(Button, {\n    size: \"sm\",\n    className: \"mr-auto\",\n    onClick: handleAdd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }, isLoading ? 'Adding' : 'Add Field', isLoading ? __jsx(Spinner, {\n    animation: \"grow\",\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 38\n    }\n  }) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 79\n    }\n  })), __jsx(Button, {\n    size: \"sm\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Cancel\")));\n}\n\nexport default AddNewFieldNameModal;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/New folder/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/add-new-field-name-model.js"],"names":["Modal","Form","InputGroup","Button","Spinner","React","Component","axios","MuhalikConfig","faClosedCaptioning","AddNewFieldNameModal","props","isLoading","setIsLoading","useState","value","setValue","error","setError","message","setMessage","handleAdd","length","url","PATH","data","label","post","headers","token","then","response","catch","fontSize","textAlign","width","e","target","onHide"],"mappings":"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","sourcesContent":["import { Modal, Form, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config'\r\nimport { faClosedCaptioning } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction AddNewFieldNameModal(props) {\r\n    const [isLoading, setIsLoading] = React.useState(false)\r\n    const [value, setValue] = React.useState(\"\")\r\n    const [error, setError] = React.useState(\"\")\r\n    const [message, setMessage] = React.useState(\"\")\r\n\r\n    async function handleAdd() {\r\n        if (value.length > 2 && value.length < 21) {\r\n            setIsLoading(true)\r\n            const url = MuhalikConfig.PATH + '/api/categories/field-request';\r\n            let data = []\r\n            data = {\r\n                value: value,\r\n                label: value\r\n            }\r\n            await axios.post(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': props.token }\r\n            }).then((response) => {\r\n                setIsLoading(false)\r\n                setMessage('Your Request Sended Successfully, You will be informed soon')\r\n            }).catch((error) => {\r\n                setIsLoading(false)\r\n                setMessage('Request Failed')\r\n            });\r\n        } else {\r\n            setError('Must be 2-20 characters')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add New Field\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {message ?\r\n                    <Form.Label style={{ fontSize: '14px', textAlign: 'center', width: '100%' }}>{message}</Form.Label>\r\n                    :\r\n                    <>\r\n                        <Form.Label style={{ fontSize: '14px', textAlign: 'center', width: '100%' }}>\r\n                            Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\r\n                </Form.Label>\r\n                        <Form.Group>\r\n                            <InputGroup>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Enter Field Name\"\r\n                                    name=\"sku\"\r\n                                    value={value}\r\n                                    onChange={(e) => {\r\n                                        setValue(e.target.value)\r\n                                        if (e.target.value.length > 2 && e.target.value.length < 21) {\r\n                                            setError(\"\")\r\n                                        }\r\n                                    }}\r\n                                    isInvalid={error}\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    {error}\r\n                                </Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {message ?\r\n                    <Button size=\"sm\" className=\"mr-auto\" onClick={() => { setMessage(\"\") }}>Add More?</Button>\r\n                    :\r\n                    <Button size=\"sm\" className=\"mr-auto\" onClick={handleAdd}>\r\n                        {isLoading ? 'Adding' : 'Add Field'}\r\n                        {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                    </Button>\r\n                }\r\n                <Button size=\"sm\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AddNewFieldNameModal"]},"metadata":{},"sourceType":"module"}