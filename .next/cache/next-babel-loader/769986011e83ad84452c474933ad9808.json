{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-category.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Row, Form, Col, Card, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport ShowToast from '../../../../toast';\n\nvar AddCategory = /*#__PURE__*/function (_Component) {\n  _inherits(AddCategory, _Component);\n\n  var _super = _createSuper(AddCategory);\n\n  function AddCategory(props) {\n    var _this;\n\n    _classCallCheck(this, AddCategory);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCategoryValueChange\", function (e) {\n      _this.setState({\n        categoryValue: e.target.value\n      });\n    });\n\n    _this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: ''\n    };\n    return _this;\n  } //  Submit data to api\n\n\n  _createClass(AddCategory, [{\n    key: \"uploadProduct\",\n    value: function uploadProduct(data, currentComponent) {\n      return _regeneratorRuntime.async(function uploadProduct$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('data: ', data); // const url = MuhalikConfig.PATH + '/api/products/add';\n              // await axios.post(url, {\n              //     data\n              // }, {\n              //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n              // }).then(function (response) {\n\n              currentComponent.setState({\n                isLoading: false\n              });\n              currentComponent.setState({\n                showToast: true\n              });\n              return _context.abrupt(\"return\", true);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(React.Fragment, null, this.state.showToast ? __jsx(ShowToast, {\n        onCloseHandler: function onCloseHandler(e) {\n          return _this2.setState({\n            showToast: false\n          });\n        },\n        show: this.state.showToast,\n        header: 'Success',\n        message: 'Category Added Successfully',\n        iconName: faThumbsUp,\n        color: \"green\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 41\n        }\n      }) : null, __jsx(Row, {\n        style: styles.title_row,\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, __jsx(FontAwesomeIcon, {\n        icon: faPlus,\n        style: styles.title_fontawesome,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }), __jsx(\"div\", {\n        className: \"mr-auto\",\n        style: styles.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }\n      }, \" Add New Category \")), __jsx(Row, {\n        noGutters: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, __jsx(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }\n      }, \"Product Category\"), __jsx(Card.Body, {\n        style: styles.card_body,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Group, {\n        as: Col,\n        lg: 10,\n        md: 10,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, __jsx(Form.Control, {\n        type: \"text\",\n        size: \"sm\",\n        placeholder: \"Enter Category Value\",\n        name: \"sku\",\n        value: this.state.categoryValue,\n        onChange: this.handleCategoryValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 37\n        }\n      })), __jsx(Form.Group, {\n        as: Col,\n        lg: 2,\n        md: 2,\n        sm: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, __jsx(Button, {\n        type: \"submit\",\n        size: \"sm\",\n        onSubmit: this.handleSubmit,\n        disabled: this.state.isLoading,\n        block: true,\n        style: styles.submit_btn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n        animation: \"grow\",\n        size: \"sm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 65\n        }\n      }) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 106\n        }\n      })))), __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, __jsx(Form.Label, {\n        style: styles.error,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 33\n        }\n      }, this.state.error))))));\n    }\n  }]);\n\n  return AddCategory;\n}(Component);\n\nvar styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '5%'\n  },\n  card_body: {\n    padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default AddCategory;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-category.js"],"names":["React","Component","Row","Form","Col","Card","Button","Spinner","FontAwesomeIcon","faPlus","faThumbsUp","faThumbsDown","ShowToast","AddCategory","props","e","setState","categoryValue","target","value","state","isLoading","showToast","error","data","currentComponent","console","log","styles","title_row","title_fontawesome","title","card","card_body","handleCategoryValueChange","handleSubmit","submit_btn","borderBottom","padding","color","marginRight","width","height","maxHeight","maxWidth","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Form, Col, Card, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport ShowToast from '../../../../toast';\r\n\r\nclass AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n        }\r\n    }\r\n    //  Submit data to api\r\n    async uploadProduct(data, currentComponent) {\r\n        console.log('data: ', data)\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        //     data\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        currentComponent.setState({ isLoading: false });\r\n        currentComponent.setState({ showToast: true });\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n    handleCategoryValueChange = (e) => {\r\n        this.setState({ categoryValue: e.target.value })\r\n    }\r\n\r\n    handleSubmit() {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showToast ? <ShowToast onCloseHandler={(e) => this.setState({ showToast: false })} show={this.state.showToast}\r\n                    header={'Success'} message={'Category Added Successfully'} iconName={faThumbsUp} color={\"green\"} />\r\n                    : null\r\n                }\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Add New Category </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            Product Category\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            <Row >\r\n                                <Form.Group as={Col} lg={10} md={10} sm={12} xs={12}>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={this.state.categoryValue}\r\n                                        onChange={this.handleCategoryValueChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={2} md={2} sm={12} xs={12}>\r\n                                    {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                    <Button type=\"submit\" size=\"sm\" onSubmit={this.handleSubmit} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                        {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                        {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Row>\r\n                            <Row >\r\n                                <Form.Label style={styles.error}>{this.state.error}</Form.Label>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '5%'\r\n    },\r\n    card_body: {\r\n        padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n\r\n}\r\n\r\nexport default AddCategory;"]},"metadata":{},"sourceType":"module"}