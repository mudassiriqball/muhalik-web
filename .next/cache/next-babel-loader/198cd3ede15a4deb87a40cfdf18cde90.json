{"ast":null,"code":"var __jsx = React.createElement;\nimport { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport axios from 'axios';\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: '',\n      categoryList: []\n    };\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      this.setState({\n        categoryList: response.data.data\n      });\n      console.log('list:', response);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  async addCategory() {\n    // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    // this.state.categoryValue\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      showToast: true\n    });\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  handleSubmit() {\n    if (categoryValue == '') {\n      this.setState({\n        error: 'Enter Value First'\n      });\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        error: ''\n      });\n      this.addCategory(this);\n    }\n  }\n\n  render() {\n    // const [isLoading, setIsLoading] = React.useState(false);\n    // const [showToast, setShowToast] = React.useState(false);\n    // const [categoryValue, setCategoryValue] = React.useState('');\n    // const [error, setError] = React.useState('');\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true\n    }, __jsx(FontAwesomeIcon, {\n      icon: faListAlt,\n      style: styles.title_fontawesome\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title\n    }, \" Product Categories \")), __jsx(Row, {\n      noGutters: true\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, null, __jsx(\"div\", null, \"Add Category Requests\")), __jsx(Card.Body, {\n      style: styles.card_body\n    }, this.state.categoryList.map(data => __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.label,\n      onChange: e => {\n        this.setState({\n          categoryValue: e.target.value\n        });\n      },\n      isInvalid: this.state.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, \"Edit\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, \"Discard\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, \"Add\"))))))), __jsx(Row, {\n      noGutters: true\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, null, __jsx(\"div\", null, \"Add Category\")), __jsx(Card.Body, {\n      style: styles.card_body\n    }, __jsx(Form.Group, null, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: e => this.setState({\n        categoryValue: e.target.value\n      }),\n      isInvalid: this.state.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.error))), __jsx(Form.Group, null, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\"\n    }) : null))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default ProducCategories;","map":null,"metadata":{},"sourceType":"module"}