{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nvar groupStyles = {\n  border: \"1px solid \".concat(GlobalStyleSheet.admin_primry_color),\n  borderRadius: '5px',\n  background: 'white',\n  color: \"\".concat(GlobalStyleSheet.admin_primry_color)\n};\n\nvar Group = function Group(props) {\n  return __jsx(\"div\", {\n    style: groupStyles\n  }, __jsx(components.Group, props));\n};\n\nvar CustomFields = function CustomFields(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalShow = _React$useState2[0],\n      setModalShow = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      fieldName = _React$useState4[0],\n      setFieldName = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      fieldValue = _React$useState6[0],\n      setFieldValue = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      error = _React$useState8[0],\n      setError = _React$useState8[1];\n\n  function handleAddCustomFieldBtnClick() {\n    if (fieldName != '' && fieldValue != '') {\n      var copyArray = Object.assign([], props.customFieldsArray);\n      copyArray.push({\n        name: fieldName.value,\n        value: fieldValue\n      });\n      props.setFieldsArrayHandler(copyArray);\n      setError('');\n      setFieldName('');\n      setFieldValue('');\n    } else {\n      setError('Enter Field Name and Value');\n    }\n  }\n\n  function deleteCustomFieldsClick(index) {\n    var copyArray = Object.assign([], props.customFieldsArray);\n    copyArray.splice(index, 1);\n    props.setFieldsArrayHandler(copyArray);\n  }\n\n  function saveCustomFieldsHandler() {\n    if (props.customFieldsArray != '') {\n      setError('');\n      props.saveCustomFieldsHandler();\n    } else {\n      setError('Add Fields First');\n    }\n  }\n\n  return __jsx(React.Fragment, null, props.showCustomFields ? __jsx(Form.Label, {\n    style: styles.label\n  }, \" Please First Create Variations \") : __jsx(React.Fragment, null, __jsx(Form.Row, {\n    style: {\n      margin: '0%',\n      padding: '1.5%',\n      background: \"\".concat(GlobalStyleSheet.body_color)\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Name\"), __jsx(Select, {\n    styles: GlobalStyleSheet.react_select_styles,\n    options: groupedOptions,\n    components: {\n      Group: Group\n    },\n    value: fieldName,\n    onChange: function onChange(e) {\n      return setFieldName(e);\n    }\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: function onClick() {\n      return setModalShow(true);\n    }\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: function onHide() {\n      return setModalShow(false);\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Value \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    style: {\n      fontSize: '14px'\n    },\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: fieldValue,\n    onChange: function onChange(e) {\n      return setFieldValue(e.target.value);\n    }\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: handleAddCustomFieldBtnClick\n  }, \"Add\"))), __jsx(\"span\", {\n    className: \"jsx-1112730667\" + \" \" + \"mr-auto\"\n  }, \" \", error, \" \"), __jsx(Row, {\n    style: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    className: \"mr-auto\"\n  }, \"For Variable Products each Custom Field will be added to all variations\"), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    onClick: saveCustomFieldsHandler\n  }, \"Save Fields\")))), __jsx(\"div\", {\n    style: {\n      background: \"\".concat(GlobalStyleSheet.body_color),\n      marginTop: '1%'\n    },\n    className: \"jsx-1112730667\"\n  }, props.customFieldsArray && props.customFieldsArray.map(function (element, index) {\n    return __jsx(Form.Row, {\n      style: {\n        padding: '1% 2%'\n      },\n      key: index\n    }, __jsx(Col, {\n      lg: 5,\n      md: 5,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Control, {\n      as: \"select\",\n      size: \"sm\",\n      value: element.name,\n      onChange: function onChange() {\n        return element.name;\n      }\n    }, __jsx(\"option\", {\n      className: \"jsx-1112730667\"\n    }, element.name))), __jsx(Col, {\n      lg: 7,\n      md: 7,\n      sm: 12,\n      xs: 12\n    }, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Value\",\n      name: \"sku\",\n      value: element.value,\n      onChange: function onChange() {\n        return element.value;\n      }\n    }), __jsx(Button, {\n      variant: \"outline-danger\",\n      size: \"sm\",\n      style: {\n        marginLeft: '1%'\n      },\n      onClick: function onClick() {\n        return deleteCustomFieldsClick(index);\n      }\n    }, \" delete\"))));\n  })), __jsx(_JSXStyle, {\n    id: \"1112730667\"\n  }, [\"span.jsx-1112730667{color:red;font-size:13px;}\"]));\n};\n\nvar styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: \"\".concat(GlobalStyleSheet.card_header_fontsize),\n    background: \"\".concat(GlobalStyleSheet.card_header_background)\n  },\n  label: {\n    fontSize: '13px'\n  },\n  accordin_fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.admin_primry_color),\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":null,"metadata":{},"sourceType":"module"}