{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Accordion, Form, Col, Row, Card, InputGroup, Button, Toast, Alert, Nav, Tabs, Spinner } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faExclamationTriangle, faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport CreatableSelect from 'react-select/creatable';\nimport Select from 'react-select';\nimport AlertModal from '../../../../alert-modal';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\nimport CustomFields from './add-new-contents/custom-fields';\nimport ProductData from './add-new-contents/product-data';\nimport product_size_options from '../../../../../../sdk/consts/product-size-options';\nimport product_color_options from '../../../../../../sdk/consts/product-color-options'; // Option List for select Product Category (when offline)\n\nlet product_categories_options = [{\n  value: 'Shoe',\n  label: 'Shoe'\n}, {\n  value: 'Cloth',\n  label: 'Cloth'\n}, {\n  value: 'Shirt',\n  label: 'Shirt'\n}, {\n  value: 'Pant',\n  label: 'Pant'\n}];\nconst product_sub_categories_options = [{\n  value: 'Sub Shoe',\n  label: 'Sub Shoe'\n}, {\n  value: 'Sub Cloth',\n  label: 'Sub Cloth'\n}, {\n  value: 'Sub Shirt',\n  label: 'Sub Shirt'\n}];\nconst product_sub_sub_categories_options = [{\n  value: 'Foo',\n  label: 'Foo'\n}, {\n  value: 'Loo',\n  label: 'Loo'\n}, {\n  value: 'Khoo',\n  label: 'Khoo'\n}]; // For React-Select\n\nconst components = {\n  DropdownIndicator: null\n}; // Model For React-Select\n\nconst createOption = label => ({\n  value: label,\n  label\n});\n\nconst react_select_styles = {\n  control: base => _objectSpread({}, base, {\n    fontSize: '13px'\n  }),\n  dropdownIndicator: base => _objectSpread({}, base, {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: '13px'\n  }),\n  clearIndicator: base => _objectSpread({}, base, {\n    paddingTop: 0,\n    paddingBottom: 0,\n    fontSize: '13px'\n  }),\n  option: provided => _objectSpread({}, provided, {\n    fontSize: '13px'\n  })\n}; // Yup Schema for validation fields\n\nconst schema = yup.object({\n  product_name: yup.string().required(\"Enter Product Name\").min(2, \"Must have at least 2 characters\").max(40, \"Can't be longer than 40 characters\"),\n  product_description: yup.string().required(\"Enter Product Name\").min(5, \"Must have at least 5 characters\").max(200, \"Can't be longer than 200 characters\"),\n  // Product Data\n  product_type: yup.string(),\n  // => Inventory\n  sku: yup.string().min(0, 'Enter Between 0-100').max(100, 'Enter Between 0-100'),\n  // => General(Simple-Product)\n  product_price: yup.number().integer(\"Enter Only Numbers\").positive('Enter Between 1-1000000').max(1000000, 'Enter Between 1-1000000'),\n  product_in_stock: yup.number().integer(\"Enter Only Numbers\").min(1, \"Must grater than 1 digit\").max(1000000, \"Can't be longer than 1000000\"),\n  product_brand_name: yup.string().min(2, \"Must have at least 2 characters\").max(40, \"Can't be longer than 40 characters\"),\n  product_image_link: yup.string(),\n  product_warranty: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-200').max(200, 'Enter Between 0-200'),\n  warranty_type: yup.string(),\n  product_discount: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-100').max(100, 'Enter Between 0-100'),\n  // => Attributes (Variable Product)\n  purchase_note: yup.string(),\n  // => Variations (Variable Product)\n  product_variations: yup.string(),\n  // => Shipping\n  product_weight: yup.number().integer(\"Enter Only Numbers\").min(0, \"Must grater than 0 digit\").max(100, \"Can't be longer than 100\"),\n  dimension_length: yup.number().integer(\"Enter Only Numbers\").min(0, \"Must grater than 0 digit\").max(100, \"Can't be longer than 100\"),\n  dimension_width: yup.number().integer(\"Enter Only Numbers\").min(0, \"Must grater than 0 digit\").max(100, \"Can't be longer than 100\"),\n  dimension_height: yup.number().integer(\"Enter Only Numbers\").min(0, \"Must grater than 0 digit\").max(100, \"Can't be longer than 100\"),\n  shipping_charges: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-100').max(100, 'Enter Between 0-100'),\n  handling_fee: yup.number().integer(\"Enter Only Numbers\").min(0, \"Must grater than 0 digit\").max(100, \"Can't be longer than 100\"),\n  // => Advanve\n  purchase_note: yup.string(),\n  // Custom Fields\n  custom_fields: yup.string(),\n  product_category: yup.string(),\n  product_sub_category: yup.string(),\n  product_sub_sub_category: yup.string(),\n  dangerous_goods: yup.string(),\n  product_tags: yup.string()\n});\n\nclass AddNew extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSimpleProductImageLinkChange\", (arr, actionMeta) => {\n      this.setState({\n        simple_product_image_link: arr,\n        image_linkError: 'no_error',\n        image_linkErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleSimpleProductImageLinkInputChange\", arr => {\n      this.setState({\n        inputValue: arr\n      });\n    });\n\n    _defineProperty(this, \"handleSimpleProductImage_linkKeyDown\", event => {\n      const inputValue = this.state.inputValue;\n      const simple_product_image_link = this.state.simple_product_image_link;\n      if (!inputValue) return;\n\n      switch (event.key) {\n        case 'Enter':\n        case 'Tab':\n          this.setState({\n            inputValue: '',\n            simple_product_image_link: [...simple_product_image_link, createOption(inputValue)]\n          });\n          event.preventDefault();\n      }\n    });\n\n    _defineProperty(this, \"handleProductAttributeValueChange\", e => {\n      this.setState({\n        productAttributeValue: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleAddProductAttributeClick\", () => {\n      if (this.state.productAttributeName != '' && this.state.productAttributeValue != '') {\n        this.setState({\n          productAttributeError: ''\n        });\n        const copyArray = Object.assign([], this.state.productAttributesArray);\n        copyArray.push({\n          productAttributeName: this.state.productAttributeName,\n          productAttributeValue: this.state.productAttributeValue\n        });\n        this.setState({\n          productAttributeName: ''\n        });\n        this.setState({\n          productAttributeValue: ''\n        });\n        this.setState({\n          productAttributeNameSelected: ''\n        });\n        this.setState({\n          productAttributesArray: copyArray\n        });\n      } else {\n        this.setState({\n          productAttributeError: 'Enter Field Name and Value'\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleCreateVariationsClick\", () => {\n      var allArrays = [];\n      this.state.productAttributesArray.forEach(element => {\n        var trim = element.productAttributeValue.split(' ').join('');\n        var splitArray = trim.split('|');\n        allArrays.push(splitArray);\n      });\n      const array = this.allPossibleCases(allArrays);\n      var data = [];\n      array.forEach(element => {\n        const split = element.split('-');\n        let item = [];\n        split.forEach((e, i) => {\n          item.push({\n            name: this.state.productAttributesArray[i].productAttributeName,\n            value: e\n          });\n        });\n        data.push({\n          items: item,\n          price: '',\n          stock: '1',\n          image_link: '',\n          price_error: '',\n          image_link_error: '',\n          customField: []\n        });\n      }); // console.log(\"split Array: \", data)\n\n      this.setState({\n        variationsArray: data\n      });\n    });\n\n    _defineProperty(this, \"handleUpdateProductAttributeClick\", (index, name, value) => {\n      const copyArray = Object.assign([], this.state.productAttributesArray);\n      copyArray[index] = {\n        productAttributeName: name,\n        productAttributeValue: value\n      };\n      this.setState({\n        productAttributesArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteProductAttributeClick\", index => {\n      const copyArray = Object.assign([], this.state.productAttributesArray);\n      copyArray.splice(index, 1);\n      this.setState({\n        productAttributesArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleVariationsSamePriceChanged\", e => {\n      if (e.target.value >= 0) {\n        this.setState({\n          samePriceInput: e.target.value\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationsSamePriceClick\", e => {\n      if (this.state.samePriceInput != '') {\n        const copyArray = Object.assign([], this.state.variationsArray);\n        copyArray.forEach(element => {\n          element.price = this.state.samePriceInput;\n        });\n        this.setState({\n          variationsArray: copyArray\n        });\n      } else {\n        this.setState({\n          samePriceError: 'Enter Value'\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationsSameStockChanged\", e => {\n      if (e.target.value >= 0) {\n        this.setState({\n          sameStockInput: e.target.value\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationsSameStockClick\", () => {\n      if (this.state.sameStockInput != '') {\n        const copyArray = Object.assign([], this.state.variationsArray);\n        copyArray.forEach(element => {\n          element.stock = this.state.sameStockInput;\n        });\n        this.setState({\n          variationsArray: copyArray\n        });\n      } else {\n        this.setState({\n          sameStockError: 'Enter Value'\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationsSameImgLinkChanged\", e => {\n      this.setState({\n        sameImgLinkInput: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleVariationsSameImgLinkClick\", () => {\n      if (this.state.sameImgLinkInput != '') {\n        const copyArray = Object.assign([], this.state.variationsArray);\n        copyArray.forEach(element => {\n          element.image_link = this.state.sameImgLinkInput;\n        });\n        this.setState({\n          variationsArray: copyArray\n        });\n      } else {\n        this.setState({\n          sameImgLinkError: 'Enter Value'\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationPriceChange\", (e, index) => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      let object = copyArray[index];\n\n      if (e.target.value >= 0) {\n        object.price = e.target.value;\n        copyArray[index] = object;\n        this.setState({\n          variationsArray: copyArray\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationProductInStockChang\", (e, index) => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      let object = copyArray[index];\n\n      if (e.target.value >= 0) {\n        object.stock = e.target.value;\n        copyArray[index] = object;\n        this.setState({\n          variationsArray: copyArray\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleVariationImageLinkChange\", (e, index) => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      let object = copyArray[index];\n      object.image_link = e.target.value;\n      copyArray[index] = object;\n      this.setState({\n        variationsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteProductVariationClick\", index => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      copyArray.splice(index, 1);\n      this.setState({\n        variationsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleDeleteVariationCustomFieldClick\", (index, i) => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      copyArray[index].customField.splice(i, 1);\n      this.setState({\n        variationsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleSaveVariationsClick\", () => {\n      const copyArray = Object.assign([], this.state.variationsArray);\n      let flag = true;\n      copyArray.forEach(element => {\n        if (element.price == '' || element.image_link == '') {\n          flag = false;\n\n          if (element.price == '') {\n            element.price_error = 'Enter price';\n          }\n\n          if (element.image_link == '') {\n            element.image_link_error = 'Enter Image Link';\n          }\n        } else {\n          element.price_error = '';\n          element.image_link_error = '';\n        }\n      });\n\n      if (flag == true) {\n        this.setState({\n          isVariationsSaved: true\n        });\n      }\n\n      this.setState({\n        variationsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleVariationsErrorCheck\", data => {\n      if (data.price_error != '' || data.image_link_error != '') {\n        return '1px solid red';\n      } else {\n        return 'none';\n      }\n    });\n\n    _defineProperty(this, \"handleCustomFieldValueChange\", e => {\n      this.setState({\n        customFieldValue: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleAddCustomFieldBtnClick\", () => {\n      if (this.state.customFieldName != '' && this.state.customFieldValue != '') {\n        const copyArray = Object.assign([], this.state.variationsArray);\n\n        if (this.state.isVariableProduct == true) {\n          copyArray.forEach(element => {\n            element.customField.push({\n              name: this.state.customFieldName,\n              value: this.state.customFieldValue\n            });\n            console.log(\"element.customField: \", element.customField);\n          });\n          this.setState({\n            variationsArray: copyArray\n          });\n        } else {\n          this.state.customFieldsArray.push({\n            name: this.state.customFieldName,\n            value: this.state.customFieldValue\n          });\n        }\n\n        this.setState({\n          customFieldError: ''\n        });\n        this.setState({\n          customFieldName: ''\n        });\n        this.setState({\n          customFieldValue: ''\n        });\n        this.setState({\n          customFieldNameSelected: ''\n        });\n      } else {\n        this.setState({\n          customFieldError: 'Enter Field Name and Value'\n        });\n      }\n    });\n\n    _defineProperty(this, \"updateCustomFieldsClick\", (index, name, value) => {\n      const copyArray = Object.assign([], this.state.customFieldsArray);\n      copyArray[index] = {\n        customFieldName: name,\n        customFieldValue: value\n      };\n      this.setState({\n        customFieldsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"deleteCustomFieldsClick\", index => {\n      const copyArray = Object.assign([], this.state.customFieldsArray);\n      copyArray.splice(index, 1);\n      this.setState({\n        customFieldsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleProductCategoryChange\", value => {\n      this.setState({\n        productCategories: value,\n        subCategoryDisabled: false,\n        categoryErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleProductSubCategoryChange\", value => {\n      this.setState({\n        productSubCategories: value,\n        subSubCategoryDisabled: false,\n        subCategoryError: 'no_error',\n        subCategoryErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleProductSubSubCategoryChange\", value => {\n      this.setState({\n        productSubSubCategories: value,\n        subSubCategoryError: 'no_error',\n        subSubCategoryErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleDangerousGoodsChange\", (e, name) => {\n      const copyArray = Object.assign([], this.state.dangerousGoodsArray);\n\n      if (e.target.checked) {\n        copyArray.push({\n          value: name\n        });\n      } else {\n        copyArray.forEach((element, index) => {\n          if (element.value == name) {\n            copyArray.splice(index, 1);\n          }\n        });\n      }\n\n      this.setState({\n        dangerousGoodsArray: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleProductTagChange\", arr => {\n      this.setState({\n        productTags: arr\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      showVariationsErrorAlert: false,\n      showSimpleProductPriceImgLinkErrorrAlert: false,\n      isVariableProduct: false,\n      productCategories: '',\n      productSubCategories: '',\n      productSubSubCategories: '',\n      subCategoryDisabled: true,\n      subSubCategoryDisabled: true,\n      subCategoryError: 'no_error',\n      subSubCategoryError: 'no_error',\n      categoryErrorDiv: 'BorderDiv',\n      subCategoryErrorDiv: 'BorderDiv',\n      subSubategoryErrorDiv: 'BorderDiv',\n      productTags: [],\n      warrantyType: 'Year',\n      inputValue: '',\n      simple_product_image_link: [],\n      simple_product_image_link: [],\n      image_linkError: 'no_error',\n      image_linkErrorDiv: 'BorderDiv',\n      // Product Attributes\n      productAttributesArray: [],\n      productAttributeName: '',\n      productAttributeValue: '',\n      productAttributeError: '',\n      productAttributeNameSelected: '',\n      variationsArray: [],\n      isVariationsSaved: false,\n      samePriceInput: '',\n      samePriceError: '',\n      sameStockInput: '',\n      sameStockError: '',\n      sameImgLinkInput: '',\n      sameImgLinkError: '',\n      // Custom Fields\n      customFieldsArray: [],\n      customFieldName: '',\n      customFieldValue: '',\n      customFieldError: '',\n      customFieldNameSelected: '',\n      // Dangerous Goods\n      dangerousGoodsArray: []\n    };\n    this.handleProductTypeChange = this.handleProductTypeChange.bind(this);\n    this.handleAddCustomFieldBtnClick = this.handleAddCustomFieldBtnClick.bind(this); // this.uploadProduct = this.uploadProduct.bind(this);\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      product_categories_options = response.data.data;\n    } catch (error) {\n      console.log(error);\n    }\n  } //  Submit data to api\n\n\n  async uploadProduct(data, currentComponent) {\n    console.log('data: ', data);\n    const url = MuhalikConfig.PATH + '/api/products/add';\n    await axios.post(url, {\n      data\n    }, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      currentComponent.setState({\n        showToast: true\n      });\n      return true;\n    }).catch(function (error) {\n      currentComponent.setState({\n        isLoading: false\n      });\n      alert('Error: ', error.response.data.message);\n      return false;\n    });\n  }\n\n  handleProductTypeChange(e) {\n    if (e.target.value == 'variable-prouct') {\n      this.setState({\n        isVariableProduct: true\n      });\n    } else {\n      this.setState({\n        isVariableProduct: false\n      });\n    }\n  } // Product Data\n  // => Simple Product Image Link\n\n\n  // => End Of Simple Product Image Link\n  // => Product Attributes (Variable Product)\n  handleProductAttributeNameChange(e) {\n    this.setState({\n      productAttributeName: e.value\n    });\n    this.setState({\n      productAttributeNameSelected: e\n    });\n  }\n\n  allPossibleCases(arr) {\n    if (arr.length == 1) {\n      return arr[0];\n    } else {\n      var result = [];\n      var allCasesOfRest = this.allPossibleCases(arr.slice(1)); // recur with the rest of array\n\n      for (var i = 0; i < allCasesOfRest.length; i++) {\n        for (var j = 0; j < arr[0].length; j++) {\n          result.push(arr[0][j] + \"-\" + allCasesOfRest[i]);\n        }\n      }\n\n      return result;\n    }\n  }\n\n  // => End Of Product Variations\n  // End of Product Data\n  // Custom Fields\n  handleCustomFieldNameChange(e) {\n    this.setState({\n      customFieldName: e.value\n    });\n    this.setState({\n      customFieldNameSelected: e\n    });\n  }\n\n  render() {\n    var showCustomFields = false;\n\n    if (this.state.variationsArray.length == 0 && this.state.isVariableProduct == true) {\n      showCustomFields = true;\n    } else {\n      showCustomFields = false;\n    }\n\n    return __jsx(Formik, {\n      validationSchema: schema,\n      initialValues: {\n        product_type: 'simple-product'\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        if (this.state.productCategories == '' || this.state.productSubCategories == '' || this.state.productSubSubCategories == '' || this.state.simple_product_image_link == '' && values.product_type == 'simple-product') {\n          if (this.state.productCategories == '') {\n            this.setState({\n              categoryErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.productSubCategories == '') {\n            this.setState({\n              subCategoryErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.productSubSubCategories == '') {\n            this.setState({\n              subSubCategoryErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.simple_product_image_link == '' && values.product_type == 'simple-product') {\n            this.setState({\n              showSimpleProductPriceImgLinkErrorrAlert: true,\n              image_linkError: \"error\",\n              image_linkErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          setSubmitting(false);\n        } else if (this.state.isVariationsSaved == false && values.product_type == 'variable-prouct') {\n          this.setState({\n            showVariationsErrorAlert: true\n          });\n        } else {\n          resetForm();\n          setSubmitting(true);\n          this.setState({\n            isLoading: true\n          });\n          setTimeout(() => {\n            let array = []; // this.state.productCategories.forEach(element => {\n            //     array.push(element.value)\n            // })\n\n            values.product_category = this.state.productCategories;\n            values.product_sub_category = this.state.productSubCategories;\n            values.product_sub_sub_category = this.state.productSubSubCategories; // array = [];\n            // this.state.productTags.forEach(element => {\n            //     array.push(element.value)\n            // })\n\n            values.product_tags = this.state.productTags;\n            values.dangerous_goods = this.state.dangerousGoodsArray;\n\n            if (values.product_type == 'simple-product') {\n              // array = [];\n              // this.state.simple_product_image_link.forEach(element => {\n              //     array.push(element.value)\n              // })\n              values.product_image_link = this.state.simple_product_image_link;\n\n              if (this.state.customFieldsArray != []) {\n                // array = []\n                // this.state.customFieldsArray.forEach(custom => {\n                //     var obj = {};\n                //     obj[custom.customFieldName] = custom.customFieldValue;\n                //     array.push(obj)\n                // });\n                values.custom_fields = this.state.customFieldsArray;\n              }\n            } else {\n              array = [];\n              this.state.variationsArray.forEach((element, index) => {\n                let item = [];\n                element.items.forEach(e => {\n                  item.push({\n                    name: e.name,\n                    value: e.value\n                  });\n                });\n                element.customField.forEach(e => {\n                  item.push({\n                    name: e.name,\n                    value: e.value\n                  });\n                });\n                item.push({\n                  name: 'price',\n                  value: element.price\n                });\n                item.push({\n                  name: 'stock',\n                  value: element.stock\n                });\n                item.push({\n                  name: 'image_link',\n                  value: element.image_link\n                });\n                array.push({\n                  item: item\n                });\n              });\n              values.product_variations = array;\n            }\n\n            resetForm();\n\n            if (this.uploadProduct(values, this)) {\n              this.setState({\n                showSimpleProductPriceImgLinkErrorrAlert: false,\n                isVariableProduct: false,\n                productCategories: '',\n                productSubCategories: '',\n                productSubSubCategories: '',\n                subCategoryDisabled: true,\n                subSubCategoryDisabled: true,\n                categoryErrorDiv: 'BorderDiv',\n                subCategoryErrorDiv: 'BorderDiv',\n                subSubategoryErrorDiv: 'BorderDiv',\n                productTags: [],\n                warrantyType: 'Year',\n                inputValue: '',\n                simple_product_image_link: [],\n                simple_product_image_link: [],\n                image_linkError: 'no_error',\n                image_linkErrorDiv: 'BorderDiv',\n                // Product Attributes\n                productAttributesArray: [],\n                productAttributeName: '',\n                productAttributeValue: '',\n                productAttributeError: '',\n                productAttributeNameSelected: '',\n                variationsArray: [],\n                isVariationsSaved: false,\n                samePriceInput: '',\n                samePriceError: '',\n                sameStockInput: '',\n                sameStockError: '',\n                sameImgLinkInput: '',\n                sameImgLinkError: '',\n                // Custom Fields\n                customFieldsArray: [],\n                customFieldName: '',\n                customFieldValue: '',\n                customFieldError: '',\n                customFieldNameSelected: '',\n                // Dangerous Goods\n                dangerousGoodsArray: []\n              });\n            }\n\n            setSubmitting(false);\n          }, 500);\n        }\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      values,\n      touched,\n      isValid,\n      errors,\n      handleBlur,\n      isSubmitting\n    }) => __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      style: styles.title_fontawesome\n    }), __jsx(\"div\", {\n      style: styles.title,\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]]) + \" \" + \"mr-auto\"\n    }, \" Add New Product\")), __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit\n    }, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showToast: false\n      }),\n      show: this.state.showToast,\n      header: 'Success',\n      message: 'Product Uploaded Successfully',\n      iconName: faThumbsUp,\n      color: \"#00b300\"\n    }), __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showVariationsErrorAlert: false\n      }),\n      show: this.state.showVariationsErrorAlert,\n      header: 'Error',\n      message: 'Please Add/Save Variations First',\n      iconName: faExclamationTriangle,\n      color: \"#ff3333\"\n    }), __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showSimpleProductPriceImgLinkErrorrAlert: false\n      }),\n      show: this.state.showSimpleProductPriceImgLinkErrorrAlert,\n      header: 'Error',\n      message: 'Enter Price/Image Link in General Tab First',\n      iconName: faExclamationTriangle,\n      color: \"#ff3333\"\n    }), __jsx(Row, {\n      noGutters: true,\n      style: {\n        paddingTop: '2%'\n      }\n    }, __jsx(Col, {\n      lg: 9,\n      md: 9,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Name\", __jsx(\"span\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }, \"*\")), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Product Name\",\n      name: \"product_name\",\n      value: values.product_name || '',\n      onChange: handleChange,\n      isInvalid: errors.product_name\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_name))), __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\"\n    }, __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, {\n      style: styles.card_header\n    }, __jsx(Form.Label, null, \"Product Discruption\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.variations_fontawesome\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\"\n    }, __jsx(Card.Body, null, __jsx(Form.Group, null, __jsx(Form.Control, {\n      as: \"textarea\",\n      placeholder: \"Enter Product Description\",\n      name: \"product_description\",\n      value: values.product_description || '',\n      rows: \"7\",\n      onChange: handleChange,\n      isInvalid: errors.product_description\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_description))))))), __jsx(Row, {\n      style: styles.row\n    }, __jsx(ProductData, {\n      productTypeHandler: this.handleProductTypeChange,\n      isVariableProduct: this.state.isVariableProduct,\n      product_type_values: values.product_type || '',\n      product_price_values: values.product_price || '' // product_price_touched={touched.product_price}\n      ,\n      product_price_errors: errors.product_price,\n      product_in_stock_values: values.product_in_stock || '' // product_in_stock_touched={touched.product_in_stock}\n      ,\n      product_in_stock_errors: errors.product_in_stock,\n      product_brand_name_values: values.product_brand_name || '' // product_brand_name_touched={touched.product_brand_name}\n      ,\n      product_brand_name_errors: errors.product_brand_name,\n      imageLink: this.state.simple_product_image_link,\n      simpleProductImageLinkHandler: this.handleSimpleProductImageLinkChange.bind(this),\n      inputValue: this.state.inputValue,\n      simpleProductImageLinkInputChangeHandler: this.handleSimpleProductImageLinkInputChange.bind(this),\n      simpleProductImageLinkhandleKeyDownHandler: this.handleSimpleProductImage_linkKeyDown.bind(this),\n      simpleProductError: this.state.showSimpleProductPriceImgLinkErrorrAlert,\n      product_warranty_values: values.product_warranty || '' // product_warranty_touched={touched.product_warranty}\n      ,\n      product_warranty_errors: errors.product_warranty,\n      warranty_type_values: values.warranty_type || '' // warranty_type_touched={touched.warranty_type}\n      ,\n      warranty_type_errors: errors.warranty_type,\n      product_discount_values: values.product_discount || '' // product_discount_touched={touched.product_discount}\n      ,\n      product_discount_errors: errors.product_discount,\n      sku_values: values.sku || '' // sku_touched={touched.sku}\n      ,\n      sku_errors: errors.sku,\n      product_weight_values: values.product_weight || '' // product_weight_touched={touched.product_weight}\n      ,\n      product_weight_errors: errors.product_weight,\n      dimension_length_values: values.dimension_length || '' // dimension_length_touched={touched.dimension_length}\n      ,\n      dimension_length_errors: errors.dimension_length,\n      dimension_width_values: values.dimension_width || '' // dimension_width_touched={touched.dimension_width}\n      ,\n      dimension_width_errors: errors.dimension_width,\n      dimension_height_values: values.dimension_height || '' // dimension_height_touched={touched.dimension_height}\n      ,\n      dimension_height_errors: errors.dimension_height,\n      shipping_charges_values: values.shipping_charges || '' // shipping_charges_touched={touched.shipping_charges}\n      ,\n      shipping_charges_errors: errors.shipping_charges,\n      handling_fee_values: values.handling_fee || '' // handling_fee_touched={touched.handling_fee}\n      ,\n      handling_fee_errors: errors.handling_fee,\n      purchase_note_values: values.purchase_note || '' // purchase_note_touched={touched.purchase_note}\n      ,\n      purchase_note_errors: errors.purchase_note,\n      onChange: handleChange // touched={touched}\n      ,\n      errors: errors,\n      productColorChangeHandler: this.handleProductColorChange // size={this.state.size}\n      ,\n      productSizeChangeHandler: this.handleProductSizeChange,\n      attributesArray: this.state.productAttributesArray,\n      name: this.state.productAttributeName,\n      value: this.state.productAttributeValue,\n      productAttributeNameSelected: this.state.productAttributeNameSelected,\n      attributeNameHandler: this.handleProductAttributeNameChange.bind(this),\n      attributeValueHandler: this.handleProductAttributeValueChange.bind(this),\n      addAttributeHandler: this.handleAddProductAttributeClick.bind(this),\n      update: this.handleUpdateProductAttributeClick.bind(this),\n      deleteAttributeHandler: this.handleDeleteProductAttributeClick.bind(this),\n      deleteVariationHandler: this.handleDeleteProductVariationClick.bind(this),\n      deleteVariationCustomFieldHandler: this.handleDeleteVariationCustomFieldClick.bind(this),\n      saveVariationsHandler: this.handleSaveVariationsClick.bind(this),\n      variationsErrorHandler: this.handleVariationsErrorCheck.bind(this),\n      error: this.state.productAttributeError,\n      createVariationsHandler: this.handleCreateVariationsClick,\n      variationsArray: this.state.variationsArray,\n      variationPriceHandler: this.handleVariationPriceChange.bind(this),\n      variationStockHandler: this.handleVariationProductInStockChang.bind(this),\n      variationImageLinkHandler: this.handleVariationImageLinkChange.bind(this),\n      samePriceInput: this.state.samePriceInput,\n      samePriceError: this.state.samePriceError,\n      variationsSamePriceChanged: this.handleVariationsSamePriceChanged.bind(this),\n      variationsSamePriceHandler: this.handleVariationsSamePriceClick.bind(this),\n      sameStockInput: this.state.sameStockInput,\n      sameStockError: this.state.sameStockError,\n      variationsSameStockChanged: this.handleVariationsSameStockChanged.bind(this),\n      variationsSameStockHandler: this.handleVariationsSameStockClick.bind(this),\n      sameImgLinkInput: this.state.sameImgLinkInput,\n      sameImgLinkError: this.state.sameImgLinkError,\n      variationsSameImgLinkChanged: this.handleVariationsSameImgLinkChanged.bind(this),\n      variationsSameImgLinkHandler: this.handleVariationsSameImgLinkClick.bind(this)\n    })), __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(CustomFields, {\n      customFieldsArray: this.state.customFieldsArray,\n      isVariableProduct: this.state.isVariableProduct,\n      name: this.state.customFieldName,\n      value: this.state.customFieldValue,\n      customFieldNameSelected: this.state.customFieldNameSelected,\n      fieldNameHandler: this.handleCustomFieldNameChange.bind(this),\n      fieldValueHandler: this.handleCustomFieldValueChange.bind(this),\n      addFieldHandler: this.handleAddCustomFieldBtnClick.bind(this),\n      update: this.updateCustomFieldsClick.bind(this),\n      delete: this.deleteCustomFieldsClick.bind(this),\n      error: this.state.customFieldError,\n      showCustomFields: showCustomFields\n    }))), __jsx(Col, {\n      lg: 3,\n      md: 3,\n      sm: 12,\n      xs: 12\n    }, __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\"\n    }, __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, {\n      style: styles.card_header\n    }, __jsx(Form.Label, null, \"Product Categories\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.variations_fontawesome\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\"\n    }, __jsx(Card.Body, null, __jsx(Form.Group, null, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Category\"), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]]) + \" \" + (this.state.categoryErrorDiv || \"\")\n    }, __jsx(Select, {\n      styles: react_select_styles,\n      onChange: this.handleProductCategoryChange,\n      options: product_categories_options,\n      value: this.state.productCategories,\n      isSearchable: true,\n      isClearable: true,\n      placeholder: \"Select Category\"\n    }))), __jsx(Form.Group, null, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Sub Category\"), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]]) + \" \" + (this.state.subCategoryErrorDiv || \"\")\n    }, __jsx(Select, {\n      styles: react_select_styles,\n      onChange: this.handleProductSubCategoryChange,\n      options: product_sub_categories_options,\n      value: this.state.productSubCategories,\n      isSearchable: true,\n      isClearable: true,\n      placeholder: \"Select Sub Category\",\n      isDisabled: this.state.subCategoryDisabled\n    }))), __jsx(Form.Group, null, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Sub Sub Category\"), __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]]) + \" \" + (this.state.subSubCategoryErrorDiv || \"\")\n    }, __jsx(Select, {\n      styles: react_select_styles,\n      onChange: this.handleProductSubSubCategoryChange,\n      options: product_sub_sub_categories_options,\n      value: this.state.productSubSubCategories,\n      isSearchable: true,\n      isClearable: true,\n      placeholder: \"Select Sub Sub Category\",\n      isDisabled: this.state.subSubCategoryDisabled\n    })))))))), __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\"\n    }, __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, {\n      style: styles.card_header\n    }, __jsx(Form.Label, null, \"Dangerous Goods\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.variations_fontawesome\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\"\n    }, __jsx(Card.Body, null, __jsx(Form.Check, {\n      name: \"not_specified\",\n      label: \"Not Specified\",\n      style: styles.label,\n      onChange: e => this.handleDangerousGoodsChange(e, 'Not Specified')\n    }), __jsx(\"br\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }), __jsx(Form.Check, {\n      name: \"ceramic\",\n      label: \"Ceramic\",\n      style: styles.label,\n      onChange: e => this.handleDangerousGoodsChange(e, 'Ceramic')\n    }), __jsx(\"br\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }), __jsx(Form.Check, {\n      name: \"glass\",\n      label: \"Glass\",\n      style: styles.label,\n      onChange: e => this.handleDangerousGoodsChange(e, 'Glass')\n    }), __jsx(\"br\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }), __jsx(Form.Check, {\n      name: \"metal\",\n      label: \"Metal\",\n      style: styles.label,\n      onChange: e => this.handleDangerousGoodsChange(e, 'Metal')\n    }), __jsx(\"br\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }), __jsx(Form.Check, {\n      name: \"plastic\",\n      label: \"Plastic\",\n      style: styles.label,\n      onChange: e => this.handleDangerousGoodsChange(e, 'Plastic')\n    })))))), __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\"\n    }, __jsx(Form.Group, {\n      as: Row,\n      style: styles.row\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, {\n      style: styles.card_header\n    }, __jsx(Form.Label, null, \"Product Tags\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.variations_fontawesome\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\"\n    }, __jsx(Card.Body, {\n      style: {\n        height: '250px'\n      }\n    }, __jsx(CreatableSelect, {\n      isMulti: true,\n      onChange: this.handleProductTagChange,\n      options: product_color_options,\n      value: this.state.productTags,\n      placeholder: \"Select/Enter Tags\"\n    })))))))), __jsx(Form.Row, {\n      style: styles.row\n    }, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(\"p\", {\n      style: styles.label,\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }, \"Fields with \", __jsx(\"span\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }, \" * \"), \" are mandatory.\"), __jsx(\"p\", {\n      style: styles.label,\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }, \"For adding new size, color, link: Enter text and hit Enter or Tab key\"), __jsx(Button, {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, this.state.isLoading ? 'Uploading' : 'Upload', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\"\n    }) : __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"3499326083\", [GlobalStyleSheet.admin_primry_color]]])\n    }))))), __jsx(_JSXStyle, {\n      id: \"3499326083\",\n      dynamic: [GlobalStyleSheet.admin_primry_color]\n    }, [\".RedBorderDiv.__jsx-style-dynamic-selector{border:0.5px solid #DC3545;padding:1px;border-radius:2px;width:100%;}\", \".BorderDiv.__jsx-style-dynamic-selector{border:none;width:100%;}\", \"span.__jsx-style-dynamic-selector{color:red;}\", `.nav_link.__jsx-style-dynamic-selector{background:${GlobalStyleSheet.admin_primry_color};border-top:0.5px solid #434556;border-bottom:0.5px solid #434556;margin:1.5px 0px;border-radius:4px;}`, \"p.__jsx-style-dynamic-selector{text-align:center;margin:0px;}\"])));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '0.7% 4%',\n    display: 'flex',\n    alignItems: 'center'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '20px',\n    height: '20px',\n    maxHeight: '20px',\n    maxWidth: '20px'\n  },\n  title: {\n    color: 'gray'\n  },\n  nav_link: {\n    color: 'white',\n    fontSize: '13px',\n    display: 'flex',\n    alignItems: 'center',\n    height: '45px'\n  },\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '14px',\n    background: 'lightgray'\n  },\n  buttons: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    border: 'none',\n    fontSize: '10px'\n  },\n  submit_btn: {\n    // background: `${GlobalStyleSheet.admin_primry_color}`,\n    marginTop: '1%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  term_condition_label: {\n    width: '100%',\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    paddingTop: '-10px',\n    marginTop: '-10px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  },\n  product_fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    marginRight: '10%',\n    width: '17px',\n    height: '17px',\n    maxHeight: '17px',\n    maxWidth: '17px'\n  },\n  variations_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default AddNew;","map":null,"metadata":{},"sourceType":"module"}