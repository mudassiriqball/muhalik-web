{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// // const Orders = () => {\n// //     return (\n// //         <div>\n// //                 <p>This is Discount page</p>\n// //         </div>\n// //     );\n// // }\n// // export default Orders;\n// import React, { Component } from 'react';\n// import { Dropdown, ButtonGroup, SplitButton, DropdownButton, FormControl, Form, Col, Row, Card, InputGroup, Button, Image } from 'react-bootstrap';\n// // The forwardRef is important!!\n// // Dropdown needs access to the DOM node in order to position the Menu\n// const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n//   <a\n//     href=\"\"\n//     ref={ref}\n//     onClick={e => {\n//       e.preventDefault();\n//       onClick(e);\n//     }}\n//   >\n//     {children}\n//     &#x25bc;\n//   </a>\n// ));\n// // forwardRef again here!\n// // Dropdown needs access to the DOM of the Menu to measure it\n// const CustomMenu = React.forwardRef(\n//   ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\n//     const [value, setValue] = React.useState('');\n//     return (\n//       <div\n//         ref={ref}\n//         style={style}\n//         className={className}\n//         aria-labelledby={labeledBy}\n//       >\n//         <FormControl\n//           autoFocus\n//           className=\"mx-3 my-2 w-auto\"\n//           placeholder=\"Type to filter...\"\n//           onChange={e => setValue(e.target.value)}\n//           value={value}\n//         />\n//         <ul className=\"list-unstyled\">\n//           {React.Children.toArray(children).filter(\n//             child =>\n//               !value || child.props.children.toLowerCase().startsWith(value),\n//           )}\n//         </ul>\n//       </div>\n//     );\n//   },\n// );\n// class Orders extends Component {\n//   state = {}\n//   render() {\n//     return (\n//       <div>\n//         <Dropdown>\n//           <Form.Label>Product Category </Form.Label>\n//           <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\" >Product Category</Dropdown.Toggle>\n//           <Dropdown.Menu as={CustomMenu} alignRight>\n//             <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"3\">Orange</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"4\">Purple</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"5\">Fuck</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"6\">Shit</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"7\" >Mig</Dropdown.Item>\n//             <Dropdown.Item eventKey=\"8\">Green</Dropdown.Item>\n//           </Dropdown.Menu>\n//         </Dropdown>\n//         <Form>\n//           <Form.Group controlId=\"exampleForm.ControlSelect1\">\n//             <Form.Label>Example select</Form.Label>\n//             <Form.Control as=\"select\">\n//               <option>1</option>\n//               <option>2</option>\n//               <option>3</option>\n//               <option>4</option>\n//               <option>5</option>\n//             </Form.Control>\n//           </Form.Group>\n//         </Form>\n//       </div>\n//     );\n//   }\n// }\n// export default Orders;\nimport React, { Component } from 'react';\nimport Select from 'react-select';\nimport { colourOptions } from '../data';\nconst styles = {\n  multiValue: (base, state) => {\n    return state.data.isFixed ? _objectSpread({}, base, {\n      backgroundColor: 'gray'\n    }) : base;\n  },\n  multiValueLabel: (base, state) => {\n    return state.data.isFixed ? _objectSpread({}, base, {\n      fontWeight: 'bold',\n      color: 'white',\n      paddingRight: 6\n    }) : base;\n  },\n  multiValueRemove: (base, state) => {\n    return state.data.isFixed ? _objectSpread({}, base, {\n      display: 'none'\n    }) : base;\n  }\n};\n\nconst orderOptions = values => {\n  return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed));\n};\n\nexport default class Orders extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"state\", {\n      value: orderOptions([colourOptions[0], colourOptions[1], colourOptions[3]])\n    });\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(value, {\n    action,\n    removedValue\n  }) {\n    switch (action) {\n      case 'remove-value':\n      case 'pop-value':\n        if (removedValue.isFixed) {\n          return;\n        }\n\n        break;\n\n      case 'clear':\n        value = colourOptions.filter(v => v.isFixed);\n        break;\n    }\n\n    value = orderOptions(value);\n    this.setState({\n      value: value\n    });\n  }\n\n  render() {\n    return __jsx(Select, {\n      value: this.state.value,\n      isMulti: true,\n      styles: styles,\n      isClearable: this.state.value.some(v => !v.isFixed),\n      name: \"colors\",\n      className: \"basic-multi-select\",\n      classNamePrefix: \"select\",\n      onChange: this.onChange,\n      options: colourOptions\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/FYP/muhalikweb/pages/components/vendor/dashboard/dashboard-tabs-content/orders.js"],"names":["React","Component","Select","colourOptions","styles","multiValue","base","state","data","isFixed","backgroundColor","multiValueLabel","fontWeight","color","paddingRight","multiValueRemove","display","orderOptions","values","filter","v","concat","Orders","constructor","props","value","onChange","bind","action","removedValue","setState","render","some"],"mappings":"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","sourcesContent":["\r\n// // const Orders = () => {\r\n// //     return (\r\n// //         <div>\r\n// //                 <p>This is Discount page</p>\r\n// //         </div>\r\n// //     );\r\n// // }\r\n\r\n// // export default Orders;\r\n\r\n// import React, { Component } from 'react';\r\n// import { Dropdown, ButtonGroup, SplitButton, DropdownButton, FormControl, Form, Col, Row, Card, InputGroup, Button, Image } from 'react-bootstrap';\r\n\r\n// // The forwardRef is important!!\r\n// // Dropdown needs access to the DOM node in order to position the Menu\r\n// const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n//   <a\r\n//     href=\"\"\r\n//     ref={ref}\r\n//     onClick={e => {\r\n//       e.preventDefault();\r\n//       onClick(e);\r\n//     }}\r\n//   >\r\n//     {children}\r\n//     &#x25bc;\r\n//   </a>\r\n// ));\r\n\r\n// // forwardRef again here!\r\n// // Dropdown needs access to the DOM of the Menu to measure it\r\n// const CustomMenu = React.forwardRef(\r\n//   ({ children, style, className, 'aria-labelledby': labeledBy }, ref) => {\r\n//     const [value, setValue] = React.useState('');\r\n\r\n//     return (\r\n//       <div\r\n//         ref={ref}\r\n//         style={style}\r\n//         className={className}\r\n//         aria-labelledby={labeledBy}\r\n//       >\r\n//         <FormControl\r\n//           autoFocus\r\n//           className=\"mx-3 my-2 w-auto\"\r\n//           placeholder=\"Type to filter...\"\r\n//           onChange={e => setValue(e.target.value)}\r\n//           value={value}\r\n//         />\r\n//         <ul className=\"list-unstyled\">\r\n//           {React.Children.toArray(children).filter(\r\n//             child =>\r\n//               !value || child.props.children.toLowerCase().startsWith(value),\r\n//           )}\r\n//         </ul>\r\n//       </div>\r\n//     );\r\n//   },\r\n// );\r\n\r\n// class Orders extends Component {\r\n//   state = {}\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Dropdown>\r\n//           <Form.Label>Product Category </Form.Label>\r\n//           <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\" >Product Category</Dropdown.Toggle>\r\n//           <Dropdown.Menu as={CustomMenu} alignRight>\r\n//             <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"3\">Orange</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"4\">Purple</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"5\">Fuck</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"6\">Shit</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"7\" >Mig</Dropdown.Item>\r\n//             <Dropdown.Item eventKey=\"8\">Green</Dropdown.Item>\r\n//           </Dropdown.Menu>\r\n//         </Dropdown>\r\n\r\n//         <Form>\r\n//           <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n//             <Form.Label>Example select</Form.Label>\r\n//             <Form.Control as=\"select\">\r\n//               <option>1</option>\r\n//               <option>2</option>\r\n//               <option>3</option>\r\n//               <option>4</option>\r\n//               <option>5</option>\r\n//             </Form.Control>\r\n//           </Form.Group>\r\n//         </Form>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default Orders;\r\n\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport Select from 'react-select';\r\nimport { colourOptions } from '../data';\r\n\r\n\r\nconst styles = {\r\n  multiValue: (base, state) => {\r\n    return state.data.isFixed ? { ...base, backgroundColor: 'gray' } : base;\r\n  },\r\n  multiValueLabel: (base, state) => {\r\n    return state.data.isFixed\r\n      ? { ...base, fontWeight: 'bold', color: 'white', paddingRight: 6 }\r\n      : base;\r\n  },\r\n  multiValueRemove: (base, state) => {\r\n    return state.data.isFixed ? { ...base, display: 'none' } : base;\r\n  },\r\n};\r\n\r\nconst orderOptions = values => {\r\n  return values.filter(v => v.isFixed).concat(values.filter(v => !v.isFixed));\r\n};\r\n\r\nexport default class Orders extends Component {\r\n  state = {\r\n    value: orderOptions([colourOptions[0], colourOptions[1], colourOptions[3]]),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(value, { action, removedValue }) {\r\n    switch (action) {\r\n      case 'remove-value':\r\n      case 'pop-value':\r\n        if (removedValue.isFixed) {\r\n          return;\r\n        }\r\n        break;\r\n      case 'clear':\r\n        value = colourOptions.filter(v => v.isFixed);\r\n        break;\r\n    }\r\n\r\n    value = orderOptions(value);\r\n    this.setState({ value: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Select\r\n        value={this.state.value}\r\n        isMulti\r\n        styles={styles}\r\n        isClearable={this.state.value.some(v => !v.isFixed)}\r\n        name=\"colors\"\r\n        className=\"basic-multi-select\"\r\n        classNamePrefix=\"select\"\r\n        onChange={this.onChange}\r\n        options={colourOptions}\r\n      />\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}