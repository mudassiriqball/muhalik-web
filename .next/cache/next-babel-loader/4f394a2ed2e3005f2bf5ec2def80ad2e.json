{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Col, Row, Card, InputGroup, Button } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport CreatableSelect from 'react-select/creatable';\nimport GlobalStyleSheet from '../../../../../styleSheet';\nimport MuhalikConfig from '../../../../../sdk/muhalik.config'; // Option List for select Product Size\n\nconst product_size_options = [{\n  value: 'X-S',\n  label: 'X-Small'\n}, {\n  value: 'S',\n  label: 'Small'\n}, {\n  value: 'M',\n  label: 'Medium'\n}, {\n  value: 'L',\n  label: 'Large'\n}, {\n  value: 'X-L',\n  label: 'X-Large'\n}, {\n  value: '10',\n  label: '10'\n}, {\n  value: '11',\n  label: '11'\n}, {\n  value: '12',\n  label: '12'\n}, {\n  value: '13',\n  label: '13'\n}, {\n  value: '14',\n  label: '14'\n}, {\n  value: '15',\n  label: '15'\n}, {\n  value: '16',\n  label: '16'\n}, {\n  value: '17',\n  label: '17'\n}, {\n  value: '18',\n  label: '18'\n}, {\n  value: '19',\n  label: '19'\n}, {\n  value: '20',\n  label: '20'\n}, {\n  value: '21',\n  label: '20'\n}, {\n  value: '22',\n  label: '20'\n}, {\n  value: '23',\n  label: '20'\n}, {\n  value: '24',\n  label: '20'\n}, {\n  value: '25',\n  label: '20'\n}, {\n  value: '26',\n  label: '20'\n}, {\n  value: '27',\n  label: '20'\n}, {\n  value: '28',\n  label: '20'\n}, {\n  value: '29',\n  label: '20'\n}, {\n  value: '30',\n  label: '30'\n}, {\n  value: '31',\n  label: '31'\n}, {\n  value: '32',\n  label: '32'\n}, {\n  value: '33',\n  label: '33'\n}, {\n  value: '34',\n  label: '34'\n}, {\n  value: '35',\n  label: '35'\n}, {\n  value: '36',\n  label: '36'\n}, {\n  value: '37',\n  label: '37'\n}, {\n  value: '38',\n  label: '38'\n}, {\n  value: '49',\n  label: '49'\n}, {\n  value: '40',\n  label: '40'\n}, {\n  value: '41',\n  label: '41'\n}, {\n  value: '42',\n  label: '42'\n}, {\n  value: '43',\n  label: '43'\n}, {\n  value: '44',\n  label: '44'\n}, {\n  value: '45',\n  label: '45'\n}, {\n  value: '46',\n  label: '46'\n}, {\n  value: '47',\n  label: '47'\n}, {\n  value: '48',\n  label: '48'\n}, {\n  value: '49',\n  label: '49'\n}, {\n  value: '50',\n  label: '50'\n}, {\n  value: '51',\n  label: '51'\n}, {\n  value: '52',\n  label: '52'\n}, {\n  value: '53',\n  label: '53'\n}, {\n  value: '54',\n  label: '54'\n}, {\n  value: '55',\n  label: '55'\n}, {\n  value: '56',\n  label: '56'\n}, {\n  value: '57',\n  label: '57'\n}, {\n  value: '58',\n  label: '58'\n}, {\n  value: '59',\n  label: '59'\n}, {\n  value: '60',\n  label: '60'\n}, {\n  value: '61',\n  label: '61'\n}, {\n  value: '62',\n  label: '62'\n}, {\n  value: '63',\n  label: '63'\n}, {\n  value: '64',\n  label: '64'\n}, {\n  value: '65',\n  label: '65'\n}, {\n  value: '66',\n  label: '66'\n}, {\n  value: '67',\n  label: '67'\n}, {\n  value: '67',\n  label: '68'\n}, {\n  value: '69',\n  label: '69'\n}, {\n  value: '70',\n  label: '70'\n}, {\n  value: '71',\n  label: '71'\n}, {\n  value: '72',\n  label: '72'\n}, {\n  value: '73',\n  label: '73'\n}, {\n  value: '74',\n  label: '74'\n}, {\n  value: '75',\n  label: '75'\n}, {\n  value: '76',\n  label: '76'\n}, {\n  value: '77',\n  label: '77'\n}, {\n  value: '78',\n  label: '78'\n}, {\n  value: '79',\n  label: '79'\n}, {\n  value: '80',\n  label: '80'\n}, {\n  value: '81',\n  label: '81'\n}, {\n  value: '82',\n  label: '82'\n}, {\n  value: '83',\n  label: '83'\n}, {\n  value: '84',\n  label: '84'\n}, {\n  value: '85',\n  label: '85'\n}, {\n  value: '86',\n  label: '86'\n}, {\n  value: '87',\n  label: '87'\n}, {\n  value: '88',\n  label: '88'\n}, {\n  value: '89',\n  label: '89'\n}, {\n  value: '90',\n  label: '90'\n}, {\n  value: '91',\n  label: '91'\n}, {\n  value: '92',\n  label: '92'\n}, {\n  value: '93',\n  label: '93'\n}, {\n  value: '94',\n  label: '94'\n}, {\n  value: '95',\n  label: '95'\n}, {\n  value: '96',\n  label: '96'\n}, {\n  value: '97',\n  label: '97'\n}, {\n  value: '98',\n  label: '98'\n}, {\n  value: '99',\n  label: '99'\n}, {\n  value: '100',\n  label: '100'\n}]; // Option List for select Product Color\n\nconst product_color_options = [// A\n{\n  value: 'Apricot',\n  label: 'Apricot'\n}, {\n  value: 'Aquamarine',\n  label: 'Aquamarine'\n}, // B\n{\n  value: 'Black',\n  label: 'Black'\n}, {\n  value: 'Blue',\n  label: 'Blue'\n}, {\n  value: 'Bronze',\n  label: 'Bronze'\n}, {\n  value: 'Baby-Blue',\n  label: 'Baby-Blue'\n}, {\n  value: 'Blue-Green',\n  label: 'Blue-Green'\n}, {\n  value: 'Blue-Violet',\n  label: 'Blue-Violet'\n}, // C\n{\n  value: 'Chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'Coffee',\n  label: 'Coffee'\n}, {\n  value: 'Cyan',\n  label: 'Cyan'\n}, // D\n{\n  value: 'Desert-Sand',\n  label: 'Desert-Sand'\n}, // G\n{\n  value: 'Gray',\n  label: 'Gray'\n}, {\n  value: 'Green',\n  label: 'Green'\n}, // I\n{\n  value: 'Indigo',\n  label: 'Indigo'\n}, // L\n{\n  value: 'Lime',\n  label: 'Lime'\n}, // M\n{\n  value: 'Magenta',\n  label: 'Magenta'\n}, {\n  value: 'Maroon',\n  label: 'Maroon'\n}, // N\n{\n  value: 'Navy',\n  label: 'Navy'\n}, {\n  value: 'Navy-Blue',\n  label: 'Navy-Blue'\n}, // O\n{\n  value: 'Orange',\n  label: 'Orange'\n}, {\n  value: 'Olive',\n  label: 'Olive'\n}, // P\n{\n  value: 'Pink',\n  label: 'Pink'\n}, {\n  value: 'Peach',\n  label: 'Peach'\n}, {\n  value: 'Purple',\n  label: 'Purple'\n}, // R\n{\n  value: 'Red',\n  label: 'Chocolate'\n}, {\n  value: 'Rose',\n  label: 'Rose'\n}, {\n  value: 'Red-Violet',\n  label: 'Red-Violet'\n}, // S\n{\n  value: 'Silver',\n  label: 'Silver'\n}, {\n  value: 'Sky-Blue',\n  label: 'Sky-Blue'\n}, // T\n{\n  value: 'Tan',\n  label: 'Tan'\n}, {\n  value: 'Teal',\n  label: 'Teal'\n}, {\n  value: 'Turquoise',\n  label: 'Turquoise'\n}, // V\n{\n  value: 'Violet',\n  label: 'Violet'\n}, // W\n{\n  value: 'White',\n  label: 'White'\n}, // Y\n{\n  value: 'Yellow',\n  label: 'Yellow'\n}]; // Option List for select Product Category (when offline)\n\nconst product_category_options = [{\n  value: 'Shoe',\n  label: 'Shoe'\n}, {\n  value: 'Cloth',\n  label: 'Cloth'\n}, {\n  value: 'Shirt',\n  label: 'Shirt'\n}, {\n  value: 'Pant',\n  label: 'Pant'\n}]; // For React-Select\n\nconst components = {\n  DropdownIndicator: null\n}; // Model For React-Select\n\nconst createOption = label => ({\n  label,\n  value: label\n}); // Yup Schema for validation fields\n\n\nconst schema = yup.object({\n  product_name: yup.string().required(\"Enter Product Name\").min(5, \"Must have at least 5 characters\").max(50, \"Can't be longer than 20 characters\"),\n  product_brand_name: yup.string().min(5, \"Must have at least 5 characters\").max(20, \"Can't be longer than 20 characters\"),\n  product_price: yup.number().required('Enter Product Price').integer(\"Enter Only Numbers\").positive('Enter Between 1-1000000').max(1000000, 'Enter Between 1-1000000'),\n  product_size: yup.string(),\n  product_color: yup.string(),\n  product_category: yup.string(),\n  product_in_stock: yup.string().required(\"Enter Products in Stock\").max(20, \"Can't be longer than 20 characters\"),\n  product_warranty: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-200').max(200, 'Enter Between 0-200'),\n  warranty_type: yup.string(),\n  product_discount: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-100').max(100, 'Enter Between 0-100'),\n  product_description: yup.string().min(5, \"Must have at least 5 characters\").max(50, \"Can't be longer than 20 characters\"),\n  product_shipping_cost: yup.number().integer(\"Enter Only Numbers\").min(0, 'Enter Between 0-100').max(100, 'Enter Between 0-100'),\n  product_image_link: yup.string()\n});\n\nclass Products extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleProductSizeChange\", (newValue, actionMeta) => {\n      console.log(\"actionMeta:\", actionMeta);\n      this.setState({\n        size: newValue,\n        sizeError: 'no_error',\n        sizeErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleProductColorChange\", (newValue, actionMeta) => {\n      this.setState({\n        color: newValue,\n        colorError: 'no_error',\n        colorErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleProductCategoryChange\", arr => {\n      this.setState({\n        category: arr,\n        categoryError: 'no_error',\n        categoryErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleImage_linkChange\", (newValue, actionMeta) => {\n      this.setState({\n        image_link: newValue,\n        image_linkError: 'no_error',\n        image_linkErrorDiv: 'BorderDiv'\n      });\n    });\n\n    _defineProperty(this, \"handleImageLinkInputChange\", aa => {\n      this.setState({\n        inputValue: aa\n      });\n    });\n\n    _defineProperty(this, \"handleImage_linkKeyDown\", event => {\n      const inputValue = this.state.inputValue;\n      const image_link = this.state.image_link;\n      if (!inputValue) return;\n\n      switch (event.key) {\n        case 'Enter':\n        case 'Tab':\n          this.setState({\n            inputValue: '',\n            image_link: [...image_link, createOption(inputValue)]\n          });\n          event.preventDefault();\n      }\n    });\n\n    this.state = {\n      categoryList: product_category_options,\n      size: [],\n      color: [],\n      category: [],\n      warrantyType: 'Year',\n      inputValue: '',\n      image_link: [],\n      // Handling errors for React-Select\n      sizeError: 'no_error',\n      sizeErrorDiv: 'BorderDiv',\n      colorError: 'no_error',\n      colorErrorDiv: 'BorderDiv',\n      categoryError: 'no_error',\n      categoryErrorDiv: 'BorderDiv',\n      image_linkError: 'no_error',\n      image_linkErrorDiv: 'BorderDiv'\n    };\n  } // Product Size\n\n\n  // Getting Product Categories from DB\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      this.setState({\n        categoryList: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  } //  Submit data to api\n\n\n  uploadData(data) {\n    const url = MuhalikConfig.PATH + '/api/products/add';\n    axios.post(url, {\n      data\n    }).then(function (response) {\n      alert(response.data.message);\n    }).catch(function (error) {\n      alert(error);\n    });\n  }\n\n  render() {\n    const {\n      inputValue,\n      image_link\n    } = this.state;\n    return __jsx(Formik, {\n      validationSchema: schema,\n      initialValues: {\n        product_name: '',\n        product_brand_name: '',\n        product_price: '',\n        product_size: '',\n        product_color: '',\n        product_category: '',\n        product_in_stock: 1,\n        product_warranty: 0,\n        warranty_type: 'Year',\n        product_discount: 0,\n        product_description: '',\n        product_shipping_cost: 40,\n        product_image_link: ''\n      },\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n\n        if (this.state.size == '' || this.state.color == '' || this.state.category == '' || this.state.image_link == '') {\n          if (this.state.size == '') {\n            this.setState({\n              sizeError: \"error\",\n              sizeErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.color == '') {\n            this.setState({\n              colorError: \"error\",\n              colorErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.category == '') {\n            this.setState({\n              categoryError: \"error\",\n              categoryErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          if (this.state.image_link == '') {\n            this.setState({\n              image_linkError: \"error\",\n              image_linkErrorDiv: 'RedBorderDiv'\n            });\n          }\n\n          setSubmitting(false);\n        } else {\n          resetForm();\n          setSubmitting(false);\n          setTimeout(() => {\n            // this.uploadData(values);\n            values.product_size = this.state.size;\n            values.product_color = this.state.color;\n            values.product_category = this.state.category;\n            values.product_image_link = this.state.image_link;\n            console.log(\"Data Values:\", JSON.stringify(values, null, 2));\n            alert(JSON.stringify(values, null, 2));\n            this.setState({\n              size: [],\n              color: [],\n              category: [],\n              image_link: [],\n              inputValue: ''\n            });\n            resetForm();\n            setSubmitting(false);\n          }, 500);\n        }\n      }\n    }, ({\n      handleSubmit,\n      handleChange,\n      values,\n      touched,\n      isValid,\n      errors,\n      handleBlur,\n      isSubmitting\n    }) => __jsx(\"div\", {\n      className: \"jsx-4109852584\"\n    }, __jsx(Row, {\n      style: styles.row\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, {\n      style: {\n        background: 'skyblue'\n      }\n    }, \"Upload Products\"), __jsx(Card.Body, null, __jsx(Form, {\n      noValidate: true,\n      onSubmit: handleSubmit\n    }, __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Name\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \"*\")), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Product Name\",\n      name: \"product_name\",\n      value: values.product_name,\n      onChange: handleChange,\n      isInvalid: touched.product_name && errors.product_name\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_name))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Brand Name\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Brand Name\",\n      name: \"product_brand_name\",\n      value: values.product_brand_name,\n      onChange: handleChange,\n      isInvalid: touched.product_brand_name && errors.product_brand_name\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_brand_name))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Price\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \"*\")), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"number\",\n      placeholder: \"Enter Product Price\",\n      name: \"product_price\",\n      value: values.product_price,\n      onChange: handleChange,\n      isInvalid: touched.product_price && errors.product_price\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_price)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Size\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \" * \")), __jsx(\"div\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.sizeErrorDiv || \"\")\n    }, __jsx(CreatableSelect, {\n      isMulti: true,\n      onChange: this.handleProductSizeChange,\n      options: product_size_options,\n      value: this.state.size,\n      placeholder: \"Select/Enter Size\"\n    })), __jsx(\"text\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.sizeError || \"\")\n    }, \"Select/Enter Size \")), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Color\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \" * \")), __jsx(\"div\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.colorErrorDiv || \"\")\n    }, __jsx(CreatableSelect, {\n      isMulti: true,\n      onChange: this.handleProductColorChange,\n      options: product_color_options,\n      value: this.state.color,\n      placeholder: \"Select/Enter Color\"\n    })), __jsx(\"text\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.colorError || \"\")\n    }, \"Select/Enter Color \")), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Category\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \" * \")), __jsx(\"div\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.categoryErrorDiv || \"\")\n    }, __jsx(Select, {\n      closeMenuOnSelect: false,\n      isMulti: true,\n      onChange: this.handleProductCategoryChange,\n      value: this.state.category,\n      placeholder: \"Select Category\",\n      options: this.state.categoryList\n    })), __jsx(\"text\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.categoryError || \"\")\n    }, \"Select Category \"))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product in Stock\"), __jsx(Form.Control, {\n      type: \"number\",\n      name: \"product_in_stock\",\n      value: values.product_in_stock,\n      onChange: handleChange,\n      isInvalid: touched.product_in_stock && errors.product_in_stock\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_in_stock)), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Warranty \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"number\",\n      placeholder: \"Enter Product Warranty\",\n      name: \"product_warranty\",\n      value: values.product_warranty,\n      onChange: handleChange,\n      isInvalid: touched.product_warranty && errors.product_warranty\n    }), __jsx(InputGroup.Prepend, null, __jsx(Form.Control, {\n      as: \"select\",\n      name: \"warranty_type\",\n      value: values.warranty_type,\n      onChange: handleChange,\n      isInvalid: touched.warranty_type && errors.warranty_type\n    }, __jsx(\"option\", {\n      className: \"jsx-4109852584\"\n    }, \"Year\"), __jsx(\"option\", {\n      className: \"jsx-4109852584\"\n    }, \" Month \"), __jsx(\"option\", {\n      className: \"jsx-4109852584\"\n    }, \" Life Time \"))), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_warranty))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Discount\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"number\",\n      placeholder: \"Enter Discount on on Product(%)\",\n      name: \"product_discount\",\n      value: values.product_discount,\n      onChange: handleChange,\n      isInvalid: touched.product_discount && errors.product_discount\n    }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n      variant: \"primary\"\n    }, \"%\")), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_discount)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col,\n      lg: 8,\n      md: 8,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Description \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Product Description\",\n      name: \"product_description\",\n      value: values.product_description,\n      onChange: handleChange,\n      isInvalid: touched.product_description && errors.product_description\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_description))), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 12,\n      xs: 12\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Shipping Price\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Shipping Price\",\n      name: \"product_shipping_cost\",\n      value: values.product_shipping_cost,\n      onChange: handleChange,\n      isInvalid: touched.product_shipping_cost && errors.product_shipping_cost\n    }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n      variant: \"primary\"\n    }, \"Riyal\")), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, errors.product_shipping_cost)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(Form.Label, {\n      style: styles.label\n    }, \"Product Images Link(s)\", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \"*\")), __jsx(\"div\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.image_linkErrorDiv || \"\")\n    }, __jsx(CreatableSelect, {\n      components: components,\n      inputValue: inputValue,\n      isClearable: true,\n      isMulti: true,\n      menuIsOpen: false,\n      onChange: this.handleImage_linkChange,\n      onInputChange: this.handleImageLinkInputChange,\n      onKeyDown: this.handleImage_linkKeyDown,\n      placeholder: \"Enter Image Link\",\n      value: image_link\n    })), __jsx(\"text\", {\n      className: \"jsx-4109852584\" + \" \" + (this.state.image_linkError || \"\")\n    }, \"Enter Image Link \"))), __jsx(Form.Row, null, __jsx(Form.Group, {\n      as: Col\n    }, __jsx(\"p\", {\n      style: styles.label,\n      className: \"jsx-4109852584\"\n    }, \"Fields with \", __jsx(\"span\", {\n      className: \"jsx-4109852584\"\n    }, \" * \"), \" are mandatory.\"), __jsx(\"p\", {\n      style: styles.label,\n      className: \"jsx-4109852584\"\n    }, \"For adding new size, color, link: Enter text and hit Enter or Tab key\"), __jsx(Button, {\n      type: \"submit\",\n      onSubmit: handleSubmit,\n      block: true,\n      style: styles.submit_btn\n    }, \"Signup\"))))))), __jsx(_JSXStyle, {\n      id: \"4109852584\"\n    }, [\".no_error.jsx-4109852584{display:none;}\", \".error.jsx-4109852584{margin-top:4px;color:#DC3545;font-size:14px;display:block;}\", \".RedBorderDiv.jsx-4109852584{border:0.5px solid #DC3545;}\", \".BorderDiv.jsx-4109852584{border:none;}\", \"span.jsx-4109852584{color:red;}\", \"p.jsx-4109852584{text-align:center;margin:0px;}\"])));\n  }\n\n}\n\nconst styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%' // padding: '2%'\n\n  },\n  buttons: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    border: 'none',\n    fontSize: '10px'\n  },\n  submit_btn: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    marginTop: '3%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  term_condition_label: {\n    width: '100%',\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    paddingTop: '-10px',\n    marginTop: '-10px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default Products;","map":null,"metadata":{},"sourceType":"module"}