{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\all-products.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Row, Table, Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: []\n    };\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products/';\n\n    try {\n      const response = await axios.get(url);\n      console.log('data:', response.data.data.docs);\n      this.setState({\n        productsArray: response.data.data.docs\n      });\n    } catch (error) {\n      console.log('Data Fetching Eror:', error);\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      noGutters: true,\n      style: {\n        margin: '2%',\n        background: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, __jsx(Table, {\n      striped: true,\n      responsive: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      style: styles.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    }, __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Check, {\n      type: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 37\n      }\n    })), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 33\n      }\n    }, \"Name\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, \"SKU\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 33\n      }\n    }, \"Stock\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 33\n      }\n    }, \"Price\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 33\n      }\n    }, \"Categories\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 33\n      }\n    }, \"Tags\"), __jsx(\"th\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, \"Date\"))), __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, this.state.productsArray && this.state.productsArray.map((element, index) => {\n      __jsx(React.Fragment, null, _.isEqual(element.product_type, 'simple-product') ? __jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 41\n        }\n      }, __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 45\n        }\n      }, __jsx(Form.Check, {\n        type: \"checkbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 85\n        }\n      })), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 45\n        }\n      }, element.product_name), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 45\n        }\n      }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }\n      }, element.product_in_stock), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 45\n        }\n      }, element.product_price), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 45\n        }\n      }, element.product_category[0].value), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, _.isEmpty(element.product_tags) ? '-' : element.product_tags[0].value), __jsx(\"td\", {\n        align: \"center\",\n        style: styles.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 45\n        }\n      }, \"Date\")) : null);\n    })))));\n  }\n\n}\n\nconst styles = {\n  // table: {\n  //     margin: '2%'\n  // },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  }\n};\nexport default AllProducts;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js"],"names":["React","Component","Row","Table","Form","axios","MuhalikConfig","GlobalStyleSheet","AllProducts","constructor","props","state","productsArray","componentDidMount","url","PATH","response","get","console","log","data","docs","setState","error","render","margin","background","styles","table","textAlign","map","element","index","_","isEqual","product_type","label","product_name","sku","product_in_stock","product_price","product_category","value","isEmpty","product_tags","fontSize","form_label_fontsize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Table, Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\n\r\nclass AllProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productsArray: [],\r\n        }\r\n    }\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products/';\r\n        try {\r\n            const response = await axios.get(url);\r\n            console.log('data:', response.data.data.docs)\r\n            this.setState({ productsArray: response.data.data.docs })\r\n        } catch (error) {\r\n            console.log('Data Fetching Eror:', error);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n                    <Table striped responsive bordered hover size=\"sm\" style={styles.table}>\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ textAlign: 'center' }}>\r\n                                    <Form.Check type=\"checkbox\" />\r\n                                </th>\r\n                                <th style={{ textAlign: 'center' }}>Name</th>\r\n                                <th style={{ textAlign: 'center' }}>SKU</th>\r\n                                <th style={{ textAlign: 'center' }}>Stock</th>\r\n                                <th style={{ textAlign: 'center' }}>Price</th>\r\n                                <th style={{ textAlign: 'center' }}>Categories</th>\r\n                                <th style={{ textAlign: 'center' }}>Tags</th>\r\n                                <th style={{ textAlign: 'center' }}>Date</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.productsArray && this.state.productsArray.map((element, index) => {\r\n                                <>\r\n                                    {_.isEqual(element.product_type, 'simple-product') ?\r\n                                        <tr>\r\n                                            <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_name}</td>\r\n\r\n                                            <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_price}</td>\r\n                                            <td align=\"center\" style={styles.label}>{element.product_category[0].value}</td>\r\n                                            <td align=\"center\" style={styles.label}>{_.isEmpty(element.product_tags) ? '-' : element.product_tags[0].value}</td>\r\n                                            <td align=\"center\" style={styles.label}>Date</td>\r\n                                        </tr>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </>\r\n                            }\r\n                            )}\r\n                        </tbody>\r\n                    </Table>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    // table: {\r\n    //     margin: '2%'\r\n    // },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n}\r\nexport default AllProducts;"]},"metadata":{},"sourceType":"module"}