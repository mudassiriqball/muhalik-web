{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { Row, Modal, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap';\nimport axios from 'axios';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'; // import ViewProduct from './all-products-contents/view-product'\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\nimport CardAccordion from '../../../../card_accordion';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\nimport TitleRow from '../../../../title-row';\nimport AddNew from './add-new';\nimport AlertModal from '../../../../alert-modal';\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showConfirmDeleteModal: false,\n      showToast: false,\n      productsArray: [],\n      showProduct: false,\n      data: {}\n    };\n  }\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products/';\n    const currentComponent = this;\n    await axios.get(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(response => {\n      console.log('data:', response.data.data);\n      currentComponent.setState({\n        productsArray: response.data.data\n      });\n    }).catch(error => {\n      alert('Data Fetchig Error: ', error);\n    });\n  }\n\n  handleEditProduct(index) {\n    console.log('edit called');\n    let element = [];\n\n    if (index == -1) {\n      element = this.state.data;\n    } else {\n      element = this.state.productsArray[index];\n    }\n\n    if (element.product_type != 'simple-product') {\n      let array = [];\n      let variations = element.product_variations;\n      variations.forEach((element, i) => {\n        array.push({\n          item: element.item,\n          price: element.price,\n          stock: element.stock,\n          image_link: element.image_link,\n          price_error: '',\n          stock_error: '',\n          image_link_error: '',\n          custom_fields: element.custom_fields\n        });\n      });\n      element.product_variations = array;\n    } else {\n      element.product_variations = [];\n    }\n\n    this.setState({\n      data: element,\n      showProduct: 'edit'\n    });\n  }\n\n  async handleDeleteProduct() {\n    const _id = this.state.data._id;\n    console.log('fuck fuck', _id);\n    const url = MuhalikConfig.PATH + `/api/products/${_id}`;\n    this.setState({\n      showConfirmDeleteModal: false\n    });\n    const currentComponent = this;\n    await axios.delete(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(function (response) {\n      const copyArray = Object.assign([], currentComponent.state.productsArray);\n      let array = copyArray;\n      copyArray.forEach((element, i) => {\n        if (element._id == _id) {\n          array.splice(i, 1);\n          return;\n        }\n      });\n      currentComponent.setState({\n        productsArray: array,\n        showToast: true\n      });\n    }).catch(function (error) {\n      try {\n        alert('Error Message: ', error.response.data.message);\n      } catch (err) {\n        console.log('Error: ', error);\n      }\n    });\n  }\n\n  isVariableProduct(element) {\n    if (element.product_type != \"simple-product\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  renderSwitch(param) {\n    switch (param) {\n      case 'view':\n        return __jsx(ViewProduct, {\n          data: this.state.data,\n          back: () => this.setState({\n            showProduct: false,\n            data: {}\n          }),\n          isVariableProduct: this.state.data.product_type != \"simple-product\",\n          delete: () => this.setState({\n            showConfirmDeleteModal: true\n          }),\n          edit: () => this.handleEditProduct(-1)\n        });\n        break;\n\n      case 'edit':\n        return __jsx(AddNew, {\n          title: 'Vendor Dashboard / All Products / Update',\n          isUpdateProduct: true,\n          _id: this.state.data._id,\n          isVariableProduct: this.state.data.product_type != 'simple-product',\n          back: () => this.setState({\n            showProduct: false,\n            data: {}\n          }),\n          view: () => this.setState({\n            showProduct: 'view'\n          }),\n          delete: () => this.setState({\n            showConfirmDeleteModal: true,\n            showProduct: false\n          }),\n          productCategories: this.state.data.product_category,\n          productSubCategories: this.state.data.product_sub_category,\n          productTags: this.state.data.product_tags,\n          warrantyType: this.state.data.warranty_type,\n          simple_product_image_link: this.state.data.product_image_link,\n          variationsArray: this.state.data.product_variations,\n          dangerousGoodsArray: this.state.data.dangerous_goods,\n          product_name: this.state.data.product_name,\n          product_description: this.state.data.product_description,\n          product_type: 'variable-product',\n          product_type: this.state.data.product_type,\n          sku: this.state.data.sku,\n          product_price: this.state.data.product_price,\n          product_in_stock: this.state.data.product_in_stock,\n          product_brand_name: this.state.data.product_brand_name,\n          product_warranty: this.state.data.product_warranty,\n          warranty_type: this.state.data.warranty_type,\n          product_discount: this.state.data.product_discount,\n          purchase_note: this.state.data.purchase_note,\n          product_weight: this.state.data.product_weight,\n          dimension_length: this.state.data.dimension_length,\n          dimension_width: this.state.data.dimension_width,\n          dimension_height: this.state.data.dimension_height,\n          shipping_charges: this.state.data.shipping_charges,\n          handling_fee: this.state.data.handling_fee\n        });\n        break;\n\n      default:\n        return __jsx(React.Fragment, null, __jsx(TitleRow, {\n          icon: faPlus,\n          title: ' Vendor Dashboard / All Products'\n        }), __jsx(Row, {\n          noGutters: true,\n          style: {\n            margin: '2%',\n            background: 'white'\n          }\n        }, __jsx(Table, {\n          responsive: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\"\n        }, __jsx(\"thead\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"tr\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"#\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Name\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Product ID\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Product Type\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"SKU\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Stock\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Price\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Categories\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Date\"))), __jsx(\"tbody\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, this.state.productsArray && this.state.productsArray.map((element, index) => __jsx(React.Fragment, null, this.isVariableProduct(element) ? __jsx(\"tr\", {\n          key: index,\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, index + 1), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.setState({\n            data: element,\n            showProduct: 'view'\n          })\n        }, \" View \"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleEditProduct(index)\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.setState({\n            data: element,\n            showConfirmDeleteModal: true,\n            showProduct: false\n          })\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element._id), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_type), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(e => e.stock + ',')), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(e => e.price + ',')), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_category.value + ' => ' + element.product_sub_category.value), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_entry_date)) : __jsx(React.Fragment, null, __jsx(\"tr\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, index + 1), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.setState({\n            data: element,\n            showProduct: 'view'\n          })\n        }, \"View\"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleEditProduct(index)\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.setState({\n            data: element,\n            showConfirmDeleteModal: true,\n            showProduct: false\n          })\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element._id), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_type), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_in_stock), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_price), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_category.value + ' => ' + element.product_sub_category.value), __jsx(\"td\", {\n          align: \"center\",\n          className: _JSXStyle.dynamic([[\"2661101606\", [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_entry_date)))))))), __jsx(_JSXStyle, {\n          id: \"2661101606\",\n          dynamic: [GlobalStyleSheet.form_label_fontsize, GlobalStyleSheet.form_label_fontsize]\n        }, [`.td.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:${GlobalStyleSheet.form_label_fontsize};}`, `td.__jsx-style-dynamic-selector{vertical-align:middle;font-size:${GlobalStyleSheet.form_label_fontsize};}`]));\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(ConfirmDeleteModal, {\n      onHide: () => this.setState({\n        showConfirmDeleteModal: false\n      }),\n      show: this.state.showConfirmDeleteModal,\n      _id: this.state.data._id,\n      product_name: this.state.data.product_name,\n      confirmDelete: this.handleDeleteProduct.bind(this)\n    }), __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showToast: false\n      }),\n      show: this.state.showToast,\n      header: 'Success',\n      message: 'Product Deleted Successfully.',\n      iconName: faThumbsUp,\n      color: \"#00b300\"\n    }), __jsx(\"div\", null, this.renderSwitch(this.state.showProduct)));\n  }\n\n}\n\nconst ViewProduct = props => {\n  const [imgPreview, setImgPreview] = React.useState(false);\n  const [index, setIndex] = React.useState('');\n  const [imgData, setImgData] = React.useState('');\n  const len = props.data.product_image_link.length;\n\n  function prevImage() {\n    if (index > 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  function nextImage() {\n    if (index < len - 1) {\n      setIndex(index + 1);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(TitleRow, {\n    icon: faPlus,\n    title: ` Vendor Dashboard / All Products / ${props.data.product_name}`\n  }), __jsx(Form.Row, {\n    style: {\n      margin: ' 0% 2%',\n      display: 'flex',\n      alignItems: 'center'\n    }\n  }, __jsx(Nav.Link, {\n    style: {\n      fontSize: '14px'\n    },\n    className: \"mr-auto\",\n    onClick: props.back\n  }, \"Back\"), __jsx(\"div\", {\n    style: {\n      fontSize: '14px'\n    },\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }, \" \", props.data.product_name), __jsx(Nav.Link, {\n    style: {\n      fontSize: '14px'\n    },\n    onClick: props.edit\n  }, \" Edit \"), __jsx(Nav.Link, {\n    style: {\n      fontSize: '14px'\n    },\n    onClick: props.delete\n  }, \" Delete \")), __jsx(CardAccordion, {\n    title: 'General Info'\n  }, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Name:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_name,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Brand Name:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_brand_name,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"SKU:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.sku,\n    disabled: true\n  }))), props.isVariableProduct ? null : __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Price:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_price,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product In Stock:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_in_stock,\n    disabled: true\n  })))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Warranty (month):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_warranty,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Warranty Type:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.warranty_type,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Discount (%):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_discount,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Purchase Note(s):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.purchase_note,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Description:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    as: \"textarea\",\n    row: \"5\",\n    size: \"sm\",\n    value: props.data.product_description,\n    disabled: true\n  }))))), props.isVariableProduct ? __jsx(CardAccordion, {\n    title: 'Product Variations'\n  }, props.data.product_variations && props.data.product_variations.map(element => __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Price\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: element.price,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Stock\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: element.stock,\n    disabled: true\n  }))), element.item && element.item.map(e => __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, e.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: e.value,\n    disabled: true\n  }))))), element.custom_fields && element.custom_fields.map(e => __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, e.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: e.value,\n    disabled: true\n  })))))), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  })))) : __jsx(React.Fragment, null, __jsx(CardAccordion, {\n    title: 'Custom Fields'\n  }, props.data.custom_fields && props.data.custom_fields.map(element => __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, element.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: element.value,\n    disabled: true\n  })))))), __jsx(CardAccordion, {\n    title: 'Product Images'\n  }, props.data.product_image_link && props.data.product_image_link.map((element, index) => __jsx(Image, {\n    thumbnail: true,\n    fluid: true,\n    style: {\n      minWidth: '200px',\n      maxWidth: '200px'\n    },\n    src: `https://drive.google.com/uc?export=view&id=${element.value}`,\n    alt: \"Product Image\",\n    onClick: () => {\n      setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link);\n    }\n  })))), __jsx(CardAccordion, {\n    title: 'Shipping Details'\n  }, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Length (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_length,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Width (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_width,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Height (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_height,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Weight (kg):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_weight,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Shipping Charges:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.shipping_charges,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Handlink Fee:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.handling_fee,\n    disabled: true\n  }))))), __jsx(CardAccordion, {\n    title: 'Product Categories'\n  }, __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '13px',\n      fontWeight: 'bold'\n    }\n  }, \"Product Categories:\"), __jsx(InputGroup, null, __jsx(Form.Label, {\n    style: styles.label\n  }, props.data.product_category.value + ' => ' + props.data.product_sub_category.value))), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  }), __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '13px',\n      fontWeight: 'bold'\n    }\n  }, \"Product Tags:\"), __jsx(InputGroup, null, props.data.product_tags && props.data.product_tags.map(element => __jsx(Form.Label, {\n    style: styles.label\n  }, element.value)))), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  }), __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '13px',\n      fontWeight: 'bold'\n    }\n  }, \"Dangerous Goods:\"), __jsx(InputGroup, null, props.data.dangerous_goods && props.data.dangerous_goods.map(element => __jsx(Form.Label, {\n    style: styles.label\n  }, element.value))))), imgPreview ? __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"modal-overlay\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"modal-body\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"close-modal\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    className: \"mr-auto\",\n    icon: faChevronLeft,\n    style: styles.img_preview_fontawesome,\n    onClick: () => prevImage\n  }), __jsx(FontAwesomeIcon, {\n    className: \"mr-auto\",\n    icon: faChevronRight,\n    style: styles.img_preview_fontawesome,\n    onClick: nextImage\n  }), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    style: styles.img_preview_fontawesome,\n    onClick: () => setImgPreview(false)\n  })), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"image-container\"\n  }, __jsx(\"img\", {\n    src: imgData[index].value,\n    style: {\n      maxWidth: '100%',\n      maxHeight: '90vh',\n      margin: 'auto'\n    },\n    className: \"jsx-1902595393\"\n  })))) : null, __jsx(_JSXStyle, {\n    id: \"1902595393\"\n  }, [\".modal-overlay.jsx-1902595393{position:fixed;top:0;left:0;bottom:0;right:0;z-index:10;width:100%;height:100%;background:rgba(21,21,21,0.75);}\", \".modal-body.jsx-1902595393{position:relative;z-index:11;margin:2.5%;overflow:hidden;max-width:100%;max-height:100%;}\", \".close-modal.jsx-1902595393{position:fixed;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;top:10px;left:0;right:0;width:100%;}\", \".image-container.jsx-1902595393{display:grid;height:100%;}\"]));\n};\n\nconst styles = {\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  nav_link: {\n    paddingLeft: '10px',\n    paddingRight: '5px'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '2%'\n  },\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  img_preview_fontawesome: {\n    cursor: 'pointer',\n    color: 'white',\n    fontWeight: 'lighter',\n    width: '30px',\n    height: '30px',\n    maxHeight: '30px',\n    maxWidth: '30px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '17px',\n    height: '17px',\n    maxHeight: '17px',\n    maxWidth: '17px'\n  },\n  general_info_label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    width: '100%',\n    borderBottom: '1px solid gray'\n  },\n  field_label: {\n    border: `1px solid ${GlobalStyleSheet.body_color}`,\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    margin: '0%',\n    width: '100%',\n    padding: '2px 5px'\n  },\n  card: {\n    width: '100%',\n    border: '1px solid lightgray'\n  },\n  card_header: {\n    alignItems: 'center',\n    fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n    background: `${GlobalStyleSheet.card_header_background}`\n  }\n};\nexport default AllProducts;\n\nfunction ConfirmDeleteModal(props) {\n  return __jsx(Modal, _extends({}, props, {\n    size: \"md\",\n    \"aria-labelledby\": \"alert-modal\",\n    centered: true\n  }), __jsx(\"div\", {\n    style: {\n      border: '1px solid #ff3333',\n      borderRadius: '5px'\n    }\n  }, __jsx(Modal.Header, {\n    closeButton: true,\n    style: {\n      color: '#ff3333',\n      borderBottom: '1px solid #ff3333'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faTrash,\n    style: {\n      color: '#ff3333',\n      marginRight: '10px',\n      width: '35px',\n      height: '35px',\n      maxHeight: '35px',\n      maxWidth: '35px'\n    }\n  }), __jsx(Modal.Title, {\n    id: \"alert-modal\"\n  }, 'Delete Product ?')), __jsx(Modal.Body, null, __jsx(Form.Label, {\n    style: {\n      fontSize: '14px',\n      padding: '0%',\n      margin: '0%'\n    }\n  }, `Product Name: ${props.product_name}`, `Product ID: ${props._id}`)), __jsx(Modal.Footer, null, __jsx(Button, {\n    size: \"sm\",\n    variant: \"outline-danger\",\n    className: \"mr-auto\",\n    onClick: props.confirmDelete\n  }, \"Confirm\"), __jsx(Button, {\n    size: \"sm\",\n    variant: \"outline-primary\",\n    onClick: props.onHide\n  }, \"Cancel\"))));\n} // import React, { Component } from 'react';\n// import CreatableSelect from 'react-select/creatable';\n// const colourOptions = [{ label: '111', value: '111' }]\n// export default class AllProducts extends Component {\n//     handleChange = (newValue) => {\n//         console.log('Value Changed', newValue);\n//     };\n//     render() {\n//         return (\n//             <CreatableSelect\n//                 isMulti\n//                 onChange={this.handleChange}\n//                 options={colourOptions}\n//             />\n//         );\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}