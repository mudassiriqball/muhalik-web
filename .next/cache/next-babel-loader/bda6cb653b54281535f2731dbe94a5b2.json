{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons';\nimport CreatableSelect from 'react-select/creatable';\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\nimport Select, { components } from 'react-select';\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nimport AddNewFieldNameModal from './add-new-field-name-model';\nconst groupStyles = {\n  border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\n  borderRadius: '5px',\n  background: 'white',\n  color: `${GlobalStyleSheet.admin_primry_color}`\n};\n\nconst Group = props => __jsx(\"div\", {\n  style: groupStyles\n}, __jsx(components.Group, props));\n\nconst ProductData = props => {\n  const [imgLinkValue, setImgLinkValue] = React.useState('');\n  const [imgLinkError, setImgLinkError] = React.useState('');\n  return __jsx(Accordion, {\n    as: Row,\n    style: {\n      margin: '2%'\n    },\n    defaultActiveKey: \"0\"\n  }, __jsx(Card, {\n    style: styles.card\n  }, __jsx(Card.Header, {\n    style: styles.card_header\n  }, \"Product Data\", __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + 'mr-auto'\n  }), __jsx(Form.Control, {\n    style: {\n      width: '50%'\n    },\n    as: \"select\",\n    name: \"product_type\",\n    size: \"sm\",\n    value: props.product_type_values,\n    onChange: e => {\n      props.onChange(e), props.productTypeHandler(e);\n    } // disabled={props.isUpdateProduct}\n\n  }, __jsx(\"option\", {\n    value: \"simple-product\",\n    className: \"jsx-3282219053\"\n  }, \" Simple Product \"), __jsx(\"option\", {\n    value: \"variable-prouct\",\n    className: \"jsx-3282219053\"\n  }, \" Variable Product \")), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + 'mr-auto'\n  }), __jsx(Accordion.Toggle, {\n    eventKey: \"0\",\n    style: {\n      background: 'none'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.slider_fontawesome\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(Card.Body, {\n    style: {\n      padding: '0.5%',\n      margin: '0px'\n    }\n  }, __jsx(Tab.Container, {\n    id: \"left-tabs-example\",\n    defaultActiveKey: \"Inventory\"\n  }, __jsx(Row, {\n    style: {\n      margin: '0px',\n      minHeight: '300px'\n    },\n    noGutters: true\n  }, __jsx(Col, {\n    lg: \"auto\",\n    md: \"auto\",\n    sm: \"auto\",\n    xs: \"auto\",\n    style: {\n      background: `${GlobalStyleSheet.admin_primry_color}`\n    }\n  }, __jsx(Nav, {\n    variant: \"pills\",\n    className: \"flex-column\",\n    style: {\n      margin: '0px'\n    }\n  }, __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Inventory\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faStoreAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" Inventory \")))), props.isVariableProduct ? __jsx(React.Fragment, null, __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Attributes\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faListAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" Attributes \")))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Variations\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faListAlt,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" Variations \"))))) : __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"General\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" General \")))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Shipping\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faTruck,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" Shipping \")))), __jsx(Nav.Item, null, __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"nav_link\"\n  }, __jsx(Nav.Link, {\n    eventKey: \"Advanced\",\n    style: styles.nav_link\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faTools,\n    style: styles.product_fontawesome\n  }), __jsx(\"div\", {\n    className: \"jsx-3282219053\" + \" \" + \"linkName\"\n  }, \" Advanced \")))))), __jsx(Col, {\n    style: {\n      padding: '2%'\n    }\n  }, __jsx(Tab.Content, null, __jsx(Tab.Pane, {\n    eventKey: \"General\"\n  }, props.isVariableProduct ? null : __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Price \", __jsx(\"span\", {\n    className: \"jsx-3282219053\"\n  }, \" * \")), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Price\",\n    name: \"product_price\",\n    value: props.product_price_values,\n    onChange: props.onChange,\n    isInvalid: props.product_price_touched && props.product_price_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_price_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product in Stock\", __jsx(\"span\", {\n    className: \"jsx-3282219053\"\n  }, \" * \")), __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    name: \"product_in_stock\",\n    placeholder: \"Enter Product In Stock\",\n    value: props.product_in_stock_values,\n    onChange: props.onChange,\n    isInvalid: props.product_in_stock_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_in_stock_errors)), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Brand Name\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Brand Name\",\n    name: \"product_brand_name\",\n    value: props.product_brand_name_values,\n    onChange: props.onChange,\n    isInvalid: props.product_brand_name_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_brand_name_errors)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12,\n    style: {\n      marginBottom: '5px'\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Images \", __jsx(\"span\", {\n    className: \"jsx-3282219053\"\n  }, \" * \")), __jsx(\"input\", {\n    type: \"file\",\n    style: {\n      margin: '0% 2%',\n      fontSize: '13px'\n    },\n    multiple: true,\n    onChange: props.fileSelectedHandler,\n    name: \"image\",\n    accept: \"image/*\",\n    className: \"jsx-3282219053\"\n  }), __jsx(Form.Label, {\n    style: styles.label\n  }, __jsx(\"span\", {\n    className: \"jsx-3282219053\"\n  }, imgLinkError)))), __jsx(Form.Row, null, (props.imagePreviewArray || []).map((url, index) => __jsx(\"div\", {\n    key: index,\n    className: \"jsx-3282219053\" + \" \" + \"show-image\"\n  }, __jsx(\"img\", {\n    style: {\n      height: '100px',\n      width: '100px',\n      margin: '1%'\n    },\n    src: url,\n    alt: \"...\",\n    className: \"jsx-3282219053\"\n  }), __jsx(\"input\", {\n    type: \"button\",\n    onClick: () => props.deleteImage(index),\n    value: \"Delete\",\n    className: \"jsx-3282219053\" + \" \" + \"deleteImage\"\n  })))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Warranty (months) \"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Warranty\",\n    name: \"product_warranty\",\n    value: props.product_warranty_values,\n    onChange: props.onChange,\n    isInvalid: props.product_warranty_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_warranty_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Warranty Type \"), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Form.Control, {\n    as: \"select\",\n    name: \"warranty_type\",\n    size: \"sm\",\n    value: props.warranty_type_values,\n    onChange: props.onChange,\n    isInvalid: props.warranty_type_errors\n  }, __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \"Waranty Type\"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" No Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Brand Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Local Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Local Seller Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Non-Local Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Internationsl Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" Internationsl Seller Warranty \"), __jsx(\"option\", {\n    className: \"jsx-3282219053\"\n  }, \" International Manufacturer Warranty \"))), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_warranty_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Discount\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Discount on on Product(%)\",\n    name: \"product_discount\",\n    value: props.product_discount_values,\n    onChange: props.onChange,\n    isInvalid: props.product_discount_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"%\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_discount_errors)))))), __jsx(Tab.Pane, {\n    eventKey: \"Inventory\"\n  }, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product SKU\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter SKU (Stock Keeping Unit)\",\n    name: \"sku\",\n    value: props.sku_values,\n    onChange: props.onChange,\n    isInvalid: props.sku_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.sku_errors))))), __jsx(Tab.Pane, {\n    eventKey: \"Shipping\"\n  }, __jsx(Form.Group, {\n    as: Row,\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Weight (kg)\"), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"product_weight\",\n    size: \"sm\",\n    value: props.product_weight_values,\n    onChange: props.onChange,\n    isInvalid: props.product_weight_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.product_weight_errors)), __jsx(Form.Group, {\n    as: Row,\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Dimensions (cm)\"), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_length\",\n    size: \"sm\",\n    value: props.dimension_length_values,\n    onChange: props.onChange,\n    placeholder: \"Length\",\n    isInvalid: props.dimension_length_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_length_errors)), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_width\",\n    size: \"sm\",\n    value: props.dimension_width_values,\n    placeholder: \"Width\",\n    onChange: props.onChange,\n    isInvalid: props.dimension_width_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_width_errors), __jsx(Form.Control, {\n    type: \"number\",\n    name: \"dimension_height\",\n    size: \"sm\",\n    value: props.dimension_height_values,\n    placeholder: \"Height\",\n    onChange: props.onChange,\n    isInvalid: props.dimension_height_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.dimension_height_errors)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Shipping Charges\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Product Shipping Charges\",\n    name: \"shipping_charges\",\n    value: props.shipping_charges_values,\n    onChange: props.onChange,\n    isInvalid: props.shipping_charges_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"Riyal\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.shipping_charges_errors))), __jsx(Form.Group, {\n    as: Col,\n    lg: 6,\n    md: 6,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Handling Fee\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Product Handling Fee\",\n    name: \"handling_fee\",\n    value: props.handling_fee_values,\n    onChange: props.onChange,\n    isInvalid: props.handling_fee_errors\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    size: \"sm\"\n  }, \"Riyal\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.handling_fee_errors))))), __jsx(Tab.Pane, {\n    eventKey: \"Attributes\"\n  }, __jsx(ProductAttributes, {\n    setVariationsArray: props.setVariationsArray,\n    variationsArray: props.variationsArray\n  })), __jsx(Tab.Pane, {\n    eventKey: \"Variations\"\n  }, __jsx(ProductVariations, {\n    variationsArray: props.variationsArray,\n    setVariationsArray: props.setVariationsArray,\n    setVariationsSaved: props.setVariationsSaved,\n    isVariationsArrayEmpty: props.variationsArray == ''\n  })), __jsx(Tab.Pane, {\n    eventKey: \"Advanced\"\n  }, __jsx(Form.Row, null, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Purchase Note\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Purchase Notes\",\n    name: \"purchase_note\",\n    value: props.purchase_note_values,\n    onChange: props.onChange,\n    isInvalid: props.purchase_note_errors\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.purchase_note_errors))))))))))), __jsx(_JSXStyle, {\n    id: \"3282219053\"\n  }, [\"span.jsx-3282219053{color:red;}\", \"@media (max-width:991px){.linkName.jsx-3282219053{display:none;}}\", \"div.show-image.jsx-3282219053{position:relative;float:left;margin:5px;}\", \"div.show-image.jsx-3282219053:hover img.jsx-3282219053{opacity:0.5;}\", \"div.show-image.jsx-3282219053:hover input.jsx-3282219053{display:block;}\", \"div.show-image.jsx-3282219053 input.jsx-3282219053{position:absolute;display:none;}\", \"div.show-image.jsx-3282219053 input.deleteImage.jsx-3282219053{top:0;left:0;color:red;font-size:13px;}\"]));\n};\n\nfunction ProductAttributes(props) {\n  const [attributeName, setAttributeName] = React.useState('');\n  const [attributeValue, setAttributeValue] = React.useState('');\n  const [error, setError] = React.useState('');\n  const [modalShow, setModalShow] = React.useState(false);\n  const [message, setMessage] = React.useState('');\n  const [attributesArray, setAttributesArray] = React.useState([]);\n\n  function handleAddProductAttributeClick() {\n    setMessage('');\n\n    if (attributeName != '' && attributeValue != '') {\n      setError('');\n      const copyArray = Object.assign([], attributesArray);\n      copyArray.push({\n        attributeName: attributeName.value,\n        attributeValue: attributeValue\n      });\n      setAttributeName('');\n      setAttributeValue('');\n      setAttributesArray(copyArray);\n    } else {\n      setError('Enter Field Name and Value');\n    }\n  }\n\n  function handleDeleteProductAttributeClick(index) {\n    const copyArray = Object.assign([], attributesArray);\n    copyArray.splice(index, 1);\n    setAttributesArray(copyArray);\n  }\n\n  function handleCreateVariationsClick() {\n    if (attributesArray != '') {\n      var allArrays = [];\n      attributesArray.forEach(element => {\n        var item = [];\n        element.attributeValue.map(e => {\n          item.push(e.value);\n        });\n        allArrays.push(item);\n      });\n      const array = allPossibleCases(allArrays);\n      var data = [];\n      array.forEach((element, index) => {\n        const split = element.split('-');\n        let item = [];\n        split.forEach((e, i) => {\n          item.push({\n            name: attributesArray[i].attributeName,\n            value: e\n          });\n        });\n        data.push({\n          item: item,\n          price: '',\n          stock: '',\n          image_link: [],\n          imagePreviewArray: '',\n          price_error: '',\n          stock_error: '',\n          image_link_error: '',\n          custom_fields: []\n        });\n      });\n      setMessage('Variations Created Successfully');\n      props.setVariationsArray(data);\n    } else {\n      setError('Add some attributes first');\n    }\n  }\n\n  function allPossibleCases(arr) {\n    if (arr.length == 1) {\n      return arr[0];\n    } else {\n      var result = [];\n      var allCasesOfRest = allPossibleCases(arr.slice(1)); // recur with the rest of array\n\n      for (var i = 0; i < allCasesOfRest.length; i++) {\n        for (var j = 0; j < arr[0].length; j++) {\n          result.push(arr[0][j] + \"-\" + allCasesOfRest[i]);\n        }\n      }\n\n      return result;\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    style: {\n      marginBottom: '0%',\n      paddingBottom: '0%'\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Name\"), __jsx(Select, {\n    id: '1',\n    instanceId: '1',\n    inputId: '1',\n    styles: GlobalStyleSheet.react_select_styles,\n    options: groupedOptions,\n    components: {\n      Group\n    },\n    value: attributeName,\n    onChange: e => setAttributeName(e)\n  }), __jsx(Nav.Link, {\n    style: {\n      padding: '0%',\n      margin: '0%',\n      fontSize: '14px'\n    },\n    onClick: () => setModalShow(true)\n  }, \"Add New\"), __jsx(AddNewFieldNameModal, {\n    show: modalShow,\n    onHide: () => setModalShow(false)\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    style: {\n      marginBottom: '0%',\n      paddingBottom: '0%'\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Field Value \"), __jsx(CreatableSelect, {\n    id: '1',\n    instanceId: '1',\n    inputId: '1',\n    isMulti: true,\n    value: attributeValue || '',\n    components: {\n      DropdownIndicator: null\n    },\n    styles: GlobalStyleSheet.react_select_styles,\n    onChange: value => setAttributeValue(value),\n    placeholder: \"Press enter to add more\"\n  }))), __jsx(Row, {\n    noGutters: true\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, error)), __jsx(\"div\", {\n    className: \"mr-auto\"\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    onClick: handleAddProductAttributeClick,\n    style: {\n      marginRight: '2%'\n    }\n  }, \"Add\"), __jsx(Button, {\n    variant: \"outline-success\",\n    size: \"sm\",\n    onClick: handleCreateVariationsClick\n  }, \"Create Variations\")), __jsx(\"hr\", null), __jsx(Form.Label, {\n    style: styles.label\n  }, message), attributesArray && attributesArray.map((element, index) => __jsx(Form.Row, {\n    style: {\n      padding: '0%'\n    },\n    key: index\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: element.attributeName,\n    onChange: () => element.attributeName,\n    disabled: true\n  }, __jsx(\"option\", null, element.attributeName))), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12\n  }, __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: element.attributeValue.forEach(e => e.value),\n    disabled: true\n  }), __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => handleDeleteProductAttributeClick(index)\n  }, \" delete\"))))));\n}\n\nconst createOption = label => ({\n  value: label,\n  label\n});\n\nfunction ProductVariations(props) {\n  const [samePrice, setSamePrice] = React.useState('');\n  const [samePriceError, setSamePriceError] = React.useState('');\n  const [sameStock, setSameStock] = React.useState('');\n  const [sameStockError, setSameStockError] = React.useState('');\n  const [message, setMessage] = React.useState('');\n  const [error, setError] = React.useState(''); // Same Price For All Variations\n\n  function handleSamePriceApplyBtnClick() {\n    if (samePrice != '') {\n      setSamePriceError('');\n      const copyArray = Object.assign([], props.variationsArray);\n      copyArray.forEach(element => {\n        element.price = samePrice;\n      });\n      props.setVariationsArray(copyArray);\n    } else {\n      setSamePriceError('Enter Value');\n    }\n  } // Same Stock For All Variations\n\n\n  function handleSameStockApplyBtnClick() {\n    if (sameStock != '') {\n      setSameStockError('');\n      const copyArray = Object.assign([], props.variationsArray);\n      copyArray.forEach(element => {\n        element.stock = sameStock;\n      });\n      props.setVariationsArray(copyArray);\n    } else {\n      setSameStockError('Enter Value');\n    }\n  }\n\n  function handlenPriceChange(e, index) {\n    const copyArray = Object.assign([], props.variationsArray);\n    let object = copyArray[index];\n\n    if (e.target.value >= 0) {\n      object.price = e.target.value;\n      object.price_error = '';\n      copyArray[index] = object;\n      props.setVariationsArray(copyArray);\n    }\n  }\n\n  function handleInStockChang(e, index) {\n    const copyArray = Object.assign([], props.variationsArray);\n    let object = copyArray[index];\n\n    if (e.target.value >= 0) {\n      object.stock = e.target.value;\n      object.stock_error = '';\n      copyArray[index] = object;\n      props.setVariationsArray(copyArray);\n    }\n  }\n\n  function handleDeleteVariationClick(index) {\n    const copyArray = Object.assign([], props.variationsArray);\n    copyArray.splice(index, 1);\n    props.setVariationsArray(copyArray);\n  }\n\n  function handleDeleteCustomFieldClick(index, i) {\n    const copyArray = Object.assign([], props.variationsArray);\n    copyArray[index].custom_fields.splice(i, 1);\n    props.setVariationsArray(copyArray);\n  }\n\n  function handleSaveVariationsClick() {\n    const copyArray = Object.assign([], props.variationsArray);\n    let flag = true;\n    copyArray.forEach(element => {\n      if (element.price == '' || element.stock == '' || element.image_link.length == 0) {\n        flag = false;\n\n        if (element.price == '') {\n          element.price_error = 'Enter price';\n        }\n\n        if (element.stock == '') {\n          element.stock_error = 'Enter stock';\n        }\n\n        if (element.image_link.length == 0) {\n          element.image_link_error = 'Enter image Link';\n        }\n      } else {\n        element.price_error = '';\n        element.stock_error = '';\n        element.image_link_error = '';\n      }\n    });\n\n    if (flag == true) {\n      props.setVariationsSaved(true);\n      setMessage('Variations saved Successfully');\n      setError('');\n    } else {\n      setMessage('Please fill all required fields');\n      setError('red');\n    }\n\n    props.setVariationsArray(copyArray);\n  }\n\n  function handleVariationsErrorCheck(element) {\n    if (element.price_error != '' || element.image_link_error != '') {\n      return '1px solid red';\n    } else {\n      return 'none';\n    }\n  }\n\n  function handleItemValueChange(event, index, i) {\n    const copyArray = Object.assign([], props.variationsArray);\n    let obj = copyArray[index].item;\n    obj[i].value = event.target.value;\n    props.setVariationsArray(copyArray);\n  }\n\n  async function fileSelectedHandler(e, index) {\n    const copyArray = Object.assign([], props.variationsArray);\n    let object = copyArray[index];\n\n    if (e.target.files != '') {\n      object.image_link = [...object.image_link, ...e.target.files];\n      let array = [];\n      object.image_link.forEach(element => {\n        array.push(URL.createObjectURL(element));\n      });\n      object.imagePreviewArray = array;\n      object.image_link_error = '';\n      copyArray[index] = object;\n      props.setVariationsArray(copyArray);\n    }\n  }\n\n  function deleteImage(index, i) {\n    const copyArray = Object.assign([], props.variationsArray);\n    let obj = copyArray[index];\n    obj.image_link.splice(i, 1);\n    obj.imagePreviewArray.splice(i, 1);\n    copyArray[index] = obj;\n    props.setVariationsArray(copyArray);\n  }\n\n  return __jsx(React.Fragment, null, props.isVariationsArrayEmpty ? __jsx(\"div\", {\n    style: {\n      width: '100%',\n      textAlign: 'center',\n      marginTop: '10%'\n    },\n    className: \"jsx-728850913\"\n  }, __jsx(Form.Label, null, \"Please First add Attributes from Attributes Tab\")) : __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Same Price\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Price\",\n    name: \"samePrice\",\n    value: samePrice,\n    onChange: e => {\n      if (e.target.value >= 0) {\n        setSamePrice(e.target.value);\n        setSamePriceError('');\n      }\n    },\n    isInvalid: samePriceError\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    style: styles.label,\n    onClick: handleSamePriceApplyBtnClick,\n    size: \"sm\"\n  }, \"Apply\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.samePriceError))), __jsx(Form.Group, {\n    as: Col\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \" Same Stock\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Stock\",\n    name: \"sameStock\",\n    value: sameStock,\n    onChange: e => {\n      if (e.target.value >= 0) {\n        setSameStock(e.target.value);\n        setSameStockError('');\n      }\n    },\n    isInvalid: sameStockError\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"primary\",\n    style: styles.label,\n    onClick: handleSameStockApplyBtnClick,\n    size: \"sm\"\n  }, \"Apply\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, props.sameStockError)))), __jsx(\"hr\", {\n    style: {\n      marginTop: '0%'\n    },\n    className: \"jsx-728850913\"\n  }), props.variationsArray && props.variationsArray.map((element, index) => __jsx(React.Fragment, null, __jsx(Accordion, null, __jsx(Row, {\n    noGutters: true,\n    style: {\n      border: handleVariationsErrorCheck(element)\n    }\n  }, element.item && element.item.map((e, i) => __jsx(Form.Group, {\n    as: Col,\n    lg: 3,\n    md: 3,\n    sm: 6,\n    xs: 6,\n    key: i\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: e.value,\n    onChange: event => handleItemValueChange(event, index, i)\n  }))), __jsx(\"div\", {\n    className: \"jsx-728850913\" + \" \" + \"mr-auto\"\n  }), __jsx(Accordion.Toggle, {\n    as: Form.Group,\n    eventKey: \"0\"\n  }, __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginRight: '10px'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.slider_fontawesome\n  }))), __jsx(Form.Group, {\n    style: {\n      float: 'right'\n    }\n  }, __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => handleDeleteVariationClick(index)\n  }, \" delete\"))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\"\n  }, __jsx(React.Fragment, null, __jsx(Form.Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 6\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Price \", __jsx(\"span\", {\n    className: \"jsx-728850913\"\n  }, \" * \")), __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    placeholder: \"Enter Product Price\",\n    name: \"product_price\",\n    value: element.price,\n    onChange: e => handlenPriceChange(e, index),\n    isInvalid: element.price_error\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, element.price_error)), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 6\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product in Stock \", __jsx(\"span\", {\n    className: \"jsx-728850913\"\n  }, \" * \")), __jsx(Form.Control, {\n    type: \"number\",\n    size: \"sm\",\n    name: \"product_in_stock\",\n    placeholder: \"Enter Product In Stock\",\n    value: element.stock,\n    onChange: e => handleInStockChang(e, index),\n    isInvalid: element.stock_error\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\"\n  }, element.stock_error)), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Images \", __jsx(\"span\", {\n    className: \"jsx-728850913\"\n  }, \" * \")), __jsx(\"input\", {\n    type: \"file\",\n    style: {\n      margin: '0% 2%',\n      fontSize: '13px'\n    },\n    multiple: true,\n    onChange: e => fileSelectedHandler(e, index),\n    name: \"image\",\n    accept: \"image/*\",\n    className: \"jsx-728850913\"\n  }), __jsx(Form.Label, {\n    style: styles.label\n  }, __jsx(\"span\", {\n    className: \"jsx-728850913\"\n  }, element.image_link_error)))), __jsx(Form.Row, null, (element.imagePreviewArray || []).map((url, i) => __jsx(\"div\", {\n    className: \"jsx-728850913\" + \" \" + \"show-image\"\n  }, __jsx(\"img\", {\n    style: {\n      height: '100px',\n      width: '100px',\n      margin: '1%'\n    },\n    src: url,\n    alt: \"...\",\n    className: \"jsx-728850913\"\n  }), __jsx(\"input\", {\n    type: \"button\",\n    onClick: () => deleteImage(index, i),\n    value: \"Delete\",\n    className: \"jsx-728850913\" + \" \" + \"deleteImage\"\n  })))), __jsx(Form.Row, null, element.custom_fields && element.custom_fields.map((e, i) => __jsx(Form.Group, {\n    as: Col,\n    lg: 3,\n    md: 3,\n    sm: 6,\n    xs: 6,\n    key: i\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, e.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: e.value,\n    onChange: () => e.attributeValue\n  }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n    variant: \"outline-danger\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => handleDeleteCustomFieldClick(index, i)\n  }, \" delete\"))))))))), __jsx(\"hr\", {\n    style: {\n      marginTop: '0%'\n    },\n    className: \"jsx-728850913\"\n  }))), __jsx(Form.Label, {\n    style: {\n      fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n      width: '100%',\n      color: `${error}`\n    }\n  }, message), __jsx(Button, {\n    variant: \"outline-success\",\n    size: \"sm\",\n    block: true,\n    onClick: handleSaveVariationsClick\n  }, \" Save Variations\")), __jsx(_JSXStyle, {\n    id: \"728850913\"\n  }, [\"span.jsx-728850913{color:red;}\", \"div.show-image.jsx-728850913{position:relative;float:left;margin:5px;}\", \"div.show-image.jsx-728850913:hover img.jsx-728850913{opacity:0.5;}\", \"div.show-image.jsx-728850913:hover input.jsx-728850913{display:block;}\", \"div.show-image.jsx-728850913 input.jsx-728850913{position:absolute;display:none;}\", \"div.show-image.jsx-728850913 input.deleteImage.jsx-728850913{top:0;left:0;color:red;font-size:13px;}\"]));\n}\n\nconst styles = {\n  nav_link: {\n    color: 'white',\n    fontSize: '12px',\n    display: 'flex',\n    alignItems: 'center',\n    height: '45px'\n  },\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%',\n    border: '1px solid lightgray'\n  },\n  card_header: {\n    display: 'flex',\n    alignItems: 'center',\n    fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n    background: `${GlobalStyleSheet.card_header_background}`\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  },\n  product_fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  },\n  slider_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProductData;","map":null,"metadata":{},"sourceType":"module"}