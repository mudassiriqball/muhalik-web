{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\overlay-popover.js\";\n\nvar __jsx = React.createElement;\nimport { OverlayTrigger } from 'react-bootstrap';\nimport React, { Component } from 'react';\nvar UpdatingPopover = React.forwardRef(function (_ref, ref) {\n  var popper = _ref.popper,\n      children = _ref.children,\n      _ = _ref.show,\n      props = _objectWithoutProperties(_ref, [\"popper\", \"children\", \"show\"]);\n\n  useEffect(function () {\n    console.log('updating!');\n    popper.scheduleUpdate();\n  }, [children, popper]);\n  return __jsx(Popover, _extends({\n    ref: ref,\n    content: true\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }), children);\n});\nvar longContent = \"\\n  Very long\\n  Multiline content\\n  that is engaging and what-not\\n\";\nvar shortContent = 'Short and sweet!';\n\nfunction OverlayPopover(props) {\n  var _React$useState = React.useState(shortContent),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      content = _React$useState2[0],\n      setContent = _React$useState2[1];\n\n  React.useEffect(function () {\n    var timerId = setInterval(function () {\n      setContent(content === shortContent ? longContent : shortContent);\n    }, 3000);\n    return function () {\n      return clearInterval(timerId);\n    };\n  });\n  return __jsx(OverlayTrigger, {\n    trigger: \"hover\",\n    overlay: __jsx(UpdatingPopover, {\n      id: \"popover-contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, content),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, props.children);\n}\n\nexport default OverlayPopover;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/overlay-popover.js"],"names":["OverlayTrigger","React","Component","UpdatingPopover","forwardRef","ref","popper","children","_","show","props","useEffect","console","log","scheduleUpdate","longContent","shortContent","OverlayPopover","useState","content","setContent","timerId","setInterval","clearInterval"],"mappings":";;;;;;;;AAAA,SAASA,cAAT,QAA+B,iBAA/B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,IAAMC,eAAe,GAAGF,KAAK,CAACG,UAAN,CACpB,gBAA0CC,GAA1C,EAAkD;AAAA,MAA/CC,MAA+C,QAA/CA,MAA+C;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAAvBC,CAAuB,QAA7BC,IAA6B;AAAA,MAAjBC,KAAiB;;AAC9CC,EAAAA,SAAS,CAAC,YAAM;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAP,IAAAA,MAAM,CAACQ,cAAP;AACH,GAHQ,EAGN,CAACP,QAAD,EAAWD,MAAX,CAHM,CAAT;AAKA,SACI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAED,GAAd;AAAmB,IAAA,OAAO;AAA1B,KAA+BK,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACKH,QADL,CADJ;AAKH,CAZmB,CAAxB;AAcA,IAAMQ,WAAW,0EAAjB;AAKA,IAAMC,YAAY,GAAG,kBAArB;;AAEA,SAASC,cAAT,CAAwBP,KAAxB,EAA+B;AAAA,wBACGT,KAAK,CAACiB,QAAN,CAAeF,YAAf,CADH;AAAA;AAAA,MACpBG,OADoB;AAAA,MACXC,UADW;;AAG3BnB,EAAAA,KAAK,CAACU,SAAN,CAAgB,YAAM;AAClB,QAAMU,OAAO,GAAGC,WAAW,CAAC,YAAM;AAC9BF,MAAAA,UAAU,CAACD,OAAO,KAAKH,YAAZ,GAA2BD,WAA3B,GAAyCC,YAA1C,CAAV;AACH,KAF0B,EAExB,IAFwB,CAA3B;AAIA,WAAO;AAAA,aAAMO,aAAa,CAACF,OAAD,CAAnB;AAAA,KAAP;AACH,GAND;AAQA,SACI,MAAC,cAAD;AACI,IAAA,OAAO,EAAC,OADZ;AAEI,IAAA,OAAO,EACH,MAAC,eAAD;AAAiB,MAAA,EAAE,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyCF,OAAzC,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKT,KAAK,CAACH,QANX,CADJ;AAUH;;AAED,eAAeU,cAAf","sourcesContent":["import { OverlayTrigger } from 'react-bootstrap'\r\nimport React, { Component } from 'react';\r\n\r\nconst UpdatingPopover = React.forwardRef(\r\n    ({ popper, children, show: _, ...props }, ref) => {\r\n        useEffect(() => {\r\n            console.log('updating!');\r\n            popper.scheduleUpdate();\r\n        }, [children, popper]);\r\n\r\n        return (\r\n            <Popover ref={ref} content {...props}>\r\n                {children}\r\n            </Popover>\r\n        );\r\n    },\r\n);\r\nconst longContent = `\r\n  Very long\r\n  Multiline content\r\n  that is engaging and what-not\r\n`;\r\nconst shortContent = 'Short and sweet!';\r\n\r\nfunction OverlayPopover(props) {\r\n    const [content, setContent] = React.useState(shortContent);\r\n\r\n    React.useEffect(() => {\r\n        const timerId = setInterval(() => {\r\n            setContent(content === shortContent ? longContent : shortContent);\r\n        }, 3000);\r\n\r\n        return () => clearInterval(timerId);\r\n    });\r\n\r\n    return (\r\n        <OverlayTrigger\r\n            trigger=\"hover\"\r\n            overlay={\r\n                <UpdatingPopover id=\"popover-contained\">{content}</UpdatingPopover>\r\n            }\r\n        >\r\n            {props.children}\r\n        </OverlayTrigger>\r\n    );\r\n}\r\n\r\nexport default OverlayPopover"]},"metadata":{},"sourceType":"module"}