{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// import React, { Component } from 'react';\n// import { Row, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\n// import axios from 'axios'\n// import { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\n// // import ViewProduct from './all-products-contents/view-product'\n// import Link from 'next/link'\n// import Router from 'next/router'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH } from '@fortawesome/free-solid-svg-icons';\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\n// import CardAccordion from '../../../../card_accordion';\n// import MuhalikConfig from '../../../../../../sdk/muhalik.config'\n// import GlobalStyleSheet from '../../../../../../styleSheet'\n// import TitleRow from '../../../../title-row';\n// class AllProducts extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             productsArray: [],\n//             viewProduct: false,\n//             data: {},\n//         }\n//     }\n//     // Getting Product Categories from DB\n//     // async componentDidMount() {\n//     //     const url = MuhalikConfig.PATH + '/api/products/';\n//     //     try {\n//     //         const response = await axios.get(url);\n//     //         console.log('data:', response.data.data.docs)\n//     //         this.setState({ productsArray: response.data.data.docs })\n//     //     } catch (error) {\n//     //         console.log('Data Fetching Eror:', error);\n//     //     }    \n//     // }\n//     async componentDidMount() {\n//         const url = MuhalikConfig.PATH + '/api/products/'\n//         await axios.get(url, {\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         }).then((response) => {\n//             console.log('data:', response.data.data)\n//             this.setState({ productsArray: response.data.data })\n//         }).catch((error) => {\n//             alert('Data Fetchig Error: ', error)\n//         });\n//     }\n//     handleViewProduct(index) {\n//         // let dataa;\n//         // Simple Product\n//         // if (i == -1) {\n//         this.setState({ data: this.state.productsArray[index], viewProduct: true })\n//         // } else { // Variable Product\n//         // dataa = Object.assign([], this.state.productsArray[index])\n//         // dataa.product_variations = dataa.product_variations[i];\n//         //     this.setState({ data: this.state.productsArray[index], viewProduct: true })\n//         // }\n//         // console.log('datadata:', data)\n//         // Router.push({\n//         //     pathname: '/view-product',\n//         //     query: { data: data },\n//         // }, '/vendor/view-product?' + data.product_name);\n//     }\n//     async handleDeleteProduct(index) {\n//         const copyArray = Object.assign([], this.state.productsArray)\n//         const _id = copyArray[index]._id;\n//         const url = MuhalikConfig.PATH + `/api/products/${_id}`;\n//         copyArray.splice(index, 1)\n//         this.setState({ productsArray: copyArray })\n//         await axios.delete(url, {\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\n//         }).then(function (response) {\n//             return true;\n//         }).catch(function (error) {\n//             alert('Error: ', error.response.data.message);\n//             return false;\n//         });\n//     }\n//     isVariableProduct(element) {\n//         if (element.product_type != \"simple-product\") {\n//             return true\n//         } else {\n//             return false\n//         }\n//     }\n//     render() {\n//         return (\n//             <>\n//                 {this.state.viewProduct ?\n//                     <ViewProduct\n//                         data={this.state.data}\n//                         back={() => this.setState({ viewProduct: false, data: {} })}\n//                         isVariableProduct={this.state.data.product_type != \"simple-product\"}\n//                     />\n//                     :\n//                     <>\n//                         <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\n//                         <Row noGutters style={{ margin: '2%', background: 'white' }}>\n//                             <Table responsive bordered hover size=\"sm\">\n//                                 <thead>\n//                                     <tr>\n//                                         <th style={{ textAlign: 'center' }}>\n//                                             <Form.Check type=\"checkbox\" />\n//                                         </th>\n//                                         <th style={{ textAlign: 'center' }}>Name</th>\n//                                         <th style={{ textAlign: 'center' }}>SKU</th>\n//                                         <th style={{ textAlign: 'center' }}>Stock</th>\n//                                         <th style={{ textAlign: 'center' }}>Price</th>\n//                                         <th style={{ textAlign: 'center' }}>Categories</th>\n//                                         <th style={{ textAlign: 'center' }}>Tags</th>\n//                                         <th style={{ textAlign: 'center' }}>Date</th>\n//                                     </tr>\n//                                 </thead>\n//                                 <tbody>\n//                                     {this.state.productsArray && this.state.productsArray.map((element, index) =>\n//                                         <>\n//                                             {this.isVariableProduct(element) ?\n//                                                 <tr key={index}>\n//                                                     <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\n//                                                     <td className=\"td\">\n//                                                         {element.product_name}\n//                                                         <div className=\"mr-auto\"></div>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}> View </Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\n//                                                     <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\n//                                                     <td align=\"center\" style={styles.label}>{element.product_price}</td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {/* {element.product_category && element.product_category.map(e =>\n//                                                             e.value + ','\n//                                                         )} */}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_tags && element.product_tags.map(e =>\n//                                                             e.value + ','\n//                                                         )}\n//                                                     </td>\n//                                                     <td align=\"center\" style={styles.label}>\n//                                                         {element.product_entry_date}\n//                                                     </td>\n//                                                 </tr>\n//                                                 :\n//                                                 <>\n//                                                     <tr>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             <Form.Check type=\"checkbox\" />\n//                                                         </td>\n//                                                         <td className=\"td\">\n//                                                             {element.product_name}\n//                                                             <div className=\"mr-auto\"></div>\n//                                                             <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}>View</Nav.Link>\n//                                                             <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\n//                                                             <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\n//                                                         </td>\n//                                                         <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             {element.product_variations.map(e =>\n//                                                                 e.item[e.item.length - 2].value + ','\n//                                                             )}\n//                                                         </td>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             {element.product_variations.map(e =>\n//                                                                 e.item[e.item.length - 3].value + ','\n//                                                             )}\n//                                                         </td>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             {element.product_category && element.product_category.map(e =>\n//                                                                 e.value + ','\n//                                                             )}\n//                                                         </td>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             {element.product_tags && element.product_tags.map(e =>\n//                                                                 e.value + ','\n//                                                             )}\n//                                                         </td>\n//                                                         <td align=\"center\" style={styles.label}>\n//                                                             {element.product_entry_date}\n//                                                         </td>\n//                                                     </tr>\n//                                                 </>\n//                                             }\n//                                         </>\n//                                     )}\n//                                 </tbody>\n//                             </Table>\n//                         </Row >\n//                     </>\n//                 }\n//                 <style jsx>\n//                     {`\n//                         .td {\n//                             display: flex;\n//                             flex-direction: row;\n//                             align-items: center;\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\n//                         }\n//                     `}\n//                 </style>\n//             </>\n//         );\n//     }\n// }\n// const ViewProduct = props => {\n//     const [imgPreview, setImgPreview] = React.useState(false);\n//     const [index, setIndex] = React.useState('')\n//     const [imgData, setImgData] = React.useState('')\n//     const len = props.data.product_image_link.length;\n//     function prevImage() {\n//         if (index > 0) {\n//             setIndex(index - 1)\n//         }\n//     }\n//     function nextImage() {\n//         if (index < (len - 1)) {\n//             setIndex(index + 1)\n//         }\n//     }\n//     return (\n//         <>\n//             <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\n//             <Form.Row style={{ margin: '2%' }} >\n//                 <FontAwesomeIcon className=\"fontawesome\" icon={faArrowLeft} style={styles.fontawesome} onClick={props.back} className=\"mr-auto\" />\n//                 <div className=\"mr-auto\" style={styles.title}> {props.data.product_name}</div>\n//                 <div style={styles.title}> Prev </div>\n//                 <div style={styles.title}> Next </div>\n//             </Form.Row>\n//             <CardAccordion title={'General Info'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Product Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Brand Name:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>SKU:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     {props.isVariableProduct ?\n//                         null :\n//                         <>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Price:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                                 <Form.Label style={styles.label}>Product In Stock:</Form.Label>\n//                                 <InputGroup>\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\n//                                 </InputGroup>\n//                             </Form.Group>\n//                         </>\n//                     }\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty (month):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Warranty Type:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Discount (%):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\n//                         <Form.Label style={styles.label}>Description:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             {props.isVariableProduct ?\n//                 <CardAccordion title={'Product Variations'}>\n//                     {props.data.product_variations && props.data.product_variations.map(element =>\n//                         <>\n//                             <Row >\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Price</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                     <Form.Label style={styles.label}>Stock</Form.Label>\n//                                     <InputGroup>\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\n//                                     </InputGroup>\n//                                 </Form.Group>\n//                                 {element.item && element.item.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {element.custom_fields && element.custom_fields.map(e =>\n//                                     <>\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\n//                                             <InputGroup>\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\n//                                             </InputGroup>\n//                                         </Form.Group>\n//                                     </>\n//                                 )}\n//                                 {element.image_link && element.image_link.map((img, i) =>\n//                                     <Row>\n//                                         <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\n//                                             onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\n//                                     </Row>\n//                                 )}\n//                             </Row>\n//                             <hr />\n//                         </>\n//                     )}\n//                 </CardAccordion>\n//                 :\n//                 <CardAccordion title={'Product Images'}>\n//                     {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\n//                         <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`}\n//                             alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\n//                     )}\n//                 </CardAccordion>\n//             }\n//             <CardAccordion title={'Shipping Details'}>\n//                 <Row>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Length (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Width (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Height (cm):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Weight (kg):</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\n//                         <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\n//                         <InputGroup>\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\n//                         </InputGroup>\n//                     </Form.Group>\n//                 </Row>\n//             </CardAccordion>\n//             <CardAccordion title={'Product Categories'}>\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Product Categories</Form.Label>\n//                     <InputGroup>\n//                         {/* {props.data.product_category && props.data.product_category.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )} */}\n//                     </InputGroup>\n//                 </Form.Group>\n//                 <hr />product_weight\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Product Tags</Form.Label>\n//                     <InputGroup>\n//                         {props.data.product_tags && props.data.product_tags.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </Form.Group>\n//                 <hr />\n//                 <Form.Group>\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Dangerous Goods</Form.Label>\n//                     <InputGroup>\n//                         {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\n//                         )}\n//                     </InputGroup>\n//                 </Form.Group>\n//             </CardAccordion>\n//             {/* Image Preview */}\n//             {imgPreview ?\n//                 <div className=\"modal-overlay\">\n//                     <div className=\"modal-body\">\n//                         <div className=\"close-modal\">\n//                             <div className=\"mr-auto\"></div>\n//                             <div className=\"mr-auto\"></div>\n//                             <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\n//                                 onClick={() => prevImage} />\n//                             <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\n//                                 onClick={nextImage} />\n//                             <div className=\"mr-auto\"></div>\n//                             <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\n//                                 onClick={() => setImgPreview(false)} />\n//                         </div>\n//                         <div className=\"image-container\">\n//                             <img\n//                                 src={imgData[index].value}\n//                                 style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\n//                             />\n//                         </div>\n//                     </div>\n//                 </div>\n//                 : null\n//             }\n//             <style jsx>\n//                 {`\n//                    .modal-overlay {\n//                         position: fixed;\n//                         top: 0;\n//                         left: 0;\n//                         bottom: 0;\n//                         right: 0;\n//                         z-index: 10;\n//                         width: 100%;\n//                         height: 100%;\n//                         background: rgba(21, 21, 21, 0.75);\n//                     }\n//                      .modal-body {\n//                         position: relative;\n//                         z-index: 11;\n//                         margin: 2.5%;\n//                         overflow: hidden;\n//                         max-width: 100%;\n//                         max-height: 100%;\n//                     }\n//                     .close-modal {\n//                         position: fixed;\n//                         display: flex;\n//                         top: 10px;\n//                         left: 0;\n//                         right: 0;\n//                         width: 100%;\n//                     }\n//                     .image-container {\n//                         display: grid;\n//                         height: 100%;\n//                         // display: flex;\n//                         // justify-content: center;\n//                         // align-items: center;\n//                     }\n//                 `}\n//             </style>\n//         </>\n//     )\n// }\n// const styles = {\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n//     },\n//     nav_link: {\n//         paddingLeft: '10px',\n//         paddingRight: '5px',\n//     },\n//     label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '2%'\n//     },\n//     row: {\n//         margin: '2%', padding: '0%'\n//     },\n//     img_preview_fontawesome: {\n//         cursor: 'pointer',\n//         color: 'white',\n//         fontWeight: 'lighter',\n//         width: '30px',\n//         height: '30px',\n//         maxHeight: '30px',\n//         maxWidth: '30px',\n//     },\n//     fontawesome: {\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         marginRight: '10%',\n//         width: '17px',\n//         height: '17px',\n//         maxHeight: '17px',\n//         maxWidth: '17px',\n//     },\n//     general_info_label: {\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n//         width: '100%',\n//         borderBottom: '1px solid gray'\n//     },\n//     field_label: {\n//         border: `1px solid ${GlobalStyleSheet.body_color}`,\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\n//         margin: '0%',\n//         width: '100%',\n//         padding: '2px 5px'\n//     },\n//     card: {\n//         width: '100%',\n//         border: '1px solid lightgray'\n//     },\n//     card_header: {\n//         alignItems: 'center',\n//         fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n//         background: `${GlobalStyleSheet.card_header_background}`,\n//     },\n// }\n// export default AllProducts;\nimport React, { Component } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nconst colourOptions = [{\n  label: '111',\n  value: '111'\n}];\nexport default class AllProducts extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleChange\", newValue => {\n      console.group('Value Changed', newValue);\n    });\n  }\n\n  render() {\n    return __jsx(CreatableSelect, {\n      isMulti: true,\n      onChange: this.handleChange,\n      options: colourOptions\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/all-products.js"],"names":["React","Component","CreatableSelect","colourOptions","label","value","AllProducts","newValue","console","group","render","handleChange"],"mappingsgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CAAD,CAAtB;AAEA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;;AAAA,0CAC/BM,QAAD,IAAc;AACzBC,MAAAA,OAAO,CAACC,KAAR,CAAc,eAAd,EAA+BF,QAA/B;AACH,KAH8C;AAAA;;AAI/CG,EAAAA,MAAM,GAAG;AACL,WACI,MAAC,eAAD;AACI,MAAA,OAAO,MADX;AAEI,MAAA,QAAQ,EAAE,KAAKC,YAFnB;AAGI,MAAA,OAAO,EAAER;AAHb,MADJ;AAOH;;AAZ8C","sourcesContent":["// import React, { Component } from 'react';\r\n// import { Row, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap'\r\n// import axios from 'axios'\r\n// import { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'\r\n// // import ViewProduct from './all-products-contents/view-product'\r\n// import Link from 'next/link'\r\n// import Router from 'next/router'\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\n// import { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\n// import CardAccordion from '../../../../card_accordion';\r\n// import MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\n// import GlobalStyleSheet from '../../../../../../styleSheet'\r\n// import TitleRow from '../../../../title-row';\r\n\r\n\r\n\r\n// class AllProducts extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             productsArray: [],\r\n//             viewProduct: false,\r\n//             data: {},\r\n//         }\r\n//     }\r\n//     // Getting Product Categories from DB\r\n//     // async componentDidMount() {\r\n//     //     const url = MuhalikConfig.PATH + '/api/products/';\r\n//     //     try {\r\n//     //         const response = await axios.get(url);\r\n//     //         console.log('data:', response.data.data.docs)\r\n//     //         this.setState({ productsArray: response.data.data.docs })\r\n//     //     } catch (error) {\r\n//     //         console.log('Data Fetching Eror:', error);\r\n//     //     }    \r\n//     // }\r\n//     async componentDidMount() {\r\n//         const url = MuhalikConfig.PATH + '/api/products/'\r\n//         await axios.get(url, {\r\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n//         }).then((response) => {\r\n//             console.log('data:', response.data.data)\r\n//             this.setState({ productsArray: response.data.data })\r\n//         }).catch((error) => {\r\n//             alert('Data Fetchig Error: ', error)\r\n//         });\r\n//     }\r\n\r\n//     handleViewProduct(index) {\r\n//         // let dataa;\r\n//         // Simple Product\r\n//         // if (i == -1) {\r\n//         this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n\r\n//         // } else { // Variable Product\r\n//         // dataa = Object.assign([], this.state.productsArray[index])\r\n//         // dataa.product_variations = dataa.product_variations[i];\r\n//         //     this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n//         // }\r\n//         // console.log('datadata:', data)\r\n//         // Router.push({\r\n//         //     pathname: '/view-product',\r\n//         //     query: { data: data },\r\n//         // }, '/vendor/view-product?' + data.product_name);\r\n//     }\r\n\r\n//     async handleDeleteProduct(index) {\r\n//         const copyArray = Object.assign([], this.state.productsArray)\r\n//         const _id = copyArray[index]._id;\r\n//         const url = MuhalikConfig.PATH + `/api/products/${_id}`;\r\n\r\n//         copyArray.splice(index, 1)\r\n//         this.setState({ productsArray: copyArray })\r\n//         await axios.delete(url, {\r\n//             headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n//         }).then(function (response) {\r\n//             return true;\r\n//         }).catch(function (error) {\r\n//             alert('Error: ', error.response.data.message);\r\n//             return false;\r\n//         });\r\n//     }\r\n\r\n//     isVariableProduct(element) {\r\n//         if (element.product_type != \"simple-product\") {\r\n//             return true\r\n//         } else {\r\n//             return false\r\n//         }\r\n//     }\r\n\r\n//     render() {\r\n//         return (\r\n//             <>\r\n//                 {this.state.viewProduct ?\r\n//                     <ViewProduct\r\n//                         data={this.state.data}\r\n//                         back={() => this.setState({ viewProduct: false, data: {} })}\r\n//                         isVariableProduct={this.state.data.product_type != \"simple-product\"}\r\n//                     />\r\n//                     :\r\n//                     <>\r\n//                         <TitleRow icon={faPlus} title={' Vendor Dashboard / All Products'} />\r\n\r\n//                         <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n//                             <Table responsive bordered hover size=\"sm\">\r\n//                                 <thead>\r\n//                                     <tr>\r\n//                                         <th style={{ textAlign: 'center' }}>\r\n//                                             <Form.Check type=\"checkbox\" />\r\n//                                         </th>\r\n//                                         <th style={{ textAlign: 'center' }}>Name</th>\r\n//                                         <th style={{ textAlign: 'center' }}>SKU</th>\r\n//                                         <th style={{ textAlign: 'center' }}>Stock</th>\r\n//                                         <th style={{ textAlign: 'center' }}>Price</th>\r\n//                                         <th style={{ textAlign: 'center' }}>Categories</th>\r\n//                                         <th style={{ textAlign: 'center' }}>Tags</th>\r\n//                                         <th style={{ textAlign: 'center' }}>Date</th>\r\n//                                     </tr>\r\n//                                 </thead>\r\n//                                 <tbody>\r\n//                                     {this.state.productsArray && this.state.productsArray.map((element, index) =>\r\n//                                         <>\r\n//                                             {this.isVariableProduct(element) ?\r\n//                                                 <tr key={index}>\r\n//                                                     <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n//                                                     <td className=\"td\">\r\n//                                                         {element.product_name}\r\n//                                                         <div className=\"mr-auto\"></div>\r\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}> View </Nav.Link>\r\n//                                                         <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n//                                                         <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n//                                                     <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\r\n//                                                     <td align=\"center\" style={styles.label}>{element.product_price}</td>\r\n//                                                     <td align=\"center\" style={styles.label}>\r\n//                                                         {/* {element.product_category && element.product_category.map(e =>\r\n//                                                             e.value + ','\r\n//                                                         )} */}\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" style={styles.label}>\r\n//                                                         {element.product_tags && element.product_tags.map(e =>\r\n//                                                             e.value + ','\r\n//                                                         )}\r\n//                                                     </td>\r\n//                                                     <td align=\"center\" style={styles.label}>\r\n//                                                         {element.product_entry_date}\r\n//                                                     </td>\r\n//                                                 </tr>\r\n//                                                 :\r\n//                                                 <>\r\n//                                                     <tr>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             <Form.Check type=\"checkbox\" />\r\n//                                                         </td>\r\n//                                                         <td className=\"td\">\r\n//                                                             {element.product_name}\r\n//                                                             <div className=\"mr-auto\"></div>\r\n//                                                             <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}>View</Nav.Link>\r\n//                                                             <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n//                                                             <Nav.Link style={styles.nav_link} onClick={() => this.handleDeleteProduct(index)}>Delete</Nav.Link>\r\n//                                                         </td>\r\n//                                                         <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             {element.product_variations.map(e =>\r\n//                                                                 e.item[e.item.length - 2].value + ','\r\n//                                                             )}\r\n//                                                         </td>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             {element.product_variations.map(e =>\r\n//                                                                 e.item[e.item.length - 3].value + ','\r\n//                                                             )}\r\n//                                                         </td>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             {element.product_category && element.product_category.map(e =>\r\n//                                                                 e.value + ','\r\n//                                                             )}\r\n//                                                         </td>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             {element.product_tags && element.product_tags.map(e =>\r\n//                                                                 e.value + ','\r\n//                                                             )}\r\n//                                                         </td>\r\n//                                                         <td align=\"center\" style={styles.label}>\r\n//                                                             {element.product_entry_date}\r\n//                                                         </td>\r\n//                                                     </tr>\r\n//                                                 </>\r\n//                                             }\r\n//                                         </>\r\n//                                     )}\r\n//                                 </tbody>\r\n//                             </Table>\r\n//                         </Row >\r\n//                     </>\r\n//                 }\r\n//                 <style jsx>\r\n//                     {`\r\n//                         .td {\r\n//                             display: flex;\r\n//                             flex-direction: row;\r\n//                             align-items: center;\r\n//                             font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n//                         }\r\n//                     `}\r\n//                 </style>\r\n//             </>\r\n//         );\r\n//     }\r\n// }\r\n\r\n\r\n// const ViewProduct = props => {\r\n//     const [imgPreview, setImgPreview] = React.useState(false);\r\n//     const [index, setIndex] = React.useState('')\r\n//     const [imgData, setImgData] = React.useState('')\r\n\r\n//     const len = props.data.product_image_link.length;\r\n\r\n//     function prevImage() {\r\n//         if (index > 0) {\r\n//             setIndex(index - 1)\r\n//         }\r\n//     }\r\n\r\n//     function nextImage() {\r\n//         if (index < (len - 1)) {\r\n//             setIndex(index + 1)\r\n//         }\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <TitleRow icon={faPlus} title={` Vendor Dashboard / All Products / ${props.data.product_name}`} />\r\n//             <Form.Row style={{ margin: '2%' }} >\r\n//                 <FontAwesomeIcon className=\"fontawesome\" icon={faArrowLeft} style={styles.fontawesome} onClick={props.back} className=\"mr-auto\" />\r\n//                 <div className=\"mr-auto\" style={styles.title}> {props.data.product_name}</div>\r\n//                 <div style={styles.title}> Prev </div>\r\n//                 <div style={styles.title}> Next </div>\r\n//             </Form.Row>\r\n//             <CardAccordion title={'General Info'}>\r\n//                 <Row>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Product Name:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_name} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Brand Name:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_brand_name} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>SKU:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.sku} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     {props.isVariableProduct ?\r\n//                         null :\r\n//                         <>\r\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                                 <Form.Label style={styles.label}>Price:</Form.Label>\r\n//                                 <InputGroup>\r\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_price} disabled={true} />\r\n//                                 </InputGroup>\r\n//                             </Form.Group>\r\n//                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                                 <Form.Label style={styles.label}>Product In Stock:</Form.Label>\r\n//                                 <InputGroup>\r\n//                                     <Form.Control type=\"text\" size=\"sm\" value={props.data.product_in_stock} disabled={true} />\r\n//                                 </InputGroup>\r\n//                             </Form.Group>\r\n//                         </>\r\n//                     }\r\n\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Warranty (month):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_warranty} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Warranty Type:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.warranty_type} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Discount (%):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_discount} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Purchase Note(s):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.purchase_note} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n//                         <Form.Label style={styles.label}>Description:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control as=\"textarea\" row=\"5\" size=\"sm\" value={props.data.product_description} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                 </Row>\r\n//             </CardAccordion>\r\n\r\n//             {props.isVariableProduct ?\r\n//                 <CardAccordion title={'Product Variations'}>\r\n//                     {props.data.product_variations && props.data.product_variations.map(element =>\r\n//                         <>\r\n//                             <Row >\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                     <Form.Label style={styles.label}>Price</Form.Label>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.price} disabled={true} />\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                                 <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                     <Form.Label style={styles.label}>Stock</Form.Label>\r\n//                                     <InputGroup>\r\n//                                         <Form.Control type=\"text\" size=\"sm\" value={element.stock} disabled={true} />\r\n//                                     </InputGroup>\r\n//                                 </Form.Group>\r\n//                                 {element.item && element.item.map(e =>\r\n//                                     <>\r\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n//                                             <InputGroup>\r\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n//                                             </InputGroup>\r\n//                                         </Form.Group>\r\n//                                     </>\r\n//                                 )}\r\n//                                 {element.custom_fields && element.custom_fields.map(e =>\r\n//                                     <>\r\n//                                         <Form.Group as={Col} lg={2} md={2} sm={4} xs={12}>\r\n//                                             <Form.Label style={styles.label}>{e.name}</Form.Label>\r\n//                                             <InputGroup>\r\n//                                                 <Form.Control type=\"text\" size=\"sm\" value={e.value} disabled={true} />\r\n//                                             </InputGroup>\r\n//                                         </Form.Group>\r\n//                                     </>\r\n//                                 )}\r\n//                                 {element.image_link && element.image_link.map((img, i) =>\r\n//                                     <Row>\r\n//                                         <Image thumbnail fluid style={{ minWidth: '100px', maxWidth: '100px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`} alt=\"Product Image\"\r\n//                                             onClick={() => { setImgPreview(true), setIndex(i), setImgData(e.img_link) }} />\r\n//                                     </Row>\r\n//                                 )}\r\n//                             </Row>\r\n//                             <hr />\r\n//                         </>\r\n//                     )}\r\n//                 </CardAccordion>\r\n//                 :\r\n//                 <CardAccordion title={'Product Images'}>\r\n//                     {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\r\n//                         <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }} src={`https://drive.google.com/uc?export=view&id= ${img.value}`}\r\n//                             alt=\"Product Image\" onClick={() => { setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link) }} />\r\n//                     )}\r\n//                 </CardAccordion>\r\n//             }\r\n//             <CardAccordion title={'Shipping Details'}>\r\n//                 <Row>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Length (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_length} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Width (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_width} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Height (cm):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.dimension_height} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Weight (kg):</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.product_weight} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Shipping Charges:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.shipping_charges} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                     <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n//                         <Form.Label style={styles.label}>Handlink Fee:</Form.Label>\r\n//                         <InputGroup>\r\n//                             <Form.Control type=\"text\" size=\"sm\" value={props.data.handling_fee} disabled={true} />\r\n//                         </InputGroup>\r\n//                     </Form.Group>\r\n//                 </Row>\r\n//             </CardAccordion>\r\n//             <CardAccordion title={'Product Categories'}>\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Product Categories</Form.Label>\r\n//                     <InputGroup>\r\n//                         {/* {props.data.product_category && props.data.product_category.map(element =>\r\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n//                         )} */}\r\n//                     </InputGroup>\r\n//                 </Form.Group>\r\n//                 <hr />product_weight\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Product Tags</Form.Label>\r\n//                     <InputGroup>\r\n//                         {props.data.product_tags && props.data.product_tags.map(element =>\r\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n//                         )}\r\n//                     </InputGroup>\r\n//                 </Form.Group>\r\n//                 <hr />\r\n//                 <Form.Group>\r\n//                     <Form.Label style={{ fontSie: '14px', fontWeight: 'bold' }}>Dangerous Goods</Form.Label>\r\n//                     <InputGroup>\r\n//                         {props.data.dangerous_goods && props.data.dangerous_goods.map(element =>\r\n//                             <Form.Label style={styles.label}>{element.value}</Form.Label>\r\n//                         )}\r\n//                     </InputGroup>\r\n//                 </Form.Group>\r\n//             </CardAccordion>\r\n\r\n//             {/* Image Preview */}\r\n//             {imgPreview ?\r\n//                 <div className=\"modal-overlay\">\r\n//                     <div className=\"modal-body\">\r\n//                         <div className=\"close-modal\">\r\n//                             <div className=\"mr-auto\"></div>\r\n//                             <div className=\"mr-auto\"></div>\r\n//                             <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\r\n//                                 onClick={() => prevImage} />\r\n//                             <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\r\n//                                 onClick={nextImage} />\r\n//                             <div className=\"mr-auto\"></div>\r\n//                             <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\r\n//                                 onClick={() => setImgPreview(false)} />\r\n//                         </div>\r\n//                         <div className=\"image-container\">\r\n//                             <img\r\n//                                 src={imgData[index].value}\r\n//                                 style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\r\n//                             />\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 : null\r\n//             }\r\n//             <style jsx>\r\n//                 {`\r\n//                    .modal-overlay {\r\n//                         position: fixed;\r\n//                         top: 0;\r\n//                         left: 0;\r\n//                         bottom: 0;\r\n//                         right: 0;\r\n//                         z-index: 10;\r\n//                         width: 100%;\r\n//                         height: 100%;\r\n//                         background: rgba(21, 21, 21, 0.75);\r\n//                     }\r\n//                      .modal-body {\r\n//                         position: relative;\r\n//                         z-index: 11;\r\n//                         margin: 2.5%;\r\n//                         overflow: hidden;\r\n//                         max-width: 100%;\r\n//                         max-height: 100%;\r\n//                     }\r\n//                     .close-modal {\r\n//                         position: fixed;\r\n//                         display: flex;\r\n//                         top: 10px;\r\n//                         left: 0;\r\n//                         right: 0;\r\n//                         width: 100%;\r\n//                     }\r\n//                     .image-container {\r\n//                         display: grid;\r\n//                         height: 100%;\r\n//                         // display: flex;\r\n//                         // justify-content: center;\r\n//                         // align-items: center;\r\n//                     }\r\n//                 `}\r\n//             </style>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// const styles = {\r\n//     label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n//     },\r\n//     nav_link: {\r\n//         paddingLeft: '10px',\r\n//         paddingRight: '5px',\r\n//     },\r\n//     label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         marginRight: '2%'\r\n//     },\r\n//     row: {\r\n//         margin: '2%', padding: '0%'\r\n//     },\r\n//     img_preview_fontawesome: {\r\n//         cursor: 'pointer',\r\n//         color: 'white',\r\n//         fontWeight: 'lighter',\r\n//         width: '30px',\r\n//         height: '30px',\r\n//         maxHeight: '30px',\r\n//         maxWidth: '30px',\r\n//     },\r\n//     fontawesome: {\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         marginRight: '10%',\r\n//         width: '17px',\r\n//         height: '17px',\r\n//         maxHeight: '17px',\r\n//         maxWidth: '17px',\r\n//     },\r\n//     general_info_label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         width: '100%',\r\n//         borderBottom: '1px solid gray'\r\n//     },\r\n//     field_label: {\r\n//         border: `1px solid ${GlobalStyleSheet.body_color}`,\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         margin: '0%',\r\n//         width: '100%',\r\n//         padding: '2px 5px'\r\n//     },\r\n//     card: {\r\n//         width: '100%',\r\n//         border: '1px solid lightgray'\r\n//     },\r\n//     card_header: {\r\n//         alignItems: 'center',\r\n//         fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n//         background: `${GlobalStyleSheet.card_header_background}`,\r\n//     },\r\n// }\r\n\r\n// export default AllProducts;\r\n\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nconst colourOptions = [{ label: '111', value: '111' }]\r\n\r\nexport default class AllProducts extends Component {\r\n    handleChange = (newValue) => {\r\n        console.group('Value Changed', newValue);\r\n    };\r\n    render() {\r\n        return (\r\n            <CreatableSelect\r\n                isMulti\r\n                onChange={this.handleChange}\r\n                options={colourOptions}\r\n            />\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}