{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport { Navbar, Container, Form, Col, Row, InputGroup, Button, Image, Spinner } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport MuhalikConfig from '../sdk/muhalik.config';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye, faEyeSlash, faMobileAlt, faLock } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../styleSheet';\nimport { saveTokenToStorage } from '../sdk/core/authentication-service'; // RegEx for phone number validation\n\nvar phoneRegExp = /^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$/;\nvar schema = yup.object({\n  mobile: yup.string().required(\"Enter Mobile Number\").matches(phoneRegExp, \"Phone number is not valid\"),\n  password: yup.string().required(\"Enter Password\").min(8, \"Must have at least 8 characters\").max(20, \"Can't be longer than 20 characters\")\n});\nimport * as decode from 'jwt-decode';\nimport Router from 'next/router';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"showPassword\", function (ev) {\n      _this.setState({\n        hide: !_this.state.hide\n      });\n    });\n\n    _this.state = {\n      hide: true,\n      isLoading: '',\n      serverErrorMsg: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"login\",\n    value: function login(data, currentComponent) {\n      var url;\n      return _regeneratorRuntime.async(function login$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              url = MuhalikConfig.PATH + '/api/users/login';\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.post(url, {\n                data: data\n              }).then(function (response) {\n                console.log(\"wertyuiwertyuiwertyuierty:\", response);\n\n                if (response.status == '200') {\n                  saveTokenToStorage(response.data.token);\n                  var decodedToken = decode(response.data.token);\n\n                  if (decodedToken.data.role == 'customer') {\n                    Router.replace('/index');\n                  } else if (decodedToken.data.role == 'vendor') {\n                    Router.replace('/vendor');\n                  } else if (decodedToken.data.role == 'admin') {\n                    Router.replace('/admin');\n                  } else {\n                    Router.replace('/index');\n                  }\n                }\n              })[\"catch\"](function (error) {\n                currentComponent.setState({\n                  isLoading: false\n                });\n\n                if (error.response.status == '401') {\n                  currentComponent.setState({\n                    serverErrorMsg: 'Mobile Number or Pasword Incorect'\n                  });\n                } else {\n                  alert('ERROR:' + error.response.data.message);\n                }\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hide = this.state.hide;\n      var eyeBtn;\n\n      if (this.state.hide) {\n        eyeBtn = __jsx(FontAwesomeIcon, {\n          icon: faEye,\n          style: styles.fontawesome\n        });\n      } else {\n        eyeBtn = __jsx(FontAwesomeIcon, {\n          icon: faEyeSlash,\n          style: styles.fontawesome\n        });\n      }\n\n      return __jsx(Formik, {\n        validationSchema: schema,\n        initialValues: {\n          mobile: '',\n          password: ''\n        },\n        onSubmit: function onSubmit(values, _ref) {\n          var setSubmitting = _ref.setSubmitting;\n\n          _this2.setState({\n            serverErrorMsg: ''\n          });\n\n          setSubmitting(true);\n\n          _this2.setState({\n            isLoading: true\n          });\n\n          setTimeout(function () {\n            _this2.login(values, _this2);\n\n            setSubmitting(false);\n          }, 500);\n        }\n      }, function (_ref2) {\n        var handleSubmit = _ref2.handleSubmit,\n            handleChange = _ref2.handleChange,\n            values = _ref2.values,\n            touched = _ref2.touched,\n            isValid = _ref2.isValid,\n            errors = _ref2.errors,\n            handleBlur = _ref2.handleBlur,\n            isSubmitting = _ref2.isSubmitting;\n        return __jsx(\"div\", {\n          style: styles.body,\n          className: \"jsx-1794121765\"\n        }, __jsx(Navbar, {\n          variant: \"dark\",\n          style: {\n            background: \"\".concat(GlobalStyleSheet.primry_color)\n          }\n        }, __jsx(Navbar.Brand, {\n          href: \"/\",\n          className: \"mr-auto\"\n        }, \" Muhalik \")), __jsx(Container, null, __jsx(Row, {\n          className: \"justify-content-md-center\",\n          noGutters: true\n        }, __jsx(Col, {\n          lg: 4,\n          md: \"auto\",\n          sm: \"auto\",\n          xs: \"auto\",\n          style: styles.form_col\n        }, __jsx(\"p\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Image, {\n          src: \"muhalik.jpg\",\n          roundedCircle: true,\n          thumbnail: true,\n          fluid: true,\n          style: {\n            width: '25%',\n            maxWidth: '150px'\n          }\n        })), __jsx(\"h6\", {\n          style: {\n            width: '100%',\n            paddingBottom: '10px'\n          },\n          className: \"jsx-1794121765\" + \" \" + \"text-center\"\n        }, \"Login To Muhalik\"), __jsx(Form, {\n          noValidate: true,\n          onSubmit: handleSubmit\n        }, __jsx(Form.Row, null, __jsx(Form.Group, {\n          as: Col,\n          controlId: \"validationMobile\"\n        }, __jsx(Form.Label, {\n          style: styles.label\n        }, \"Enter Your Mobile Number\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, \" * \")), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Button, {\n          id: \"mobileIcon\",\n          style: styles.fontawesome_btn\n        }, __jsx(FontAwesomeIcon, {\n          icon: faMobileAlt,\n          style: styles.fontawesome\n        }))), __jsx(Form.Control, {\n          type: \"text\",\n          placeholder: \"+966590911891\",\n          \"aria-describedby\": \"mobile\",\n          name: \"mobile\",\n          value: values.mobile,\n          onChange: handleChange,\n          isInvalid: touched.mobile && errors.mobile\n        }), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, errors.mobile)))), __jsx(Form.Row, null, __jsx(Form.Group, {\n          as: Col,\n          controlId: \"validationPassword\"\n        }, __jsx(Form.Label, {\n          style: styles.label\n        }, \"Password \", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, \"*\")), __jsx(InputGroup, null, __jsx(InputGroup.Prepend, null, __jsx(Button, {\n          id: \"lockIcon\",\n          style: styles.fontawesome_btn\n        }, __jsx(FontAwesomeIcon, {\n          icon: faLock,\n          style: styles.fontawesome\n        }))), __jsx(Form.Control, {\n          type: hide ? 'password' : 'text',\n          placeholder: \"Enter Password\",\n          \"aria-describedby\": \"inputGroup\",\n          name: \"password\",\n          value: values.password,\n          onChange: handleChange,\n          isInvalid: touched.password && errors.password\n        }), __jsx(InputGroup.Prepend, null, __jsx(Button, {\n          id: \"passwordEyeBtn\",\n          onClick: _this2.showPassword,\n          style: styles.buttons\n        }, eyeBtn)), __jsx(Form.Control.Feedback, {\n          type: \"invalid\"\n        }, errors.password)))), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-right\",\n          style: styles.label\n        }, __jsx(Link, {\n          href: \"forgot-password\"\n        }, __jsx(\"a\", {\n          className: \"jsx-1794121765\"\n        }, \"Forgot Password\")))), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-center\",\n          style: styles.label\n        }, \"Don't have an account..??\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"signup\"\n        }, __jsx(\"a\", {\n          className: \"jsx-1794121765\"\n        }, \"Signup\"))))), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-center\",\n          style: styles.errorMsg\n        }, _this2.state.serverErrorMsg)), __jsx(Form.Row, null, __jsx(Button, {\n          type: \"submit\",\n          onSubmit: handleSubmit,\n          disabled: _this2.state.isLoading,\n          block: true,\n          style: styles.submit_btn\n        }, _this2.state.isLoading ? 'Logging' : 'Login', _this2.state.isLoading ? __jsx(Spinner, {\n          animation: \"grow\",\n          size: \"sm\"\n        }) : __jsx(\"div\", {\n          className: \"jsx-1794121765\"\n        }))), __jsx(Form.Row, null, __jsx(Form.Label, {\n          className: \"text-center\",\n          style: styles.term_condition_label\n        }, \"By logingin, you agree to Muhalik's\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"./help/terms-and-conditions\"\n        }, __jsx(\"a\", {\n          className: \"jsx-1794121765\"\n        }, \"Terms & Conditions\"))), \"and\", __jsx(\"span\", {\n          className: \"jsx-1794121765\"\n        }, __jsx(Link, {\n          href: \"./help/privacy-statement\"\n        }, __jsx(\"a\", {\n          className: \"jsx-1794121765\"\n        }, \"Privacy Statement\"))))))))), __jsx(_JSXStyle, {\n          id: \"1794121765\"\n        }, [\"span.jsx-1794121765{color:red;}\", \"p.jsx-1794121765{text-align:center;margin:0px;}\"]));\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar styles = {\n  body: {\n    background: \"\".concat(GlobalStyleSheet.body_color),\n    position: 'absolute',\n    height: '100vh',\n    width: '100%'\n  },\n  buttons: {\n    background: \"\".concat(GlobalStyleSheet.primry_color),\n    border: 'none',\n    fontSize: '10px'\n  },\n  submit_btn: {\n    background: \"\".concat(GlobalStyleSheet.primry_color),\n    padding: 'auto'\n  },\n  form_col: {\n    background: 'white',\n    // border: `0.5px solid ${GlobalStyleSheet.primry_color}`,\n    padding: '20px 30px',\n    margin: '5% 0%'\n  },\n  side_column: {\n    margin: '0 3%'\n  },\n  label: {\n    width: '100%',\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  errorMsg: {\n    color: 'red',\n    width: '100%',\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize)\n  },\n  term_condition_label: {\n    width: '100%',\n    fontSize: \"\".concat(GlobalStyleSheet.form_label_fontsize),\n    padding: '10px'\n  },\n  fontawesome_btn: {\n    background: \"\".concat(GlobalStyleSheet.primry_color),\n    border: 'none'\n  },\n  fontawesome: {\n    color: \"\".concat(GlobalStyleSheet.primary_text_color),\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}