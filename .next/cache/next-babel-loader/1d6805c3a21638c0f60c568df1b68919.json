{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n// export default AuthenticationService;\nimport { reactLocalStorage } from 'reactjs-localstorage'; // import { useRouter } from 'next/router'\n// import Router from 'next/router'\n\nimport * as decode from 'jwt-decode';\nimport Router from 'next/router';\n\nconst AuthenticationService = () => __jsx(\"div\", null);\n\nexport async function saveTokenToStorage(token) {\n  await reactLocalStorage.set('token', token);\n}\nexport function getTokenFromStorage() {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n    return decodedToken.data;\n  } catch (error) {\n    return null;\n  }\n}\nexport function getUncodededTokenFromStorage() {\n  return reactLocalStorage.get('token');\n}\nexport function removeTokenFromStorage() {\n  try {\n    reactLocalStorage.remove('token');\n    Router.replace('/index');\n    Router.reload('/index');\n  } catch (error) {\n    console.log(\"error:\", error);\n  }\n}\nexport function chectAuth(rolee) {\n  try {\n    const token = reactLocalStorage.get('token');\n    const decodedToken = decode(token);\n\n    if (decodedToken.data.role == 'admin') {\n      return decodedToken.data.fullName;\n    } else if (decodedToken.data.role !== rolee) {\n      Router.replace('/index');\n    } else {\n      return decodedToken.data.fullName;\n    }\n  } catch (error) {\n    return null;\n  }\n}\nexport default AuthenticationService;","map":null,"metadata":{},"sourceType":"module"}