{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../.././../styleSheet';\nimport axios from 'axios';\nimport AlertModal from '../../../../alert-modal';\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCategoryRequestChange\", (e, index) => {\n      const copyArray = Object.assign([], this.state.categoryRequestList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        categoryRequestList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleCategoryChange\", (e, index) => {\n      const copyArray = Object.assign([], this.state.categoryList);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        categoryList: copyArray\n      });\n    });\n\n    _defineProperty(this, \"handleFilterCategoryChange\", (e, index) => {\n      const copyArray = Object.assign([], this.state.filterArray);\n      copyArray[index].value = e.target.value;\n\n      if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\n        copyArray[index].error = '';\n      } else {\n        copyArray[index].error = 'Value must be 3-20 characters';\n      }\n\n      this.setState({\n        filterArray: copyArray\n      });\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: '',\n      categoryList: [],\n      categoryRequestList: [],\n      editRequestedCategory: '',\n      showModalMessage: '',\n      showModal: false,\n      filterStr: '',\n      filterArray: ''\n    };\n  }\n\n  handlefilterStr(e) {\n    this.setState({\n      filterStr: e.target.value\n    }); // .filter(function (el) {\n    //     return kpis.indexOf(this.state.filterStr) >= 0;\n    // });\n\n    const array = [];\n    this.state.categoryList.filter(function (data) {\n      // var value = data.value.toLowerCase;\n      if (data.value.includes(e.target.value)) {\n        array.push(data);\n      }\n    });\n    this.setState({\n      filterArray: array\n    });\n    console.log(\"1111:\", array);\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      let copyArray = response.data.data;\n      copyArray.forEach((data, index) => {\n        data.label = true;\n      });\n      this.setState({\n        categoryList: copyArray\n      });\n      this.setState({\n        categoryRequestList: this.state.categoryList\n      });\n    } catch (error) {\n      console.log('feror:', error);\n    }\n  }\n\n  async addCategory() {\n    // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    // this.state.categoryValue\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    this.setState({\n      isLoading: true\n    });\n    this.setState({\n      showModalMessage: 'Product Category Added Successfully'\n    });\n    this.setState({\n      showModal: true\n    });\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  handleSubmit() {\n    if (categoryValue == '') {\n      this.setState({\n        error: 'Enter Value First'\n      });\n    } else {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        error: ''\n      });\n      this.addCategory(this);\n    }\n  } // Category Request \n  // => Field Value \n\n\n  //  => Edit\n  async handleEditCategoryRequestClick(index) {\n    const copyArray = Object.assign([], this.state.categoryRequestList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      categoryRequestList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelCategoryRequestClick(index) {\n    const copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    this.setState({\n      categoryRequestList: copyArray\n    });\n  } // Update\n\n\n  handleUpdateCategoryRequestClick(index) {\n    const copyArray = Object.assign([], this.state.categoryRequestList);\n\n    if (copyArray[index].error == '') {\n      copyArray[index].label = true;\n      this.setState({\n        categoryRequestList: copyArray,\n        showModalMessage: 'Product Category Updated Successfully',\n        showModal: true\n      });\n    }\n  } //  => Add\n\n\n  handleAddCategoryRequestClick(index) {\n    const copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      categoryRequestList: copyArray,\n      showModalMessage: 'Product Category Added Successfully',\n      showModal: true\n    });\n  } //  => Delete\n\n\n  handleDeleteCategoryRequestClick(index) {\n    const copyArray = Object.assign([], this.state.categoryRequestList);\n    copyArray.splice(index, 1);\n    this.setState({\n      categoryRequestList: copyArray,\n      showModalMessage: 'Product Category Deleted',\n      showModal: true\n    });\n  } // All categories\n  //  => Chane\n\n\n  //  => Edit\n  async handleEditCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.categoryList);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      categoryList: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.categoryList);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    this.setState({\n      categoryList: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.categoryList);\n    copyArray[index].label = true;\n    this.setState({\n      categoryList: copyArray,\n      showModalMessage: 'Product Category Updated Successfully',\n      showModal: true\n    });\n  } //  => Delete\n\n\n  handleDeleteCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.categoryList);\n    copyArray.splice(index, 1);\n    this.setState({\n      categoryList: copyArray,\n      showModalMessage: 'Product Category Deleted',\n      showModal: true\n    });\n  } // Filter categories\n  //  => Chane\n\n\n  //  => Edit\n  async handleEditFilterCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.filterArray);\n    var obj = {};\n    obj['value'] = copyArray[index].value;\n    obj['label'] = false;\n    obj['prevVal'] = copyArray[index].value;\n    obj['error'] = '';\n    copyArray[index] = obj;\n    await this.setState({\n      filterArray: copyArray\n    });\n  } //  => Cancle\n\n\n  handleCancelFilterCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.filterArray);\n    copyArray[index].value = copyArray[index].prevVal;\n    copyArray[index].label = true;\n    this.setState({\n      filterArray: copyArray\n    });\n  } //  => Update\n\n\n  handleUpdateFilterCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.filterArray);\n    const array = Object.assign([], this.state.categoryList);\n    copyArray[index].label = true;\n    this.state.categoryList.forEach((element, i) => {\n      if (copyArray[index].prevVal == element.value) {\n        array[i].value = copyArray[index].value;\n      }\n    });\n    this.setState({\n      categoryList: array,\n      filterArray: copyArray,\n      showModalMessage: 'Product Category Updated Successfully',\n      showModal: true\n    });\n  } //  => Delete\n\n\n  handleDeleteFilterCategoryClick(index) {\n    const copyArray = Object.assign([], this.state.filterArray);\n    copyArray.splice(index, 1);\n    this.setState({\n      filterArray: copyArray,\n      showModalMessage: 'Product Category Deleted',\n      showModal: true\n    });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(AlertModal, {\n      onHide: e => this.setState({\n        showModal: false\n      }),\n      show: this.state.showModal,\n      header: 'Success',\n      message: this.state.showModalMessage,\n      iconName: faThumbsUp,\n      color: \"#00b300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    }), __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faListAlt,\n      style: styles.title_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }\n    }, \" Product Categories \")), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 33\n      }\n    }, \"Add New Category \"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 33\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.accordin_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 37\n      }\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: e => this.setState({\n        categoryValue: e.target.value\n      }),\n      isInvalid: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 45\n      }\n    }, this.state.error))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 41\n      }\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 69\n      }\n    }) : null))))))), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, \"Add Category Requests\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 33\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.accordin_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 37\n      }\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 33\n      }\n    }, this.state.categoryRequestList.map((data, index) => __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 45\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 49\n      }\n    })), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 45\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 49\n      }\n    })), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 4,\n      md: 4,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 45\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 49\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryRequestChange(e, index),\n      isInvalid: data.error,\n      disabled: data.label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 53\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 53\n      }\n    }, data.error))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 53\n      }\n    }, data.label ? 'Edit' : 'Update'))), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 53\n      }\n    }, data.label ? 'Add' : 'Cancel'))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: \"auto\",\n      md: \"auto\",\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 45\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => this.handleDeleteCategoryRequestClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 49\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 53\n      }\n    }, \"Discard\")))))))))), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }\n    }, __jsx(Accordion, {\n      style: {\n        width: '100%'\n      },\n      defaultActiveKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 25\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 29\n      }\n    }, __jsx(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 33\n      }\n    }, \"All Categories\"), __jsx(Accordion.Toggle, {\n      as: Button,\n      size: \"sm\",\n      eventKey: \"0\",\n      style: {\n        float: 'right',\n        background: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 33\n      }\n    }, __jsx(FontAwesomeIcon, {\n      size: \"xs\",\n      icon: faSlidersH,\n      style: styles.accordin_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 37\n      }\n    }))), __jsx(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 29\n      }\n    }, __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Row, {\n      style: {\n        margin: '0% 5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 37\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 41\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 45\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.filterStr,\n      onChange: e => this.handlefilterStr(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 49\n      }\n    })))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 37\n      }\n    }), this.state.filterStr ? __jsx(React.Fragment, null, this.state.filterArray.map((data, index) => __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 49\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 8,\n      md: 8,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 53\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 57\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleFilterCategoryChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 61\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 61\n      }\n    }, this.state.error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 1,\n      md: 1,\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 53\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleEditFilterCategoryClick(index) : () => this.handleUpdateFilterCategoryClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 57\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 61\n      }\n    }, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 53\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 53\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: data.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        data.laebl ? this.handleDeleteFilterCategoryClick(index) : this.handleCancelFilterCategoryClick(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 57\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 61\n      }\n    }, data.label ? 'Delete' : 'Cancel')))))) : __jsx(React.Fragment, null, this.state.categoryList.map((data, index) => __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 49\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 8,\n      md: 8,\n      sm: 12,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 53\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 57\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data.value,\n      onChange: e => this.handleCategoryChange(e, index),\n      disabled: data.label,\n      isInvalid: data.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 61\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 61\n      }\n    }, this.state.error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 1,\n      md: 1,\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 53\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 57\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 61\n      }\n    }, data.label ? 'Edit' : 'Update'))), __jsx(\"div\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 53\n      }\n    }), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: \"auto\",\n      xs: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 53\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: data.label ? \"outline-danger\" : \"outline-primary\",\n      size: \"sm\",\n      block: true,\n      style: styles.submit_btn,\n      onClick: () => {\n        data.laebl ? this.handleDeleteCategoryClick(index) : this.handleCancelCategoryClick(index);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 57\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 61\n      }\n    }, data.label ? 'Delete' : 'Cancel'))))))))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    // width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  },\n  accordin_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Accordion","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faSlidersH","faThumbsUp","faThumbsDown","React","Component","MuhalikConfig","GlobalStyleSheet","axios","AlertModal","ProducCategories","constructor","props","e","index","copyArray","Object","assign","state","categoryRequestList","value","target","length","error","setState","categoryList","filterArray","isLoading","showToast","categoryValue","editRequestedCategory","showModalMessage","showModal","filterStr","handlefilterStr","array","filter","data","includes","push","console","log","componentDidMount","url","PATH","response","get","forEach","label","addCategory","handleSubmit","handleEditCategoryRequestClick","obj","handleCancelCategoryRequestClick","prevVal","handleUpdateCategoryRequestClick","handleAddCategoryRequestClick","splice","handleDeleteCategoryRequestClick","handleEditCategoryClick","handleCancelCategoryClick","handleUpdateCategoryClick","handleDeleteCategoryClick","handleEditFilterCategoryClick","handleCancelFilterCategoryClick","handleUpdateFilterCategoryClick","element","i","handleDeleteFilterCategoryClick","render","styles","title_row","title_fontawesome","title","width","card","float","background","accordin_fontawesome","card_body","bind","submit_btn","map","handleCategoryChange","handleCategoryRequestChange","margin","handleFilterCategoryChange","laebl","borderBottom","padding","color","marginRight","height","maxHeight","maxWidth","fontSize","form_label_fontsize","textAlign","admin_primry_color"],"mappings":"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","sourcesContent":["import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n            categoryList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n\r\n            filterStr: '',\r\n            filterArray: '',\r\n        }\r\n    }\r\n\r\n    handlefilterStr(e) {\r\n        this.setState({ filterStr: e.target.value });\r\n        // .filter(function (el) {\r\n        //     return kpis.indexOf(this.state.filterStr) >= 0;\r\n        // });\r\n        const array = [];\r\n        this.state.categoryList.filter(function (data) {\r\n            // var value = data.value.toLowerCase;\r\n            if (data.value.includes(e.target.value)) {\r\n                array.push(data);\r\n            }\r\n        })\r\n        this.setState({ filterArray: array });\r\n        console.log(\"1111:\", array)\r\n    }\r\n\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ categoryList: copyArray });\r\n            this.setState({ categoryRequestList: this.state.categoryList });\r\n        } catch (error) {\r\n            console.log('feror:', error);\r\n        }\r\n    }\r\n\r\n    async addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n        this.setState({ showModal: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    // Category Request \r\n    // => Field Value \r\n    handleCategoryRequestChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        if (copyArray[index].error == '') {\r\n            copyArray[index].label = true;\r\n            this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n    // Filter categories\r\n    //  => Chane\r\n    handleFilterCategoryChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.filterArray);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ filterArray: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditFilterCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.filterArray);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ filterArray: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFilterCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.filterArray);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ filterArray: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateFilterCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.filterArray);\r\n        const array = Object.assign([], this.state.categoryList);\r\n        copyArray[index].label = true;\r\n\r\n        this.state.categoryList.forEach((element, i) => {\r\n            if (copyArray[index].prevVal == element.value) {\r\n                array[i].value = copyArray[index].value\r\n            }\r\n        })\r\n\r\n        this.setState({ categoryList: array, filterArray: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    }\r\n    //  => Delete\r\n    handleDeleteFilterCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.filterArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ filterArray: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n                </Row>\r\n\r\n\r\n                {/* Add New Category */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add New Category </Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Category Value\"\r\n                                                name=\"sku\"\r\n                                                value={this.state.categoryValue}\r\n                                                onChange={(e) => this.setState({ categoryValue: e.target.value })}\r\n                                                isInvalid={this.state.error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {this.state.error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n                {/* Add Category Requests */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Category Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.categoryRequestList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    placeholder=\"Enter Category Value\"\r\n                                                    name=\"sku\"\r\n                                                    value={data.value}\r\n                                                    onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                                    disabled={data.label}\r\n                                                    isInvalid={data.error}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm={6} xs={12}>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    placeholder=\"Enter Category Value\"\r\n                                                    name=\"sku\"\r\n                                                    value={data.value}\r\n                                                    onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                                    disabled={data.label}\r\n                                                    isInvalid={data.error}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Category Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                                        isInvalid={data.error}\r\n                                                        disabled={data.label}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {data.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n                {/* All Categories */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>All Categories</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Row style={{ margin: '0% 5%' }}>\r\n                                        <Form.Group as={Col}>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    size=\"sm\"\r\n                                                    placeholder=\"Enter Category Value\"\r\n                                                    name=\"sku\"\r\n                                                    value={this.state.filterStr}\r\n                                                    onChange={(e) => this.handlefilterStr(e)}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    {\r\n\r\n                                    }\r\n                                    <hr />\r\n                                    {this.state.filterStr ?\r\n                                        <>\r\n                                            {this.state.filterArray.map((data, index) =>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                placeholder=\"Enter Category Value\"\r\n                                                                name=\"sku\"\r\n                                                                value={data.value}\r\n                                                                onChange={(e) => this.handleFilterCategoryChange(e, index)}\r\n                                                                disabled={data.label}\r\n                                                                isInvalid={data.error}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {this.state.error}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                        <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                            onClick={data.label ? () => this.handleEditFilterCategoryClick(index) : () => this.handleUpdateFilterCategoryClick(index)} >\r\n                                                            <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                        </Button>\r\n                                                    </Form.Group>\r\n                                                    <div className=\"mr-auto\"></div>\r\n                                                    <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                        <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                            onClick={() => { data.laebl ? this.handleDeleteFilterCategoryClick(index) : this.handleCancelFilterCategoryClick(index) }}>\r\n                                                            <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                                        </Button>\r\n                                                    </Form.Group>\r\n\r\n                                                </Form.Row>\r\n                                            )}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {this.state.categoryList.map((data, index) =>\r\n                                                <Form.Row>\r\n                                                    <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                placeholder=\"Enter Category Value\"\r\n                                                                name=\"sku\"\r\n                                                                value={data.value}\r\n                                                                onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                                                disabled={data.label}\r\n                                                                isInvalid={data.error}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {this.state.error}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                        <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                            onClick={data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)} >\r\n                                                            <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                        </Button>\r\n                                                    </Form.Group>\r\n                                                    <div className=\"mr-auto\"></div>\r\n                                                    <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                        <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                            onClick={() => { data.laebl ? this.handleDeleteCategoryClick(index) : this.handleCancelCategoryClick(index) }}>\r\n                                                            <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                                        </Button>\r\n                                                    </Form.Group>\r\n\r\n                                                </Form.Row>\r\n                                            )}\r\n                                        </>\r\n                                    }\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}