{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n// <AddNew\n//     upload={this.upload}\n//     isUpdateProduct={false}\n//     productCategories={this.state.data.product_category}\n//     productSubCategories={this.state.data.product_sub_cateory}\n//     productSubSubCategories={this.state.data.product_sub_sub_category}\n//     subCategoryDisabled={false}\n//     subSubCategoryDisabled={false}\n//     productTags={this.state.data.product_tags}\n//     warrantyType={this.state.data.warranty_type}\n//     simple_product_image_link={this.state.data.product_image_link}\n//     variationsArray={this.state.data.product_variations}\n//     dangerousGoodsArray={this.state.data.dangerous_goods}\n//     product_name={this.state.data.product_name}\n//     product_description={this.state.data.product_description}\n//     product_type={this.state.data.product_type}\n//     sku={this.state.data.sku}\n//     product_price={this.state.data.product_price}\n//     product_in_stock={this.state.data.product_in_stock}\n//     product_brand_name={this.state.data.product_brand_name}\n//     // product_image_link={this.state.data.product_image_link}\n//     product_warranty={this.state.data.product_warranty}\n//     warranty_type={this.state.data.warranty_type}\n//     product_discount={this.state.data.product_discount}\n//     purchase_note={this.state.data.purchase_note}\n//     // product_variations={this.state.data.product_variations}\n//     product_weight={this.state.data.product_weight}\n//     dimension_length={this.state.data.dimension_length}\n//     dimension_width={this.state.data.dimension_width}\n//     dimension_height={this.state.data.dimension_height}\n//     shipping_charges={this.state.data.shipping_charges}\n//     handling_fee={this.state.data.handling_fee}\n// />\nimport React, { Component } from 'react';\nimport { Row, Table, Button, Nav, Col, Image, Card, Form, InputGroup, Accordion } from 'react-bootstrap';\nimport axios from 'axios';\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service'; // import ViewProduct from './all-products-contents/view-product'\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight, faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\nimport CardAccordion from '../../../../card_accordion';\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\nimport GlobalStyleSheet from '../../../../../../styleSheet';\nimport TitleRow from '../../../../title-row';\nimport AddNew from './add-new';\n\nclass AllProducts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      productsArray: [],\n      viewProduct: false,\n      data: {}\n    };\n  } // Getting Product Categories from DB\n  // async componentDidMount() {\n  //     const url = MuhalikConfig.PATH + '/api/products/';\n  //     try {\n  //         const response = await axios.get(url);\n  //         console.log('data:', response.data.data.docs)\n  //         this.setState({ productsArray: response.data.data.docs })\n  //     } catch (error) {\n  //         console.log('Data Fetching Eror:', error);\n  //     }    \n  // }\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products/';\n    const currentComponent = this;\n    await axios.get(url, {\n      headers: {\n        'authorization': await getUncodededTokenFromStorage()\n      }\n    }).then(response => {\n      console.log('data:', response.data.data);\n      currentComponent.setState({\n        productsArray: response.data.data\n      });\n    }).catch(error => {\n      alert('Data Fetchig Error: ', error);\n    });\n  }\n\n  handleViewProduct(index) {\n    const selectedElement = Object.assign([], this.state.productsArray[index]); // if (selectedElement.product_type != 'simple-product') {\n    //     let array = [];\n    //     const copyArray = selectedElement.product_variations\n    //     copyArray.forEach((element, index) => {\n    //         array.push({\n    //             item: element.item, price: element.price, stock: element.stock, image_link: element.image_link,\n    //             price_error: '', stock_error: '', image_link_error: '', customField: element.customField\n    //         })\n    //     })\n    //     selectedElement.product_variations = array\n    // } else {\n    //     selectedElement.product_variations = []\n    // }\n\n    this.setState({\n      data: selectedElement,\n      viewProduct: 'view'\n    });\n  }\n\n  handleEditProduct(index) {\n    if (index == -1) {\n      return;\n    } else {\n      const selectedElement = Object.assign([], this.state.productsArray[index]);\n\n      if (selectedElement.product_type != 'simple-product') {\n        let array = [];\n        const copyArray = selectedElement.product_variations;\n        copyArray.forEach((element, index) => {\n          array.push({\n            item: element.item,\n            price: element.price,\n            stock: element.stock,\n            image_link: element.image_link,\n            price_error: '',\n            stock_error: '',\n            image_link_error: '',\n            customField: element.customField\n          });\n        });\n        selectedElement.product_variations = array;\n      } else {\n        selectedElement.product_variations = [];\n      }\n\n      this.setState({\n        data: selectedElement,\n        viewProduct: 'edit'\n      });\n    }\n  }\n\n  async handleDeleteProduct(index) {\n    const copyArray = Object.assign([], this.state.productsArray);\n    const array = Object.assign([], this.state.productsArray);\n    let _id = '';\n\n    if (index == -1) {\n      _id = this.state.data._id;\n    } else {\n      _id = copyArray[index]._id;\n    }\n\n    const url = MuhalikConfig.PATH + `/api/products/${_id}`;\n    copyArray.forEach((element, i) => {\n      if (element._id == _id) {\n        array.splice(i, 1);\n      }\n    });\n    this.setState({\n      productsArray: array\n    }); // await axios.delete(url, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    //     return true;\n    // }).catch(function (error) {\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  isVariableProduct(element) {\n    if (element.product_type != \"simple-product\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  renderSwitch(param) {\n    switch (param) {\n      case 'view':\n        return __jsx(ViewProduct, {\n          data: this.state.data,\n          back: () => this.setState({\n            viewProduct: false,\n            data: {}\n          }),\n          isVariableProduct: this.state.data.product_type != \"simple-product\",\n          delete: this.handleDeleteProduct(-1),\n          update: this.handleEditProduct(-1)\n        });\n        break;\n\n      case 'edit':\n        return __jsx(AddNew, {\n          upload: this.upload,\n          title: 'Vendor Dashboard / All Products / Update',\n          isUpdateProduct: true,\n          back: () => this.setState({\n            viewProduct: false,\n            data: {}\n          }),\n          isVariableProduct: this.state.data.product_type == 'variable-product',\n          productCategories: this.state.data.product_category,\n          productSubCategories: this.state.data.product_sub_category,\n          productSubSubCategories: this.state.data.product_sub_sub_category,\n          subCategoryDisabled: false,\n          subSubCategoryDisabled: false,\n          productTags: this.state.data.product_tags,\n          warrantyType: this.state.data.warranty_type,\n          simple_product_image_link: this.state.data.product_image_link,\n          variationsArray: this.state.data.product_variations,\n          dangerousGoodsArray: this.state.data.dangerous_goods,\n          product_name: this.state.data.product_name,\n          product_description: this.state.data.product_description,\n          product_type: 'variable-product' // product_type={this.state.data.product_type}\n          ,\n          sku: this.state.data.sku,\n          product_price: this.state.data.product_price,\n          product_in_stock: this.state.data.product_in_stock,\n          product_brand_name: this.state.data.product_brand_name // product_image_link={this.state.data.product_image_link}\n          ,\n          product_warranty: this.state.data.product_warranty,\n          warranty_type: this.state.data.warranty_type,\n          product_discount: this.state.data.product_discount,\n          purchase_note: this.state.data.purchase_note // product_variations={this.state.data.product_variations}\n          ,\n          product_weight: this.state.data.product_weight,\n          dimension_length: this.state.data.dimension_length,\n          dimension_width: this.state.data.dimension_width,\n          dimension_height: this.state.data.dimension_height,\n          shipping_charges: this.state.data.shipping_charges,\n          handling_fee: this.state.data.handling_fee\n        });\n        break;\n\n      default:\n        return __jsx(React.Fragment, null, __jsx(TitleRow, {\n          icon: faPlus,\n          title: ' Vendor Dashboard / All Products'\n        }), __jsx(Row, {\n          noGutters: true,\n          style: {\n            margin: '2%',\n            background: 'white'\n          }\n        }, __jsx(Table, {\n          responsive: true,\n          bordered: true,\n          hover: true,\n          size: \"sm\"\n        }, __jsx(\"thead\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"tr\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(Form.Check, {\n          type: \"checkbox\"\n        })), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Name\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"SKU\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Stock\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Price\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Categories\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Tags\"), __jsx(\"th\", {\n          style: {\n            textAlign: 'center'\n          },\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, \"Date\"))), __jsx(\"tbody\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, this.state.productsArray && this.state.productsArray.map((element, index) => __jsx(React.Fragment, null, this.isVariableProduct(element) ? __jsx(\"tr\", {\n          key: index,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(Form.Check, {\n          type: \"checkbox\"\n        })), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleViewProduct(index)\n        }, \" View \"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleEditProduct(index)\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleDeleteProduct(index)\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_in_stock), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_price), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_tags && element.product_tags.map(e => e.value + ',')), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_entry_date)) : __jsx(React.Fragment, null, __jsx(\"tr\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, __jsx(Form.Check, {\n          type: \"checkbox\"\n        })), __jsx(\"td\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"td\"\n        }, element.product_name, __jsx(\"div\", {\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]]) + \" \" + \"mr-auto\"\n        }), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleViewProduct(index)\n        }, \"View\"), __jsx(Nav.Link, {\n          style: styles.nav_link\n        }, \"Edit\"), __jsx(Nav.Link, {\n          style: styles.nav_link,\n          onClick: () => this.handleDeleteProduct(index)\n        }, \"Delete\")), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.sku ? element.sku : '-'), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(e => e.item[e.item.length - 2].value + ',')), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_variations.map(e => e.item[e.item.length - 3].value + ',')), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_category && element.product_category.map(e => e.value + ',')), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_tags && element.product_tags.map(e => e.value + ',')), __jsx(\"td\", {\n          align: \"center\",\n          style: styles.label,\n          className: _JSXStyle.dynamic([[\"3582920204\", [GlobalStyleSheet.form_label_fontsize]]])\n        }, element.product_entry_date)))))))), __jsx(_JSXStyle, {\n          id: \"3582920204\",\n          dynamic: [GlobalStyleSheet.form_label_fontsize]\n        }, [`.td.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:${GlobalStyleSheet.form_label_fontsize};}`]));\n    }\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(\"div\", null, this.renderSwitch(this.state.viewProduct)));\n  }\n\n}\n\nconst ViewProduct = props => {\n  const [imgPreview, setImgPreview] = React.useState(false);\n  const [index, setIndex] = React.useState('');\n  const [imgData, setImgData] = React.useState('');\n  const len = props.data.product_image_link.length;\n\n  function prevImage() {\n    if (index > 0) {\n      setIndex(index - 1);\n    }\n  }\n\n  function nextImage() {\n    if (index < len - 1) {\n      setIndex(index + 1);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(TitleRow, {\n    icon: faPlus,\n    title: ` Vendor Dashboard / All Products / ${props.data.product_name}`\n  }), __jsx(Form.Row, {\n    style: {\n      margin: '2%'\n    }\n  }, __jsx(FontAwesomeIcon, {\n    className: \"fontawesome\",\n    icon: faArrowLeft,\n    style: styles.fontawesome,\n    onClick: props.back,\n    className: \"mr-auto\"\n  }), __jsx(\"div\", {\n    style: styles.title,\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }, \" \", props.data.product_name), __jsx(Nav.Link, {\n    style: {\n      fontSize: GlobalStyleSheet.form_label_fontsize\n    },\n    onClick: props.update\n  }, \" Update \"), __jsx(Nav.Link, {\n    style: {\n      fontSize: GlobalStyleSheet.form_label_fontsize\n    },\n    onClick: props.delete\n  }, \" Delete \")), __jsx(CardAccordion, {\n    title: 'General Info'\n  }, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product Name:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_name,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Brand Name:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_brand_name,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"SKU:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.sku,\n    disabled: true\n  }))), props.isVariableProduct ? null : __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Price:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_price,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Product In Stock:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_in_stock,\n    disabled: true\n  })))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Warranty (month):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_warranty,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Warranty Type:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.warranty_type,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Discount (%):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_discount,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Purchase Note(s):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.purchase_note,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 12,\n    md: 12,\n    sm: 12,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Description:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    as: \"textarea\",\n    row: \"5\",\n    size: \"sm\",\n    value: props.data.product_description,\n    disabled: true\n  }))))), props.isVariableProduct ? __jsx(CardAccordion, {\n    title: 'Product Variations'\n  }, props.data.product_variations && props.data.product_variations.map(element => __jsx(React.Fragment, null, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Price\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: element.price,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Stock\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: element.stock,\n    disabled: true\n  }))), element.item && element.item.map(e => __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, e.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: e.value,\n    disabled: true\n  }))))), element.custom_fields && element.custom_fields.map(e => __jsx(React.Fragment, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 2,\n    md: 2,\n    sm: 4,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, e.name), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: e.value,\n    disabled: true\n  })))))), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  })))) : __jsx(CardAccordion, {\n    title: 'Product Images'\n  }, props.data.product_image_link && props.data.product_image_link.map((element, index) => __jsx(Image, {\n    thumbnail: true,\n    fluid: true,\n    style: {\n      minWidth: '200px',\n      maxWidth: '200px'\n    },\n    src: `https://drive.google.com/uc?export=view&id= ${img.value}`,\n    alt: \"Product Image\",\n    onClick: () => {\n      setImgPreview(true), setIndex(index), setImgData(props.data.product_image_link);\n    }\n  }))), __jsx(CardAccordion, {\n    title: 'Shipping Details'\n  }, __jsx(Row, null, __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Length (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_length,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Width (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_width,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Height (cm):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.dimension_height,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Weight (kg):\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.product_weight,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Shipping Charges:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.shipping_charges,\n    disabled: true\n  }))), __jsx(Form.Group, {\n    as: Col,\n    lg: 4,\n    md: 4,\n    sm: 6,\n    xs: 12\n  }, __jsx(Form.Label, {\n    style: styles.label\n  }, \"Handlink Fee:\"), __jsx(InputGroup, null, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    value: props.data.handling_fee,\n    disabled: true\n  }))))), __jsx(CardAccordion, {\n    title: 'Product Categories'\n  }, __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '14px',\n      fontWeight: 'bold'\n    }\n  }, \"Product Categories\"), __jsx(InputGroup, null)), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  }), \"product_weight\", __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '14px',\n      fontWeight: 'bold'\n    }\n  }, \"Product Tags\"), __jsx(InputGroup, null, props.data.product_tags && props.data.product_tags.map(element => __jsx(Form.Label, {\n    style: styles.label\n  }, element.value)))), __jsx(\"hr\", {\n    className: \"jsx-1902595393\"\n  }), __jsx(Form.Group, null, __jsx(Form.Label, {\n    style: {\n      fontSie: '14px',\n      fontWeight: 'bold'\n    }\n  }, \"Dangerous Goods\"), __jsx(InputGroup, null, props.data.dangerous_goods && props.data.dangerous_goods.map(element => __jsx(Form.Label, {\n    style: styles.label\n  }, element.value))))), imgPreview ? __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"modal-overlay\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"modal-body\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"close-modal\"\n  }, __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    className: \"mr-auto\",\n    icon: faChevronLeft,\n    style: styles.img_preview_fontawesome,\n    onClick: () => prevImage\n  }), __jsx(FontAwesomeIcon, {\n    className: \"mr-auto\",\n    icon: faChevronRight,\n    style: styles.img_preview_fontawesome,\n    onClick: nextImage\n  }), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"mr-auto\"\n  }), __jsx(FontAwesomeIcon, {\n    icon: faTimes,\n    style: styles.img_preview_fontawesome,\n    onClick: () => setImgPreview(false)\n  })), __jsx(\"div\", {\n    className: \"jsx-1902595393\" + \" \" + \"image-container\"\n  }, __jsx(\"img\", {\n    src: imgData[index].value,\n    style: {\n      maxWidth: '100%',\n      maxHeight: '90vh',\n      margin: 'auto'\n    },\n    className: \"jsx-1902595393\"\n  })))) : null, __jsx(_JSXStyle, {\n    id: \"1902595393\"\n  }, [\".modal-overlay.jsx-1902595393{position:fixed;top:0;left:0;bottom:0;right:0;z-index:10;width:100%;height:100%;background:rgba(21,21,21,0.75);}\", \".modal-body.jsx-1902595393{position:relative;z-index:11;margin:2.5%;overflow:hidden;max-width:100%;max-height:100%;}\", \".close-modal.jsx-1902595393{position:fixed;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;top:10px;left:0;right:0;width:100%;}\", \".image-container.jsx-1902595393{display:grid;height:100%;}\"]));\n};\n\nconst styles = {\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`\n  },\n  nav_link: {\n    paddingLeft: '10px',\n    paddingRight: '5px'\n  },\n  label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '2%'\n  },\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  img_preview_fontawesome: {\n    cursor: 'pointer',\n    color: 'white',\n    fontWeight: 'lighter',\n    width: '30px',\n    height: '30px',\n    maxHeight: '30px',\n    maxWidth: '30px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '17px',\n    height: '17px',\n    maxHeight: '17px',\n    maxWidth: '17px'\n  },\n  general_info_label: {\n    fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\n    width: '100%',\n    borderBottom: '1px solid gray'\n  },\n  field_label: {\n    border: `1px solid ${GlobalStyleSheet.body_color}`,\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    margin: '0%',\n    width: '100%',\n    padding: '2px 5px'\n  },\n  card: {\n    width: '100%',\n    border: '1px solid lightgray'\n  },\n  card_header: {\n    alignItems: 'center',\n    fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\n    background: `${GlobalStyleSheet.card_header_background}`\n  }\n};\nexport default AllProducts; // import React, { Component } from 'react';\n// import CreatableSelect from 'react-select/creatable';\n// const colourOptions = [{ label: '111', value: '111' }]\n// export default class AllProducts extends Component {\n//     handleChange = (newValue) => {\n//         console.log('Value Changed', newValue);\n//     };\n//     render() {\n//         return (\n//             <CreatableSelect\n//                 isMulti\n//                 onChange={this.handleChange}\n//                 options={colourOptions}\n//             />\n//         );\n//     }\n// }","map":null,"metadata":{},"sourceType":"module"}