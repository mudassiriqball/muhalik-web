{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\FYP\\\\muhalikweb\\\\pages\\\\signup.js\";\nvar __jsx = React.createElement;\nimport { Navbar, Container, Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\nimport React, { Component } from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport GlobalStyleSheet from '../styleSheet';\nconst styles = {\n  body: {\n    background: `${GlobalStyleSheet.body_color}`,\n    position: 'absolute',\n    top: '0',\n    left: '0',\n    right: '0',\n    bottom: '0'\n  },\n  buttons: {\n    background: `${GlobalStyleSheet.primry_color}`,\n    // background: 'white',\n    border: 'none' // marginTop: '50px',\n\n  },\n  container: {\n    // background: `${GlobalStyleSheet.primry_color}`,\n    background: 'white',\n    border: `0.5px solid ${GlobalStyleSheet.primry_color}`,\n    marginTop: '50px',\n    padding: '20px 30px'\n  },\n  label: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    marginRight: '10px'\n  },\n  fontawesome: {\n    color: `${GlobalStyleSheet.primary_text_color}`,\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nconst schema = yup.object({\n  fullName: yup.string().required(),\n  username: yup.string().required(),\n  mobile: yup.string().required(),\n  verificationCode: yup.string().required(),\n  email: yup.string(),\n  dob: yup.string().required(),\n  gender: yup.string().required(),\n  city: yup.string().required()\n});\n\nfunction Signup() {\n  return __jsx(Formik, {\n    validationSchema: schema,\n    onSubmit: console.log,\n    initialValues: {},\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ({\n    handleSubmit,\n    handleChange,\n    handleBlur,\n    values,\n    touched,\n    isValid,\n    errors\n  }) => __jsx(\"div\", {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(Navbar, {\n    variant: \"dark\",\n    style: {\n      background: `${GlobalStyleSheet.primry_color}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Navbar.Brand, {\n    href: \"/\",\n    className: \"mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" Muhalik \")), __jsx(Container, {\n    style: {\n      padding: '0px 50px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Col, {\n    lg: 1,\n    md: 1,\n    sm: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), __jsx(Col, {\n    lg: 10,\n    md: 10,\n    sm: 10,\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Form, {\n    noValidate: true,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationFormikUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Mobile Number \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"*\")), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    isInvalid: !!errors.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), __jsx(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Button, {\n    id: \"inputGroupPrepend\",\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Send Code\")), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, errors.username))), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationFormik01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Full Name \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"*\")), __jsx(Form.Control, {\n    type: \"text\",\n    name: \"firstName\",\n    value: values.firstName,\n    onChange: handleChange,\n    isValid: touched.firstName && !errors.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, \"Looks good!\"))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationFormik03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Verification Code \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"*\")), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"City\",\n    name: \"city\",\n    value: values.city,\n    onChange: handleChange,\n    isInvalid: !!errors.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, errors.city)), __jsx(Form.Group, {\n    as: Col,\n    md: \"6\",\n    controlId: \"validationFormik03\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"Email Address\"), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"City\",\n    name: \"city\",\n    value: values.city,\n    onChange: handleChange,\n    isInvalid: !!errors.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, errors.city))), __jsx(Form.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, __jsx(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    controlId: \"validationFormikUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Password \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"*\")), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    isInvalid: !!errors.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), __jsx(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, __jsx(Button, {\n    id: \"inputGroupPrepend\",\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: faEye,\n    style: styles.fontawesome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }))), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, errors.username))), __jsx(Form.Group, {\n    controlId: \"validationFormikUsername\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, __jsx(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Conform Password \", __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"*\")), __jsx(InputGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Username\",\n    \"aria-describedby\": \"inputGroupPrepend\",\n    name: \"username\",\n    value: values.username,\n    onChange: handleChange,\n    isInvalid: !!errors.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }), __jsx(InputGroup.Prepend, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, __jsx(Button, {\n    id: \"inputGroupPrepend\",\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: faEye,\n    style: styles.fontawesome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }))), __jsx(Form.Control.Feedback, {\n    type: \"invalid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, errors.username)))), __jsx(Col, {\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, __jsx(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  }, __jsx(Form.Check, {\n    required: true,\n    name: \"terms\",\n    label: \"Agree to terms and conditions\",\n    onChange: handleChange,\n    isInvalid: !!errors.terms,\n    feedback: errors.terms,\n    id: \"validationFormik0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  })), __jsx(Button, {\n    type: \"submit\",\n    style: styles.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, \"Submit form\"))))), __jsx(Col, {\n    lg: 1,\n    md: 1,\n    sm: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })))));\n} // class Signup extends Component {\n//     state = {}\n//     render() {\n//         return (\n//             <div style={styles.body}>\n//                 <Navbar variant=\"dark\" style={{ background: `${GlobalStyleSheet.primry_color}` }}>\n//                     <Navbar.Brand href=\"/\" className=\"mr-auto\" > Muhalik    </Navbar.Brand>\n//                 </Navbar>\n//                 <Container style={{ padding: '0px 50px' }}>\n//                     <Row>\n//                         <Col lg={1} md={1} sm={1}></Col>\n//                         <Col lg={10} md={10} sm={10} style={styles.container}>\n//                             <SignupForm />\n//                         </Col>\n//                         <Col lg={1} md={1} sm={1}></Col>\n//                     </Row>\n//                 </Container>\n//             </div>\n//         );\n//     }\n// }\n\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/FYP/muhalikweb/pages/signup.js"],"names":["Navbar","Container","Form","Col","Row","InputGroup","Button","React","Component","Formik","yup","FontAwesomeIcon","faEye","DatePicker","GlobalStyleSheet","styles","body","background","body_color","position","top","left","right","bottom","buttons","primry_color","border","container","marginTop","padding","label","color","primary_text_color","marginRight","fontawesome","width","height","maxHeight","maxWidth","schema","object","fullName","string","required","username","mobile","verificationCode","email","dob","gender","city","Signup","console","log","handleSubmit","handleChange","handleBlur","values","touched","isValid","errors","firstName","terms"],"mappings":"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","sourcesContent":["import { Navbar, Container, Form, Col, Row, InputGroup, Button } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport GlobalStyleSheet from '../styleSheet';\r\nconst styles = {\r\n    body: {\r\n        background: `${GlobalStyleSheet.body_color}`,\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        right: '0',\r\n        bottom: '0',\r\n\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        // background: 'white',\r\n        border: 'none',\r\n        // marginTop: '50px',\r\n    },\r\n    container: {\r\n        // background: `${GlobalStyleSheet.primry_color}`,\r\n        background: 'white',\r\n        border: `0.5px solid ${GlobalStyleSheet.primry_color}`,\r\n        marginTop: '50px',\r\n        padding: '20px 30px'\r\n    },\r\n    label: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\n\r\n\r\nconst schema = yup.object({\r\n    fullName: yup.string().required(),\r\n    username: yup.string().required(),\r\n    mobile: yup.string().required(),\r\n    verificationCode: yup.string().required(),\r\n    email: yup.string(),\r\n    dob: yup.string().required(),\r\n    gender: yup.string().required(),\r\n    city: yup.string().required(),\r\n});\r\n\r\nfunction Signup() {\r\n    return (\r\n        <Formik validationSchema={schema} onSubmit={console.log} initialValues={{}} >\r\n            {\r\n                ({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    touched,\r\n                    isValid,\r\n                    errors,\r\n                }) => (\r\n                        <div style={styles.body}>\r\n                            <Navbar variant=\"dark\" style={{ background: `${GlobalStyleSheet.primry_color}` }}>\r\n                                <Navbar.Brand href=\"/\" className=\"mr-auto\" > Muhalik </Navbar.Brand>\r\n                            </Navbar>\r\n                            <Container style={{ padding: '0px 50px' }}>\r\n                                <Row>\r\n                                    <Col lg={1} md={1} sm={1}></Col>\r\n                                    <Col lg={10} md={10} sm={10} style={styles.container}>\r\n                                        <Form noValidate onSubmit={handleSubmit}>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormikUsername\">\r\n                                                    <Form.Label>Mobile Number <span>*</span></Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Username\"\r\n                                                            aria-describedby=\"inputGroupPrepend\"\r\n                                                            name=\"username\"\r\n                                                            value={values.username}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={!!errors.username}\r\n                                                        />\r\n                                                        <InputGroup.Prepend>\r\n                                                            <Button id=\"inputGroupPrepend\" style={styles.buttons}>Send Code</Button>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {errors.username}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik01\">\r\n                                                    <Form.Label>Full Name <span>*</span></Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        name=\"firstName\"\r\n                                                        value={values.firstName}\r\n                                                        onChange={handleChange}\r\n                                                        isValid={touched.firstName && !errors.firstName}\r\n                                                    />\r\n                                                    <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                                    <Form.Label>Verification Code <span>*</span></Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"City\"\r\n                                                        name=\"city\"\r\n                                                        value={values.city}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={!!errors.city}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.city}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\r\n                                                    <Form.Label>Email Address</Form.Label>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"City\"\r\n                                                        name=\"city\"\r\n                                                        value={values.city}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={!!errors.city}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.city}\r\n                                                    </Form.Control.Feedback>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n\r\n                                            <Form.Row>\r\n                                                <Col md={6}>\r\n                                                    <Form.Group controlId=\"validationFormikUsername\">\r\n                                                        <Form.Label>Password <span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Username\"\r\n                                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                                name=\"username\"\r\n                                                                value={values.username}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={!!errors.username}\r\n                                                            />\r\n                                                            <InputGroup.Prepend>\r\n                                                                <Button id=\"inputGroupPrepend\" style={styles.buttons}>\r\n                                                                    <FontAwesomeIcon icon={faEye} style={styles.fontawesome} />\r\n                                                                </Button>\r\n                                                            </InputGroup.Prepend>\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.username}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n\r\n\r\n                                                    <Form.Group controlId=\"validationFormikUsername\">\r\n                                                        <Form.Label>Conform Password <span>*</span></Form.Label>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                placeholder=\"Username\"\r\n                                                                aria-describedby=\"inputGroupPrepend\"\r\n                                                                name=\"username\"\r\n                                                                value={values.username}\r\n                                                                onChange={handleChange}\r\n                                                                isInvalid={!!errors.username}\r\n                                                            />\r\n                                                            <InputGroup.Prepend>\r\n                                                                <Button id=\"inputGroupPrepend\" style={styles.buttons}>\r\n                                                                    <FontAwesomeIcon icon={faEye} style={styles.fontawesome} />\r\n                                                                </Button>\r\n                                                            </InputGroup.Prepend>\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {errors.username}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col md={6}>\r\n                                                    <Form.Group>\r\n                                                        <Form.Check\r\n                                                            required\r\n                                                            name=\"terms\"\r\n                                                            label=\"Agree to terms and conditions\"\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={!!errors.terms}\r\n                                                            feedback={errors.terms}\r\n                                                            id=\"validationFormik0\"\r\n                                                        />\r\n                                                    </Form.Group>\r\n                                                    <Button type=\"submit\" style={styles.buttons}>Submit form</Button>\r\n                                                </Col>\r\n                                            </Form.Row>\r\n\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col lg={1} md={1} sm={1}></Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\n// class Signup extends Component {\r\n//     state = {}\r\n//     render() {\r\n//         return (\r\n//             <div style={styles.body}>\r\n//                 <Navbar variant=\"dark\" style={{ background: `${GlobalStyleSheet.primry_color}` }}>\r\n//                     <Navbar.Brand href=\"/\" className=\"mr-auto\" > Muhalik    </Navbar.Brand>\r\n//                 </Navbar>\r\n//                 <Container style={{ padding: '0px 50px' }}>\r\n//                     <Row>\r\n//                         <Col lg={1} md={1} sm={1}></Col>\r\n//                         <Col lg={10} md={10} sm={10} style={styles.container}>\r\n//                             <SignupForm />\r\n//                         </Col>\r\n//                         <Col lg={1} md={1} sm={1}></Col>\r\n//                     </Row>\r\n//                 </Container>\r\n//             </div>\r\n//         );\r\n//     }\r\n// }\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}