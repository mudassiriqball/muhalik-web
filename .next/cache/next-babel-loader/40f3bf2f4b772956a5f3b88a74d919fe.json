{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\vendor\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\add-new-contents\\\\custom-fields.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\nimport Select, { components } from 'react-select';\nimport { colourOptions, groupedOptions } from '../../../../../../../sdk/consts/fields-data';\nconst groupStyles = {\n  border: `2px dotted ${colourOptions[2].color}`,\n  borderRadius: '5px',\n  background: '#f2fcff'\n};\n\nconst Group = props => __jsx(\"div\", {\n  style: groupStyles,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}, __jsx(components.Group, _extends({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }\n})));\n\nconst CustomFields = props => {\n  return __jsx(Accordion, {\n    style: {\n      width: '100%'\n    },\n    defaultActiveKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: styles.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Header, {\n    style: styles.card_header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, \"Custome Fields\"), __jsx(Accordion.Toggle, {\n    as: Button,\n    size: \"sm\",\n    eventKey: \"0\",\n    style: {\n      float: 'right',\n      background: 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, __jsx(FontAwesomeIcon, {\n    size: \"xs\",\n    icon: faSlidersH,\n    style: styles.variations_fontawesome,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    style: {\n      background: 'lightGray',\n      margin: '0.5% 1%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, props.customFieldsArray && props.customFieldsArray.map((data, index) => __jsx(Form.Row, {\n    style: {\n      padding: '1% 2%'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 37\n    }\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    size: \"sm\",\n    value: data.customFieldName,\n    onChange: () => data.customFieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 41\n    }\n  }, __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 45\n    }\n  }, data.customFieldName))), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 37\n    }\n  }, __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    size: \"sm\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: data.customFieldValue,\n    onChange: () => data.fieldValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 45\n    }\n  }), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    style: {\n      marginLeft: '1%'\n    },\n    onClick: () => props.delete(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 45\n    }\n  }, \" delete\")))))), __jsx(Form.Row, {\n    style: {\n      margin: '0.5% 1%',\n      padding: '1% 2%',\n      background: 'lightGray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, __jsx(Form.Group, {\n    as: Col,\n    lg: 5,\n    md: 5,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Field Name\"), __jsx(Select, {\n    options: groupedOptions,\n    components: {\n      Group\n    },\n    value: props.customFieldNameSelected,\n    onChange: props.fieldNameHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  })), __jsx(Form.Group, {\n    as: Col,\n    lg: 7,\n    md: 7,\n    sm: 12,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 33\n    }\n  }, \"Field Value \"), __jsx(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter Value\",\n    name: \"sku\",\n    value: props.value,\n    onChange: props.fieldValueHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 37\n    }\n  }))), __jsx(Form.Label, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }, props.isVariableProduct ? __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 37\n    }\n  }, \"For Variable Products each Custom Field will be added to all variations\") : null, __jsx(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, props.error)), __jsx(Button, {\n    variant: \"outline-primary\",\n    size: \"sm\",\n    block: true,\n    style: {\n      margin: '2% 0px'\n    },\n    onClick: props.addFieldHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"Add Field\"))))));\n};\n\nconst styles = {\n  row: {\n    margin: '2%',\n    padding: '0%'\n  },\n  card: {\n    width: '100%'\n  },\n  card_header: {\n    width: '100%',\n    alignItems: 'center',\n    // color: '#6A7074',\n    fontSize: '15px',\n    background: 'lightgray'\n  },\n  label: {\n    fontSize: '13px'\n  },\n  variations_fontawesome: {\n    color: `${GlobalStyleSheet.admin_primry_color}`,\n    marginRight: '10%',\n    width: '15px',\n    height: '15px',\n    maxHeight: '15px',\n    maxWidth: '15px'\n  }\n};\nexport default CustomFields;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js"],"names":["Accordion","Form","InputGroup","Col","Button","Row","Card","FontAwesomeIcon","faSlidersH","GlobalStyleSheet","Select","components","colourOptions","groupedOptions","groupStyles","border","color","borderRadius","background","Group","props","CustomFields","width","styles","card","card_header","float","variations_fontawesome","margin","customFieldsArray","map","data","index","padding","customFieldName","customFieldValue","fieldValue","marginLeft","delete","label","customFieldNameSelected","fieldNameHandler","value","fieldValueHandler","isVariableProduct","error","addFieldHandler","row","alignItems","fontSize","admin_primry_color","marginRight","height","maxHeight","maxWidth"],"mappings":"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","sourcesContent":["\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { colourOptions, groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\n\r\nconst groupStyles = {\r\n    border: `2px dotted ${colourOptions[2].color}`,\r\n    borderRadius: '5px',\r\n    background: '#f2fcff',\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.customFieldName}\r\n                                            onChange={() => data.customFieldName}\r\n                                        >\r\n                                            <option>{data.customFieldName}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.customFieldValue}\r\n                                                onChange={() => data.fieldValue}\r\n                                            />\r\n                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                        <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                            <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                <Select\r\n                                    options={groupedOptions}\r\n                                    components={{ Group }}\r\n                                    value={props.customFieldNameSelected}\r\n                                    onChange={props.fieldNameHandler}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter Value\"\r\n                                        name=\"sku\"\r\n                                        value={props.value}\r\n                                        onChange={props.fieldValueHandler}\r\n                                    />\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Label style={styles.label}>\r\n                                {/* <span>For Multiple Values add | between values</span> */}\r\n                                {props.isVariableProduct ?\r\n                                    <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                    : null\r\n                                }\r\n                                <span style={{ color: 'red' }}>\r\n                                    {props.error}</span>\r\n                            </Form.Label>\r\n                            <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                onClick={props.addFieldHandler}>Add Field</Button>\r\n                        </Form.Row>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;"]},"metadata":{},"sourceType":"module"}