{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Row, Form, Col, Card, Button, Spinner, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport ShowToast from '../../../../toast';\n\nclass AddCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleCategoryValueChange\", e => {\n      this.setState({\n        categoryValue: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSubmit\", () => {\n      if (this.state.categoryValue == '') {\n        this.setState({\n          error: 'Enter Value First'\n        });\n      } else {\n        this.setState({\n          isLoading: true\n        });\n        this.setState({\n          error: ''\n        });\n        this.addCategory(this);\n      }\n    });\n\n    this.state = {\n      isLoading: false,\n      showToast: false,\n      categoryValue: '',\n      error: ''\n    };\n  } //  Submit data to api\n\n\n  async addCategory(currentComponent) {\n    // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    // this.state.categoryValue\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    currentComponent.setState({\n      isLoading: false\n    });\n    currentComponent.setState({\n      showToast: true\n    });\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, this.state.showToast ? __jsx(ShowToast, {\n      onCloseHandler: e => this.setState({\n        showToast: false\n      }),\n      show: this.state.showToast,\n      header: 'Success',\n      message: 'Category Added Successfully',\n      iconName: faThumbsUp,\n      color: \"green\"\n    }) : null, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true\n    }, __jsx(FontAwesomeIcon, {\n      icon: faPlus,\n      style: styles.title_fontawesome\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title\n    }, \" Add New Category \")), __jsx(Row, {\n      noGutters: true\n    }, __jsx(Card, {\n      style: styles.card\n    }, __jsx(Card.Header, null, \"Product Category\"), __jsx(Card.Body, {\n      style: styles.card_body\n    }, __jsx(Form.Group, null, __jsx(InputGroup, null, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: this.state.categoryValue,\n      onChange: this.handleCategoryValueChange,\n      isInvalid: this.state.error\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\"\n    }, this.state.error))), __jsx(Form.Group, null, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: this.handleSubmit.bind(this),\n      disabled: this.state.isLoading,\n      block: true,\n      style: styles.submit_btn\n    }, this.state.isLoading ? 'Uploading' : 'Add Category', this.state.isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\"\n    }) : __jsx(\"div\", null)))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '5%'\n  },\n  card_body: {\n    padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default AddCategory;","map":null,"metadata":{},"sourceType":"module"}