{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MudassirR\\\\Desktop\\\\Muhalik\\\\muhalikweb\\\\src\\\\pages\\\\components\\\\admin\\\\dashboard\\\\dashboard-contents\\\\product-contents\\\\product-categories.js\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons';\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\nimport React, { Component } from 'react';\nconst categoryList = ['aa', 'bb', 'cc'];\n\nclass ProducCategories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // const[isLoading, setIsLoading] = React.useState(false);\n  // const[showToast, setShowToast] = React.useState(false);\n  // const[categoryValue, setCategoryValue] = React.useState('');\n  // const[error, setError] = React.useState('');\n\n\n  handleSubmit() {\n    if (categoryValue == '') {\n      setError('Enter Value First');\n    } else {\n      setIsLoading(true);\n      setError('');\n      addCategory(this);\n    }\n  } // Getting Product Categories from DB\n\n\n  async componentDidMount() {\n    const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\n\n    try {\n      const response = await axios.get(url);\n      this.setState({\n        product_categories_options: response.data.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async addCategory() {\n    // const url = MuhalikConfig.PATH + '/api/products/add';\n    // await axios.post(url, {\n    // this.state.categoryValue\n    // }, {\n    //     headers: { 'authorization': await getUncodededTokenFromStorage() }\n    // }).then(function (response) {\n    console.log('asdfghjk');\n    setIsLoading(false);\n    setShowToast(true);\n    return true; // }).catch(function (error) {\n    //     currentComponent.setState({ isLoading: false });\n    //     alert('Error: ', error.response.data.message);\n    //     return false;\n    // });\n  }\n\n  render() {\n    return __jsx(React.Fragment, null, __jsx(Row, {\n      style: styles.title_row,\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, __jsx(FontAwesomeIcon, {\n      icon: faListAlt,\n      style: styles.title_fontawesome,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }), __jsx(\"div\", {\n      className: \"mr-auto\",\n      style: styles.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \" Product Categories \")), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Add Category Requests\")), __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, categoryList.map(data => __jsx(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Group, {\n      as: Col,\n      lg: 6,\n      md: 6,\n      sm: 6,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 41\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: data,\n      onChange: e => setCategoryValue(e.target.value),\n      isInvalid: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, error))), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-primary\",\n      size: \"sm\",\n      onClick: handleSubmit,\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 41\n      }\n    }, \"Edit\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-danger\",\n      size: \"sm\",\n      onClick: handleSubmit,\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }\n    }, \"Discard\")), __jsx(Form.Group, {\n      as: Col,\n      lg: 2,\n      md: 2,\n      sm: 2,\n      xs: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 37\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      variant: \"outline-success\",\n      size: \"sm\",\n      onClick: handleSubmit,\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 41\n      }\n    }, \"Add\"))))))), __jsx(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, __jsx(Card, {\n      style: styles.card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, __jsx(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }, \"Add Category\")), __jsx(Card.Body, {\n      style: styles.card_body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, __jsx(InputGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, __jsx(Form.Control, {\n      type: \"text\",\n      size: \"sm\",\n      placeholder: \"Enter Category Value\",\n      name: \"sku\",\n      value: categoryValue,\n      onChange: e => setCategoryValue(e.target.value),\n      isInvalid: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }), __jsx(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 37\n      }\n    }, error))), __jsx(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      size: \"sm\",\n      onClick: handleSubmit,\n      disabled: isLoading,\n      block: true,\n      style: styles.submit_btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }, isLoading ? 'Uploading' : 'Add Category', isLoading ? __jsx(Spinner, {\n      animation: \"grow\",\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 50\n      }\n    }) : null))))));\n  }\n\n}\n\nconst styles = {\n  title_row: {\n    borderBottom: '1px solid gray',\n    padding: '1.5% 4%'\n  },\n  title_fontawesome: {\n    color: 'gray',\n    marginRight: '3%',\n    width: '26px',\n    height: '26px',\n    maxHeight: '26px',\n    maxWidth: '26px'\n  },\n  title: {\n    color: 'gray'\n  },\n  card: {\n    width: '100%',\n    margin: '2%'\n  },\n  card_body: {// padding: '5%'\n  },\n  error: {\n    width: '100%',\n    textAlign: 'center',\n    color: '#DC3545',\n    fontSize: '14px'\n  }\n};\nexport default ProducCategories;","map":{"version":3,"sources":["C:/Users/MudassirR/Desktop/Muhalik/muhalikweb/src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js"],"names":["Form","Row","Col","Card","InputGroup","Button","Spinner","FontAwesomeIcon","faPlus","faListAlt","faThumbsUp","faThumbsDown","React","Component","categoryList","ProducCategories","constructor","props","state","handleSubmit","categoryValue","setError","setIsLoading","addCategory","componentDidMount","url","MuhalikConfig","PATH","response","axios","get","setState","product_categories_options","data","error","console","log","setShowToast","render","styles","title_row","title_fontawesome","title","card","card_body","map","e","setCategoryValue","target","value","isLoading","submit_btn","borderBottom","padding","color","marginRight","width","height","maxHeight","maxWidth","margin","textAlign","fontSize"],"mappings":"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","sourcesContent":["import { Form, Row, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\n\r\nconst categoryList = ['aa', 'bb', 'cc'];\r\n\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    // const[isLoading, setIsLoading] = React.useState(false);\r\n    // const[showToast, setShowToast] = React.useState(false);\r\n    // const[categoryValue, setCategoryValue] = React.useState('');\r\n    // const[error, setError] = React.useState('');\r\n\r\n    handleSubmit() {\r\n        if (categoryValue == '') {\r\n            setError('Enter Value First')\r\n        } else {\r\n            setIsLoading(true)\r\n            setError('')\r\n            addCategory(this);\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            this.setState({ product_categories_options: response.data.data });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async  addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        console.log('asdfghjk')\r\n        setIsLoading(false);\r\n        setShowToast(true);\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            <div>Add Category Requests</div>\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            {categoryList.map((data) =>\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} lg={6} md={6} sm={6} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Category Value\"\r\n                                                name=\"sku\"\r\n                                                value={data}\r\n                                                onChange={(e) => setCategoryValue(e.target.value)}\r\n                                                isInvalid={error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Edit\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Discard\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={2} md={2} sm={2} xs={4}>\r\n                                        <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                            Add\r\n                                </Button>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n                {/* Add Categories */}\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            <div>Add Category</div>\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            <Form.Group>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={categoryValue}\r\n                                        onChange={(e) => setCategoryValue(e.target.value)}\r\n                                        isInvalid={error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                <Button type=\"submit\" size=\"sm\" onClick={handleSubmit} disabled={isLoading} block style={styles.submit_btn}>\r\n                                    {isLoading ? 'Uploading' : 'Add Category'}\r\n                                    {isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n"]},"metadata":{},"sourceType":"module"}