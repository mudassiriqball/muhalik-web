{"version":3,"file":"static\\development\\pages\\vendor.js","sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/interopRequireDefault.js","webpack:///./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","webpack:///./node_modules/@babel/runtime/helpers/typeof.js","webpack:///./node_modules/next/dist/client/link.js","webpack:///./node_modules/next/dist/client/router.js","webpack:///./node_modules/next/dist/client/with-router.js","webpack:///./node_modules/next/dist/next-server/lib/mitt.js","webpack:///./node_modules/next/dist/next-server/lib/router-context.js","webpack:///./node_modules/next/dist/next-server/lib/router/router.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/is-dynamic.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-matcher.js","webpack:///./node_modules/next/dist/next-server/lib/router/utils/route-regex.js","webpack:///./node_modules/next/dist/next-server/lib/utils.js","webpack:///./node_modules/next/link.js","webpack:///./node_modules/next/node_modules/react-is/cjs/react-is.development.js","webpack:///./node_modules/next/node_modules/react-is/index.js","webpack:///./src/pages/components/alert-modal.js","webpack:///./src/pages/components/toast.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/bulk-upload.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/discounts.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/inventory.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/orders.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-category.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/add-new-field-name-model.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/product-data.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products-contents/view-product.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/all-products.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/report-contents/monthly-reports.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/report-contents/overall-reports.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/report-contents/weekly-reports.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/report-contents/yearly-reports.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/reports.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/vendor-dashboard.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-side-drawer.js","webpack:///./src/pages/components/vendor/dashboard/dashboard.js","webpack:///./src/pages/vendor.js","webpack:///./src/sdk/consts/fields-data.js","webpack:///./src/sdk/consts/product-color-options.js","webpack:///./src/sdk/consts/product-size-options.js","webpack:///./src/sdk/core/authentication-service.js","webpack:///./src/sdk/muhalik.config.js","webpack:///./src/styleSheet.js","webpack:///external \"@fortawesome/free-brands-svg-icons\"","webpack:///external \"@fortawesome/free-regular-svg-icons\"","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"axios\"","webpack:///external \"formik\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"jwt-decode\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"prop-types-exact\"","webpack:///external \"react\"","webpack:///external \"react-bootstrap\"","webpack:///external \"react-countup\"","webpack:///external \"react-select\"","webpack:///external \"react-select-material-ui\"","webpack:///external \"react-select/creatable\"","webpack:///external \"reactjs-localstorage\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"url\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");exports.__esModule=true;exports.default=void 0;var _react=_interopRequireWildcard(require(\"react\"));var _url=require(\"url\");var _utils=require(\"../next-server/lib/utils\");var _router=_interopRequireDefault(require(\"./router\"));function isLocal(href){var url=(0,_url.parse)(href,false,true);var origin=(0,_url.parse)((0,_utils.getLocationOrigin)(),false,true);return!url.host||url.protocol===origin.protocol&&url.host===origin.host;}function memoizedFormatUrl(formatFunc){var lastHref=null;var lastAs=null;var lastResult=null;return(href,as)=>{if(lastResult&&href===lastHref&&as===lastAs){return lastResult;}var result=formatFunc(href,as);lastHref=href;lastAs=as;lastResult=result;return result;};}function formatUrl(url){return url&&typeof url==='object'?(0,_utils.formatWithValidation)(url):url;}var observer;var listeners=new Map();var IntersectionObserver=typeof window!=='undefined'?window.IntersectionObserver:null;var prefetched={};function getObserver(){// Return shared instance of IntersectionObserver if already created\nif(observer){return observer;}// Only create shared IntersectionObserver if supported in browser\nif(!IntersectionObserver){return undefined;}return observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(!listeners.has(entry.target)){return;}var cb=listeners.get(entry.target);if(entry.isIntersecting||entry.intersectionRatio>0){observer.unobserve(entry.target);listeners.delete(entry.target);cb();}});},{rootMargin:'200px'});}var listenToIntersections=(el,cb)=>{var observer=getObserver();if(!observer){return()=>{};}observer.observe(el);listeners.set(el,cb);return()=>{try{observer.unobserve(el);}catch(err){console.error(err);}listeners.delete(el);};};class Link extends _react.Component{constructor(props){super(props);this.p=void 0;this.cleanUpListeners=()=>{};this.formatUrls=memoizedFormatUrl((href,asHref)=>{return{href:formatUrl(href),as:asHref?formatUrl(asHref):asHref};});this.linkClicked=e=>{var{nodeName,target}=e.currentTarget;if(nodeName==='A'&&(target&&target!=='_self'||e.metaKey||e.ctrlKey||e.shiftKey||e.nativeEvent&&e.nativeEvent.which===2)){// ignore click for new tab / new window behavior\nreturn;}var{href,as}=this.formatUrls(this.props.href,this.props.as);if(!isLocal(href)){// ignore click if it's outside our scope (e.g. https://google.com)\nreturn;}var{pathname}=window.location;href=(0,_url.resolve)(pathname,href);as=as?(0,_url.resolve)(pathname,as):href;e.preventDefault();//  avoid scroll for urls with anchor refs\nvar{scroll}=this.props;if(scroll==null){scroll=as.indexOf('#')<0;}// replace state instead of push if prop is present\n_router.default[this.props.replace?'replace':'push'](href,as,{shallow:this.props.shallow}).then(success=>{if(!success)return;if(scroll){window.scrollTo(0,0);document.body.focus();}});};if(process.env.NODE_ENV!=='production'){if(props.prefetch){console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/zeit/next.js/prefetch-true-deprecated');}}this.p=props.prefetch!==false;}componentWillUnmount(){this.cleanUpListeners();}getPaths(){var{pathname}=window.location;var{href:parsedHref,as:parsedAs}=this.formatUrls(this.props.href,this.props.as);var resolvedHref=(0,_url.resolve)(pathname,parsedHref);return[resolvedHref,parsedAs?(0,_url.resolve)(pathname,parsedAs):resolvedHref];}handleRef(ref){if(this.p&&IntersectionObserver&&ref&&ref.tagName){this.cleanUpListeners();var isPrefetched=prefetched[this.getPaths().join(// Join on an invalid URI character\n'%')];if(!isPrefetched){this.cleanUpListeners=listenToIntersections(ref,()=>{this.prefetch();});}}}// The function is memoized so that no extra lifecycles are needed\n// as per https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html\nprefetch(options){if(!this.p||typeof window==='undefined')return;// Prefetch the JSON page if asked (only in the client)\nvar paths=this.getPaths();// We need to handle a prefetch error here since we may be\n// loading with priority which can reject but we don't\n// want to force navigation since this is only a prefetch\n_router.default.prefetch(paths[/* href */0],paths[/* asPath */1],options).catch(err=>{if(process.env.NODE_ENV!=='production'){// rethrow to show invalid URL errors\nthrow err;}});prefetched[paths.join(// Join on an invalid URI character\n'%')]=true;}render(){var{children}=this.props;var{href,as}=this.formatUrls(this.props.href,this.props.as);// Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\nif(typeof children==='string'){children=_react.default.createElement(\"a\",null,children);}// This will return the first child, if multiple are provided it will throw an error\nvar child=_react.Children.only(children);var props={ref:el=>{this.handleRef(el);if(child&&typeof child==='object'&&child.ref){if(typeof child.ref==='function')child.ref(el);else if(typeof child.ref==='object'){child.ref.current=el;}}},onMouseEnter:e=>{if(child.props&&typeof child.props.onMouseEnter==='function'){child.props.onMouseEnter(e);}this.prefetch({priority:true});},onClick:e=>{if(child.props&&typeof child.props.onClick==='function'){child.props.onClick(e);}if(!e.defaultPrevented){this.linkClicked(e);}}};// If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n// defined, we specify the current 'href', so that repetition is not needed by the user\nif(this.props.passHref||child.type==='a'&&!('href'in child.props)){props.href=as||href;}// Add the ending slash to the paths. So, we can serve the\n// \"<page>/index.html\" directly.\nif(process.env.__NEXT_EXPORT_TRAILING_SLASH){var rewriteUrlForNextExport=require('../next-server/lib/router/rewrite-url-for-export').rewriteUrlForNextExport;if(props.href&&typeof __NEXT_DATA__!=='undefined'&&__NEXT_DATA__.nextExport){props.href=rewriteUrlForNextExport(props.href);}}return _react.default.cloneElement(child,props);}}if(process.env.NODE_ENV==='development'){var warn=(0,_utils.execOnce)(console.error);// This module gets removed by webpack.IgnorePlugin\nvar PropTypes=require('prop-types');var exact=require('prop-types-exact');// @ts-ignore the property is supported, when declaring it on the class it outputs an extra bit of code which is not needed.\nLink.propTypes=exact({href:PropTypes.oneOfType([PropTypes.string,PropTypes.object]).isRequired,as:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),prefetch:PropTypes.bool,replace:PropTypes.bool,shallow:PropTypes.bool,passHref:PropTypes.bool,scroll:PropTypes.bool,children:PropTypes.oneOfType([PropTypes.element,(props,propName)=>{var value=props[propName];if(typeof value==='string'){warn(\"Warning: You're using a string directly inside <Link>. This usage has been deprecated. Please add an <a> tag as child of <Link>\");}return null;}]).isRequired});}var _default=Link;exports.default=_default;","\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.useRouter=useRouter;exports.makePublicRouterInstance=makePublicRouterInstance;exports.createRouter=exports.withRouter=exports.default=void 0;var _react=_interopRequireDefault(require(\"react\"));var _router2=_interopRequireWildcard(require(\"../next-server/lib/router/router\"));exports.Router=_router2.default;exports.NextRouter=_router2.NextRouter;var _routerContext=require(\"../next-server/lib/router-context\");var _withRouter=_interopRequireDefault(require(\"./with-router\"));exports.withRouter=_withRouter.default;/* global window */var singletonRouter={router:null,// holds the actual router instance\nreadyCallbacks:[],ready(cb){if(this.router)return cb();if(typeof window!=='undefined'){this.readyCallbacks.push(cb);}}};// Create public properties and methods of the router in the singletonRouter\nvar urlPropertyFields=['pathname','route','query','asPath','components','isFallback'];var routerEvents=['routeChangeStart','beforeHistoryChange','routeChangeComplete','routeChangeError','hashChangeStart','hashChangeComplete'];var coreMethodFields=['push','replace','reload','back','prefetch','beforePopState'];// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter,'events',{get(){return _router2.default.events;}});urlPropertyFields.forEach(field=>{// Here we need to use Object.defineProperty because, we need to return\n// the property assigned to the actual router\n// The value might get changed as we change routes and this is the\n// proper way to access it\nObject.defineProperty(singletonRouter,field,{get(){var router=getRouter();return router[field];}});});coreMethodFields.forEach(field=>{// We don't really know the types here, so we add them later instead\n;singletonRouter[field]=function(){var router=getRouter();return router[field](...arguments);};});routerEvents.forEach(event=>{singletonRouter.ready(()=>{_router2.default.events.on(event,function(){var eventField=\"on\"+event.charAt(0).toUpperCase()+event.substring(1);var _singletonRouter=singletonRouter;if(_singletonRouter[eventField]){try{_singletonRouter[eventField](...arguments);}catch(err){// tslint:disable-next-line:no-console\nconsole.error(\"Error when running the Router event: \"+eventField);// tslint:disable-next-line:no-console\nconsole.error(err.message+\"\\n\"+err.stack);}}});});});function getRouter(){if(!singletonRouter.router){var message='No router instance found.\\n'+'You should only use \"next/router\" inside the client side of your app.\\n';throw new Error(message);}return singletonRouter.router;}// Export the singletonRouter and this is the public API.\nvar _default=singletonRouter;// Reexport the withRoute HOC\nexports.default=_default;function useRouter(){return _react.default.useContext(_routerContext.RouterContext);}// INTERNAL APIS\n// -------------\n// (do not use following exports inside the app)\n// Create a router and assign it as the singleton instance.\n// This is used in client side when we are initilizing the app.\n// This should **not** use inside the server.\nvar createRouter=function createRouter(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}singletonRouter.router=new _router2.default(...args);singletonRouter.readyCallbacks.forEach(cb=>cb());singletonRouter.readyCallbacks=[];return singletonRouter.router;};// This function is used to create the `withRouter` router instance\nexports.createRouter=createRouter;function makePublicRouterInstance(router){var _router=router;var instance={};for(var property of urlPropertyFields){if(typeof _router[property]==='object'){instance[property]=Object.assign({},_router[property]);// makes sure query is not stateful\ncontinue;}instance[property]=_router[property];}// Events is a static property on the router, the router doesn't have to be initialized to use it\ninstance.events=_router2.default.events;coreMethodFields.forEach(field=>{instance[field]=function(){return _router[field](...arguments);};});return instance;}","\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=withRouter;var _react=_interopRequireDefault(require(\"react\"));var _router=require(\"./router\");function withRouter(ComposedComponent){function WithRouterWrapper(props){return _react.default.createElement(ComposedComponent,Object.assign({router:(0,_router.useRouter)()},props));}WithRouterWrapper.getInitialProps=ComposedComponent.getInitialProps// This is needed to allow checking for custom getInitialProps in _app\n;WithRouterWrapper.origGetInitialProps=ComposedComponent.origGetInitialProps;if(process.env.NODE_ENV!=='production'){var name=ComposedComponent.displayName||ComposedComponent.name||'Unknown';WithRouterWrapper.displayName=\"withRouter(\"+name+\")\";}return WithRouterWrapper;}","\"use strict\";\n/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction mitt() {\n    const all = Object.create(null);\n    return {\n        on(type, handler) {\n            ;\n            (all[type] || (all[type] = [])).push(handler);\n        },\n        off(type, handler) {\n            if (all[type]) {\n                // tslint:disable-next-line:no-bitwise\n                all[type].splice(all[type].indexOf(handler) >>> 0, 1);\n            }\n        },\n        emit(type, ...evts) {\n            // eslint-disable-next-line array-callback-return\n            ;\n            (all[type] || []).slice().map((handler) => {\n                handler(...evts);\n            });\n        },\n    };\n}\nexports.default = mitt;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = __importStar(require(\"react\"));\nexports.RouterContext = React.createContext(null);\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\nconst mitt_1 = __importDefault(require(\"../mitt\"));\nconst utils_1 = require(\"../utils\");\nconst is_dynamic_1 = require(\"./utils/is-dynamic\");\nconst route_matcher_1 = require(\"./utils/route-matcher\");\nconst route_regex_1 = require(\"./utils/route-regex\");\nfunction addBasePath(path) {\n    // variable is always a string\n    const p = process.env.__NEXT_ROUTER_BASEPATH;\n    return path.indexOf(p) !== 0 ? p + path : path;\n}\nfunction toRoute(path) {\n    return path.replace(/\\/$/, '') || '/';\n}\nconst prepareRoute = (path) => toRoute(!path || path === '/' ? '/index' : path);\nfunction fetchNextData(pathname, query, isServerRender, cb) {\n    let attempts = isServerRender ? 3 : 1;\n    function getResponse() {\n        return fetch(utils_1.formatWithValidation({\n            // @ts-ignore __NEXT_DATA__\n            pathname: `/_next/data/${__NEXT_DATA__.buildId}${pathname}.json`,\n            query,\n        }), {\n            // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n            // Cookies may also be required for `getServerSideProps`.\n            //\n            // > `fetch` won’t send cookies, unless you set the credentials init\n            // > option.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n            //\n            // > For maximum browser compatibility when it comes to sending &\n            // > receiving cookies, always supply the `credentials: 'same-origin'`\n            // > option instead of relying on the default.\n            // https://github.com/github/fetch#caveats\n            credentials: 'same-origin',\n        }).then(res => {\n            if (!res.ok) {\n                if (--attempts > 0 && res.status >= 500) {\n                    return getResponse();\n                }\n                throw new Error(`Failed to load static props`);\n            }\n            return res.json();\n        });\n    }\n    return getResponse()\n        .then(data => {\n        return cb ? cb(data) : data;\n    })\n        .catch((err) => {\n        // We should only trigger a server-side transition if this was caused\n        // on a client-side transition. Otherwise, we'd get into an infinite\n        // loop.\n        if (!isServerRender) {\n            ;\n            err.code = 'PAGE_LOAD_ERROR';\n        }\n        throw err;\n    });\n}\nclass Router {\n    constructor(pathname, query, as, { initialProps, pageLoader, App, wrapApp, Component, err, subscription, isFallback, }) {\n        // Static Data Cache\n        this.sdc = {};\n        this.onPopState = (e) => {\n            if (!e.state) {\n                // We get state as undefined for two reasons.\n                //  1. With older safari (< 8) and older chrome (< 34)\n                //  2. When the URL changed with #\n                //\n                // In the both cases, we don't need to proceed and change the route.\n                // (as it's already changed)\n                // But we can simply replace the state with the new changes.\n                // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n                // So, doing the following for (1) does no harm.\n                const { pathname, query } = this;\n                this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), utils_1.getURL());\n                return;\n            }\n            // Make sure we don't re-render on initial load,\n            // can be caused by navigating back from an external site\n            if (e.state &&\n                this.isSsr &&\n                e.state.as === this.asPath &&\n                url_1.parse(e.state.url).pathname === this.pathname) {\n                return;\n            }\n            // If the downstream application returns falsy, return.\n            // They will then be responsible for handling the event.\n            if (this._bps && !this._bps(e.state)) {\n                return;\n            }\n            const { url, as, options } = e.state;\n            if (process.env.NODE_ENV !== 'production') {\n                if (typeof url === 'undefined' || typeof as === 'undefined') {\n                    console.warn('`popstate` event triggered but `event.state` did not have `url` or `as` https://err.sh/zeit/next.js/popstate-state-empty');\n                }\n            }\n            this.replace(url, as, options);\n        };\n        this._getStaticData = (asPath) => {\n            const pathname = prepareRoute(url_1.parse(asPath).pathname);\n            return process.env.NODE_ENV === 'production' && this.sdc[pathname]\n                ? Promise.resolve(this.sdc[pathname])\n                : fetchNextData(pathname, null, this.isSsr, data => (this.sdc[pathname] = data));\n        };\n        this._getServerData = (asPath) => {\n            let { pathname, query } = url_1.parse(asPath, true);\n            pathname = prepareRoute(pathname);\n            return fetchNextData(pathname, query, this.isSsr);\n        };\n        // represents the current component key\n        this.route = toRoute(pathname);\n        // set up the component cache (by route keys)\n        this.components = {};\n        // We should not keep the cache, if there's an error\n        // Otherwise, this cause issues when when going back and\n        // come again to the errored page.\n        if (pathname !== '/_error') {\n            this.components[this.route] = {\n                Component,\n                props: initialProps,\n                err,\n                __N_SSG: initialProps && initialProps.__N_SSG,\n                __N_SSP: initialProps && initialProps.__N_SSP,\n            };\n        }\n        this.components['/_app'] = { Component: App };\n        // Backwards compat for Router.router.events\n        // TODO: Should be remove the following major version as it was never documented\n        this.events = Router.events;\n        this.pageLoader = pageLoader;\n        this.pathname = pathname;\n        this.query = query;\n        // if auto prerendered and dynamic route wait to update asPath\n        // until after mount to prevent hydration mismatch\n        this.asPath =\n            // @ts-ignore this is temporarily global (attached to window)\n            is_dynamic_1.isDynamicRoute(pathname) && __NEXT_DATA__.autoExport ? pathname : as;\n        this.sub = subscription;\n        this.clc = null;\n        this._wrapApp = wrapApp;\n        // make sure to ignore extra popState in safari on navigating\n        // back from external site\n        this.isSsr = true;\n        this.isFallback = isFallback;\n        if (typeof window !== 'undefined') {\n            // in order for `e.state` to work on the `onpopstate` event\n            // we have to register the initial route upon initialization\n            this.changeState('replaceState', utils_1.formatWithValidation({ pathname, query }), as);\n            window.addEventListener('popstate', this.onPopState);\n        }\n    }\n    // @deprecated backwards compatibility even though it's a private method.\n    static _rewriteUrlForNextExport(url) {\n        if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n            const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                .rewriteUrlForNextExport;\n            return rewriteUrlForNextExport(url);\n        }\n        else {\n            return url;\n        }\n    }\n    update(route, mod) {\n        const Component = mod.default || mod;\n        const data = this.components[route];\n        if (!data) {\n            throw new Error(`Cannot update unavailable route: ${route}`);\n        }\n        const newData = Object.assign(Object.assign({}, data), { Component, __N_SSG: mod.__N_SSG, __N_SSP: mod.__N_SSP });\n        this.components[route] = newData;\n        // pages/_app.js updated\n        if (route === '/_app') {\n            this.notify(this.components[this.route]);\n            return;\n        }\n        if (route === this.route) {\n            this.notify(newData);\n        }\n    }\n    reload() {\n        window.location.reload();\n    }\n    /**\n     * Go back in history\n     */\n    back() {\n        window.history.back();\n    }\n    /**\n     * Performs a `pushState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    push(url, as = url, options = {}) {\n        return this.change('pushState', url, as, options);\n    }\n    /**\n     * Performs a `replaceState` with arguments\n     * @param url of the route\n     * @param as masks `url` for the browser\n     * @param options object you can define `shallow` and other options\n     */\n    replace(url, as = url, options = {}) {\n        return this.change('replaceState', url, as, options);\n    }\n    change(method, _url, _as, options) {\n        return new Promise((resolve, reject) => {\n            if (!options._h) {\n                this.isSsr = false;\n            }\n            // marking route changes as a navigation start entry\n            if (utils_1.ST) {\n                performance.mark('routeChange');\n            }\n            // If url and as provided as an object representation,\n            // we'll format them into the string version here.\n            const url = typeof _url === 'object' ? utils_1.formatWithValidation(_url) : _url;\n            let as = typeof _as === 'object' ? utils_1.formatWithValidation(_as) : _as;\n            // Add the ending slash to the paths. So, we can serve the\n            // \"<page>/index.html\" directly for the SSR page.\n            if (process.env.__NEXT_EXPORT_TRAILING_SLASH) {\n                const rewriteUrlForNextExport = require('./rewrite-url-for-export')\n                    .rewriteUrlForNextExport;\n                // @ts-ignore this is temporarily global (attached to window)\n                if (__NEXT_DATA__.nextExport) {\n                    as = rewriteUrlForNextExport(as);\n                }\n            }\n            this.abortComponentLoad(as);\n            // If the url change is only related to a hash change\n            // We should not proceed. We should only change the state.\n            // WARNING: `_h` is an internal option for handing Next.js client-side\n            // hydration. Your app should _never_ use this property. It may change at\n            // any time without notice.\n            if (!options._h && this.onlyAHashChange(as)) {\n                this.asPath = as;\n                Router.events.emit('hashChangeStart', as);\n                this.changeState(method, url, addBasePath(as), options);\n                this.scrollToHash(as);\n                Router.events.emit('hashChangeComplete', as);\n                return resolve(true);\n            }\n            const { pathname, query, protocol } = url_1.parse(url, true);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return resolve(false);\n            }\n            // If asked to change the current URL we should reload the current page\n            // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n            // We also need to set the method = replaceState always\n            // as this should not go into the history (That's how browsers work)\n            // We should compare the new asPath to the current asPath, not the url\n            if (!this.urlIsNew(as)) {\n                method = 'replaceState';\n            }\n            const route = toRoute(pathname);\n            const { shallow = false } = options;\n            if (is_dynamic_1.isDynamicRoute(route)) {\n                const { pathname: asPathname } = url_1.parse(as);\n                const routeRegex = route_regex_1.getRouteRegex(route);\n                const routeMatch = route_matcher_1.getRouteMatcher(routeRegex)(asPathname);\n                if (!routeMatch) {\n                    const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);\n                    if (missingParams.length > 0) {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.warn(`Mismatching \\`as\\` and \\`href\\` failed to manually provide ` +\n                                `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n                        }\n                        return reject(new Error(`The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). ` +\n                            `Read more: https://err.sh/zeit/next.js/incompatible-href-as`));\n                    }\n                }\n                else {\n                    // Merge params into `query`, overwriting any specified in search\n                    Object.assign(query, routeMatch);\n                }\n            }\n            Router.events.emit('routeChangeStart', as);\n            // If shallow is true and the route exists in the router cache we reuse the previous result\n            this.getRouteInfo(route, pathname, query, as, shallow).then(routeInfo => {\n                const { error } = routeInfo;\n                if (error && error.cancelled) {\n                    return resolve(false);\n                }\n                Router.events.emit('beforeHistoryChange', as);\n                this.changeState(method, url, addBasePath(as), options);\n                if (process.env.NODE_ENV !== 'production') {\n                    const appComp = this.components['/_app'].Component;\n                    window.next.isPrerendered =\n                        appComp.getInitialProps === appComp.origGetInitialProps &&\n                            !routeInfo.Component.getInitialProps;\n                }\n                this.set(route, pathname, query, as, routeInfo);\n                if (error) {\n                    Router.events.emit('routeChangeError', error, as);\n                    throw error;\n                }\n                Router.events.emit('routeChangeComplete', as);\n                return resolve(true);\n            }, reject);\n        });\n    }\n    changeState(method, url, as, options = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (typeof window.history === 'undefined') {\n                console.error(`Warning: window.history is not available.`);\n                return;\n            }\n            if (typeof window.history[method] === 'undefined') {\n                console.error(`Warning: window.history.${method} is not available`);\n                return;\n            }\n        }\n        if (method !== 'pushState' || utils_1.getURL() !== as) {\n            window.history[method]({\n                url,\n                as,\n                options,\n            }, \n            // Most browsers currently ignores this parameter, although they may use it in the future.\n            // Passing the empty string here should be safe against future changes to the method.\n            // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n            '', as);\n        }\n    }\n    getRouteInfo(route, pathname, query, as, shallow = false) {\n        const cachedRouteInfo = this.components[route];\n        // If there is a shallow route transition possible\n        // If the route is already rendered on the screen.\n        if (shallow && cachedRouteInfo && this.route === route) {\n            return Promise.resolve(cachedRouteInfo);\n        }\n        const handleError = (err, loadErrorFail) => {\n            return new Promise(resolve => {\n                if (err.code === 'PAGE_LOAD_ERROR' || loadErrorFail) {\n                    // If we can't load the page it could be one of following reasons\n                    //  1. Page doesn't exists\n                    //  2. Page does exist in a different zone\n                    //  3. Internal error while loading the page\n                    // So, doing a hard reload is the proper way to deal with this.\n                    window.location.href = as;\n                    // Changing the URL doesn't block executing the current code path.\n                    // So, we need to mark it as a cancelled error and stop the routing logic.\n                    err.cancelled = true;\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                if (err.cancelled) {\n                    // @ts-ignore TODO: fix the control flow here\n                    return resolve({ error: err });\n                }\n                resolve(this.fetchComponent('/_error')\n                    .then(res => {\n                    const { page: Component } = res;\n                    const routeInfo = { Component, err };\n                    return new Promise(resolve => {\n                        this.getInitialProps(Component, {\n                            err,\n                            pathname,\n                            query,\n                        }).then(props => {\n                            routeInfo.props = props;\n                            routeInfo.error = err;\n                            resolve(routeInfo);\n                        }, gipErr => {\n                            console.error('Error in error page `getInitialProps`: ', gipErr);\n                            routeInfo.error = err;\n                            routeInfo.props = {};\n                            resolve(routeInfo);\n                        });\n                    });\n                })\n                    .catch(err => handleError(err, true)));\n            });\n        };\n        return new Promise((resolve, reject) => {\n            if (cachedRouteInfo) {\n                return resolve(cachedRouteInfo);\n            }\n            this.fetchComponent(route).then(res => resolve({\n                Component: res.page,\n                __N_SSG: res.mod.__N_SSG,\n                __N_SSP: res.mod.__N_SSP,\n            }), reject);\n        })\n            .then((routeInfo) => {\n            const { Component, __N_SSG, __N_SSP } = routeInfo;\n            if (process.env.NODE_ENV !== 'production') {\n                const { isValidElementType } = require('react-is');\n                if (!isValidElementType(Component)) {\n                    throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n                }\n            }\n            return this._getData(() => __N_SSG\n                ? this._getStaticData(as)\n                : __N_SSP\n                    ? this._getServerData(as)\n                    : this.getInitialProps(Component, \n                    // we provide AppTree later so this needs to be `any`\n                    {\n                        pathname,\n                        query,\n                        asPath: as,\n                    })).then(props => {\n                routeInfo.props = props;\n                this.components[route] = routeInfo;\n                return routeInfo;\n            });\n        })\n            .catch(handleError);\n    }\n    set(route, pathname, query, as, data) {\n        this.isFallback = false;\n        this.route = route;\n        this.pathname = pathname;\n        this.query = query;\n        this.asPath = as;\n        this.notify(data);\n    }\n    /**\n     * Callback to execute before replacing router state\n     * @param cb callback to be executed\n     */\n    beforePopState(cb) {\n        this._bps = cb;\n    }\n    onlyAHashChange(as) {\n        if (!this.asPath)\n            return false;\n        const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n        const [newUrlNoHash, newHash] = as.split('#');\n        // Makes sure we scroll to the provided hash if the url/hash are the same\n        if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n            return true;\n        }\n        // If the urls are change, there's more than a hash change\n        if (oldUrlNoHash !== newUrlNoHash) {\n            return false;\n        }\n        // If the hash has changed, then it's a hash only change.\n        // This check is necessary to handle both the enter and\n        // leave hash === '' cases. The identity case falls through\n        // and is treated as a next reload.\n        return oldHash !== newHash;\n    }\n    scrollToHash(as) {\n        const [, hash] = as.split('#');\n        // Scroll to top if the hash is just `#` with no value\n        if (hash === '') {\n            window.scrollTo(0, 0);\n            return;\n        }\n        // First we check if the element by id is found\n        const idEl = document.getElementById(hash);\n        if (idEl) {\n            idEl.scrollIntoView();\n            return;\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(hash)[0];\n        if (nameEl) {\n            nameEl.scrollIntoView();\n        }\n    }\n    urlIsNew(asPath) {\n        return this.asPath !== asPath;\n    }\n    /**\n     * Prefetch page code, you may wait for the data during page rendering.\n     * This feature only works in production!\n     * @param url the href of prefetched page\n     * @param asPath the as path of the prefetched page\n     */\n    prefetch(url, asPath = url, options = {}) {\n        return new Promise((resolve, reject) => {\n            const { pathname, protocol } = url_1.parse(url);\n            if (!pathname || protocol) {\n                if (process.env.NODE_ENV !== 'production') {\n                    throw new Error(`Invalid href passed to router: ${url} https://err.sh/zeit/next.js/invalid-href-passed`);\n                }\n                return;\n            }\n            // Prefetch is not supported in development mode because it would trigger on-demand-entries\n            if (process.env.NODE_ENV !== 'production') {\n                return;\n            }\n            Promise.all([\n                this.pageLoader.prefetchData(url, asPath),\n                this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](toRoute(pathname)),\n            ]).then(() => resolve(), reject);\n        });\n    }\n    async fetchComponent(route) {\n        let cancelled = false;\n        const cancel = (this.clc = () => {\n            cancelled = true;\n        });\n        const componentResult = await this.pageLoader.loadPage(route);\n        if (cancelled) {\n            const error = new Error(`Abort fetching component for route: \"${route}\"`);\n            error.cancelled = true;\n            throw error;\n        }\n        if (cancel === this.clc) {\n            this.clc = null;\n        }\n        return componentResult;\n    }\n    _getData(fn) {\n        let cancelled = false;\n        const cancel = () => {\n            cancelled = true;\n        };\n        this.clc = cancel;\n        return fn().then(data => {\n            if (cancel === this.clc) {\n                this.clc = null;\n            }\n            if (cancelled) {\n                const err = new Error('Loading initial props cancelled');\n                err.cancelled = true;\n                throw err;\n            }\n            return data;\n        });\n    }\n    getInitialProps(Component, ctx) {\n        const { Component: App } = this.components['/_app'];\n        const AppTree = this._wrapApp(App);\n        ctx.AppTree = AppTree;\n        return utils_1.loadGetInitialProps(App, {\n            AppTree,\n            Component,\n            router: this,\n            ctx,\n        });\n    }\n    abortComponentLoad(as) {\n        if (this.clc) {\n            const e = new Error('Route Cancelled');\n            e.cancelled = true;\n            Router.events.emit('routeChangeError', e, as);\n            this.clc();\n            this.clc = null;\n        }\n    }\n    notify(data) {\n        this.sub(data, this.components['/_app'].Component);\n    }\n}\nexports.default = Router;\nRouter.events = mitt_1.default();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Identify /[param]/ in route string\nconst TEST_ROUTE = /\\/\\[[^/]+?\\](?=\\/|$)/;\nfunction isDynamicRoute(route) {\n    return TEST_ROUTE.test(route);\n}\nexports.isDynamicRoute = isDynamicRoute;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteMatcher(routeRegex) {\n    const { re, groups } = routeRegex;\n    return (pathname) => {\n        const routeMatch = re.exec(pathname);\n        if (!routeMatch) {\n            return false;\n        }\n        const decode = decodeURIComponent;\n        const params = {};\n        Object.keys(groups).forEach((slugName) => {\n            const g = groups[slugName];\n            const m = routeMatch[g.pos];\n            if (m !== undefined) {\n                params[slugName] = ~m.indexOf('/')\n                    ? m.split('/').map(entry => decode(entry))\n                    : g.repeat\n                        ? [decode(m)]\n                        : decode(m);\n            }\n        });\n        return params;\n    };\n}\nexports.getRouteMatcher = getRouteMatcher;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction getRouteRegex(normalizedRoute) {\n    // Escape all characters that could be considered RegEx\n    const escapedRoute = (normalizedRoute.replace(/\\/$/, '') || '/').replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&');\n    const groups = {};\n    let groupIndex = 1;\n    const parameterizedRoute = escapedRoute.replace(/\\/\\\\\\[([^/]+?)\\\\\\](?=\\/|$)/g, (_, $1) => {\n        const isCatchAll = /^(\\\\\\.){3}/.test($1);\n        groups[$1\n            // Un-escape key\n            .replace(/\\\\([|\\\\{}()[\\]^$+*?.-])/g, '$1')\n            .replace(/^\\.{3}/, '')\n        // eslint-disable-next-line no-sequences\n        ] = { pos: groupIndex++, repeat: isCatchAll };\n        return isCatchAll ? '/(.+?)' : '/([^/]+?)';\n    });\n    return {\n        re: new RegExp('^' + parameterizedRoute + '(?:/)?$', 'i'),\n        groups,\n    };\n}\nexports.getRouteRegex = getRouteRegex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst url_1 = require(\"url\");\n/**\n * Utils\n */\nfunction execOnce(fn) {\n    let used = false;\n    let result = null;\n    return (...args) => {\n        if (!used) {\n            used = true;\n            result = fn.apply(this, args);\n        }\n        return result;\n    };\n}\nexports.execOnce = execOnce;\nfunction getLocationOrigin() {\n    const { protocol, hostname, port } = window.location;\n    return `${protocol}//${hostname}${port ? ':' + port : ''}`;\n}\nexports.getLocationOrigin = getLocationOrigin;\nfunction getURL() {\n    const { href } = window.location;\n    const origin = getLocationOrigin();\n    return href.substring(origin.length);\n}\nexports.getURL = getURL;\nfunction getDisplayName(Component) {\n    return typeof Component === 'string'\n        ? Component\n        : Component.displayName || Component.name || 'Unknown';\n}\nexports.getDisplayName = getDisplayName;\nfunction isResSent(res) {\n    return res.finished || res.headersSent;\n}\nexports.isResSent = isResSent;\nasync function loadGetInitialProps(App, ctx) {\n    var _a;\n    if (process.env.NODE_ENV !== 'production') {\n        if ((_a = App.prototype) === null || _a === void 0 ? void 0 : _a.getInitialProps) {\n            const message = `\"${getDisplayName(App)}.getInitialProps()\" is defined as an instance method - visit https://err.sh/zeit/next.js/get-initial-props-as-an-instance-method for more information.`;\n            throw new Error(message);\n        }\n    }\n    // when called from _app `ctx` is nested in `ctx`\n    const res = ctx.res || (ctx.ctx && ctx.ctx.res);\n    if (!App.getInitialProps) {\n        if (ctx.ctx && ctx.Component) {\n            // @ts-ignore pageProps default\n            return {\n                pageProps: await loadGetInitialProps(ctx.Component, ctx.ctx),\n            };\n        }\n        return {};\n    }\n    const props = await App.getInitialProps(ctx);\n    if (res && isResSent(res)) {\n        return props;\n    }\n    if (!props) {\n        const message = `\"${getDisplayName(App)}.getInitialProps()\" should resolve to an object. But found \"${props}\" instead.`;\n        throw new Error(message);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        if (Object.keys(props).length === 0 && !ctx.ctx) {\n            console.warn(`${getDisplayName(App)} returned an empty object from \\`getInitialProps\\`. This de-optimizes and prevents automatic static optimization. https://err.sh/zeit/next.js/empty-object-getInitialProps`);\n        }\n    }\n    return props;\n}\nexports.loadGetInitialProps = loadGetInitialProps;\nexports.urlObjectKeys = [\n    'auth',\n    'hash',\n    'host',\n    'hostname',\n    'href',\n    'path',\n    'pathname',\n    'port',\n    'protocol',\n    'query',\n    'search',\n    'slashes',\n];\nfunction formatWithValidation(url, options) {\n    if (process.env.NODE_ENV === 'development') {\n        if (url !== null && typeof url === 'object') {\n            Object.keys(url).forEach(key => {\n                if (exports.urlObjectKeys.indexOf(key) === -1) {\n                    console.warn(`Unknown key passed via urlObject into url.format: ${key}`);\n                }\n            });\n        }\n    }\n    return url_1.format(url, options);\n}\nexports.formatWithValidation = formatWithValidation;\nexports.SP = typeof performance !== 'undefined';\nexports.ST = exports.SP &&\n    typeof performance.mark === 'function' &&\n    typeof performance.measure === 'function';\n","module.exports = require('./dist/client/link')\n","/** @license React v16.8.6\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\n\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' ||\n  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);\n}\n\n/**\n * Forked from fbjs/warning:\n * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js\n *\n * Only change is we use console.warn instead of console.error,\n * and do nothing when 'console' is not supported.\n * This really simplifies the code.\n * ---\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar lowPriorityWarning = function () {};\n\n{\n  var printWarning = function (format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.warn(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  lowPriorityWarning = function (condition, format) {\n    if (format === undefined) {\n      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nvar lowPriorityWarning$1 = lowPriorityWarning;\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n              default:\n                return $$typeof;\n            }\n        }\n      case REACT_LAZY_TYPE:\n      case REACT_MEMO_TYPE:\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n}\n\n// AsyncMode is deprecated along with isAsyncMode\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\n\nvar hasWarnedAboutDeprecatedIsAsyncMode = false;\n\n// AsyncMode should be deprecated\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true;\n      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.typeOf = typeOf;\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isValidElementType = isValidElementType;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import { Modal, Form, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction AlertModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"alert-modal\"\r\n            centered\r\n        >\r\n            <div style={{ border: `1px solid ${props.color}`, borderRadius: '5px' }}>\r\n                <Modal.Header closeButton style={{ color: `${props.color}`, borderBottom: `1px solid ${props.color}` }}>\r\n                    <FontAwesomeIcon icon={props.iconName} style={{\r\n                        color: `${props.color}`,\r\n                        marginRight: '10px',\r\n                        width: '35px',\r\n                        height: '35px',\r\n                        maxHeight: '35px',\r\n                        maxWidth: '35px',\r\n                    }} ></FontAwesomeIcon>\r\n                    <Modal.Title id=\"alert-modal\">\r\n                        {props.header}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body >\r\n                    <Form.Label style={{ fontSize: '14px', padding: '0%', margin: '0%' }}>\r\n                        {props.message}\r\n                    </Form.Label>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button size=\"sm\" onClick={props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AlertModal;","import { Toast, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst ShowToast = props => {\r\n    return (\r\n        <div\r\n            style={{\r\n                position: 'absolute',\r\n                top: '40%',\r\n                right: '40%',\r\n                zIndex: '100'\r\n            }}\r\n        >\r\n            <Toast onClose={props.onCloseHandler} show={props.show} delay={10000} autohide style={{\r\n                display: 'absolute',\r\n                background: '#e6ffe6',\r\n                width: '300px',\r\n                border: `0.5px solid ${props.color}`\r\n            }}>\r\n                <Toast.Header>\r\n                    <FontAwesomeIcon icon={props.iconName} style={{\r\n                        color: `${props.color}`,\r\n                        width: '35px',\r\n                        height: '35px',\r\n                        maxHeight: '35px',\r\n                        maxWidth: '35px',\r\n                    }} className=\"mr-auto\"></FontAwesomeIcon>\r\n                    <span style={{ marginLeft: '20px', fontSize: '18px', color: `${props.color}`, fontWeight: 'bold' }} className=\"mr-auto\">{props.header}</span>\r\n                </Toast.Header>\r\n                <Toast.Body style={styles.toastBody}>\r\n                    <p style={{ textAlign: 'center' }}>\r\n                        <span className=\"mr-auto\">{props.message}</span>\r\n                    </p>\r\n                </Toast.Body>\r\n            </Toast>\r\n            {/* <style jsx>{`\r\n                span {\r\n                    width: 100%\r\n                }\r\n            `}</style> */}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ShowToast;\r\n\r\n\r\nconst styles = {\r\n    toastBody: {\r\n        fontSize: '16px',\r\n        padding: '10px',\r\n    },\r\n}","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport Link from 'next/link';\r\nimport { Row, Col, Card, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload, faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport axios, { post } from 'axios';\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\nimport MuhalikConfig from '../../../../../sdk/muhalik.config';\r\nclass BulkUpload extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null\r\n        }\r\n        this.onFormSubmit = this.onFormSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.fileUpload = this.fileUpload.bind(this)\r\n    }\r\n    onFormSubmit(e) {\r\n        e.preventDefault() // Stop form submit\r\n        this.fileUpload(this.state.file).then((response) => {\r\n            console.log(response.data);\r\n        })\r\n    }\r\n    onChange(e) {\r\n        this.setState({ file: e.target.files[0] })\r\n    }\r\n    async fileUpload(file) {\r\n        const url = MuhalikConfig.PATH + '/api/products/bulk-upload';\r\n        const form = new FormData();\r\n        form.append('file', file)\r\n\r\n        axios.post(url, form, {\r\n            headers: {\r\n                'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n            }\r\n        })\r\n            .then(function (response) {\r\n                return response;\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n\r\n        return \"fuck\";\r\n\r\n\r\n        // const form = new FormData()\r\n        // form.append('username', 'malcoded')\r\n        // form.append('file', file)\r\n        // const response = await fetch(url, {\r\n        //     method: 'POST',\r\n        //     headers: { 'Content-Type': 'multipart/form-data' },\r\n        //     body: form,\r\n        // })\r\n        // return response;\r\n\r\n\r\n        // const response = await axios.post(\r\n        //     url,\r\n        //     { example: 'data' },\r\n        //     { headers: { 'Content-Type': 'application/json',\"Access-Control-Allow-Origin\": \"*\"  } }\r\n        //   )\r\n\r\n        return response;\r\n\r\n        // const form = new FormData();\r\n        // form.set('username', 'malcoded');\r\n        // form.append('file', file);\r\n        // return axios.post(url, file, {\r\n        //     headers: { 'Content-Type': 'multipart/form-data' },\r\n        // })\r\n\r\n        // const formData = new FormData();\r\n        // formData.append('file', file)\r\n        // const config = {\r\n        //     headers: {\r\n        //         \"Access-Control-Allow-Origin\": \"*\"\r\n        //     }\r\n        // }\r\n        // return post(url, formData, {\r\n        //     headers: {\r\n        //         'Access-Control-Allow-Origin': true,\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    downloadBulkUploadTemplete = () => {\r\n        fetch('/excel.xlsx')\r\n            .then(response => {\r\n                response.blob().then(blob => {\r\n                    let url = window.URL.createObjectURL(blob);\r\n                    let a = document.createElement('a');\r\n                    a.href = url;\r\n                    a.download = 'muhalik bulk-upload templete.xlsx';\r\n                    a.click();\r\n                });\r\n            });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row style={styles.row}>\r\n                    <h6 className=\"mr-auto\">Products Bulk Upload</h6>\r\n                    <Link href=\"/index\"><a>Home</a></Link>\r\n                </Row>\r\n\r\n                <Row style={styles.row}>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header style={{ background: 'skyblue' }}>Download Templete</Card.Header>\r\n                        <Card.Body>\r\n                            <Button variant=\"primary\" size=\"md\" active onClick={this.downloadBulkUploadTemplete}>\r\n                                <FontAwesomeIcon icon={faDownload} style={styles.fontawesome} />\r\n                                Download\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n                <Row style={styles.row}>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header style={{ background: 'skyblue' }}>Upload File</Card.Header>\r\n                        <Card.Body>\r\n                            <form onSubmit={this.onFormSubmit}>\r\n                                <div style={styles.browseBtnDiv}>\r\n                                    <input type=\"file\" onChange={this.onChange} />\r\n                                </div>\r\n                                <div style={{ width: '100%' }}>\r\n                                    <Button variant=\"primary\" size=\"md\" active type=\"submit\">\r\n                                        <FontAwesomeIcon icon={faUpload} style={styles.fontawesome} />\r\n                                        Upload\r\n                                    </Button>\r\n                                </div>\r\n                            </form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0px'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    browseBtnDiv: {\r\n        width: '100%',\r\n        padding: '0px 0px 10px 0px'\r\n    },\r\n    fontawesome: {\r\n        color: 'white',\r\n        marginRight: '10px',\r\n        width: '14px',\r\n        height: '14px',\r\n        maxHeight: '14px',\r\n        maxWidth: '14px',\r\n    },\r\n}\r\n\r\nexport default BulkUpload;","\r\nconst Discounts = () => {\r\n    return (\r\n        <div>\r\n                <p>This is Discount page</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Discounts;\r\n\r\n\r\n","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport { Row, Col, Card, Tabs, Tab, Button } from 'react-bootstrap'\r\n// american-sign-language-interpreting\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass Inventory extends React.Component {\r\n    // static async getInitialProps(ctx) {\r\n    //     const res = await fetch('https://api.github.com/repos/zeit/next.js')\r\n    //     const json = await res.json()\r\n    //     return { stars: 10 }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"home\" title=\"Home\">\r\n                            <p>Fuck</p>\r\n                        </Tab>\r\n                        <Tab eventKey=\"profile\" title=\"Profile\">\r\n                            <p>Fuck</p>\r\n                        </Tab>\r\n                        <Tab eventKey=\"contact\" title=\"Contact\" disabled>\r\n                            <p>Fuck</p>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Row>\r\n                <style jsx>\r\n                    {`\r\n                    \r\n                    `}\r\n                </style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0px'\r\n    },\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from 'react';\r\n\r\nimport Select from 'react-select';\r\n\r\nconst options = [\r\n  { value: 'chocolat', label: 'Chocolat' },\r\n  { value: 'strawberry', label: 'Strawberry' },\r\n  { value: 'vanilla', label: 'Vanilla' }\r\n]\r\n\r\n\r\nclass Orders extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( \r\n      <Select\r\n    isMulti\r\n    name=\"colors\"\r\n    options = {options}\r\n    className=\"basic-multi-select\"\r\n    classNamePrefix=\"select\"\r\n  />\r\n     );\r\n  }\r\n}\r\n \r\nexport default Orders;","import React, { Component } from 'react';\r\nimport { Row, Form, Col, Card, Button, Spinner, InputGroup } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport ShowToast from '../../../../toast';\r\n\r\nclass AddCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n        }\r\n    }\r\n    //  Submit data to api\r\n    async addCategory(currentComponent) {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        currentComponent.setState({ isLoading: false });\r\n        currentComponent.setState({ showToast: true });\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n    handleCategoryValueChange = (e) => {\r\n        this.setState({ categoryValue: e.target.value })\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        if (this.state.categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true });\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.showToast ? <ShowToast onCloseHandler={(e) => this.setState({ showToast: false })} show={this.state.showToast}\r\n                    header={'Success'} message={'Category Added Successfully'} iconName={faThumbsUp} color={\"green\"} />\r\n                    : null\r\n                }\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Add New Category </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Card style={styles.card}>\r\n                        <Card.Header>\r\n                            Product Category\r\n                        </Card.Header>\r\n                        <Card.Body style={styles.card_body}>\r\n                            <Form.Group>\r\n                                <InputGroup>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        size=\"sm\"\r\n                                        placeholder=\"Enter Category Value\"\r\n                                        name=\"sku\"\r\n                                        value={this.state.categoryValue}\r\n                                        onChange={this.handleCategoryValueChange}\r\n                                        isInvalid={this.state.error}\r\n                                    />\r\n                                    <Form.Control.Feedback type=\"invalid\">\r\n                                        {this.state.error}\r\n                                    </Form.Control.Feedback>\r\n                                </InputGroup>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                {/* <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p> */}\r\n                                <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                    {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                    {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                </Button>\r\n                            </Form.Group>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        width: '100%',\r\n        margin: '5%'\r\n    },\r\n    card_body: {\r\n        padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n\r\n}\r\n\r\nexport default AddCategory;","import { Modal, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\n\r\nfunction AddNewFieldNameModal(props) {\r\n    const [value, setValue] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    function handleAdd() {\r\n        if (value != \"\") {\r\n            console.log(\"handle Category:\", value)\r\n            return true;\r\n        } else {\r\n            setError('Please Enter Value')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add New Field\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label style={{ fontSize: '14px', textAlign: 'center', width: '100%' }}>\r\n                    Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\r\n                </Form.Label>\r\n                <Form.Group>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            size=\"sm\"\r\n                            placeholder=\"Enter Field Name\"\r\n                            name=\"sku\"\r\n                            value={value}\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            isInvalid={error}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button size=\"sm\" className=\"mr-auto\" onClick={handleAdd ? props.onHide : null}>\r\n                    Add\r\n                </Button>\r\n                <Button size=\"sm\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddNewFieldNameModal;","import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        {props.showCustomFields ? <Form.Label style={styles.label}>\r\n                            Please First Create Variations\r\n                        </Form.Label> :\r\n                            <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                    <Select\r\n                                        options={groupedOptions}\r\n                                        components={{ Group }}\r\n                                        value={props.customFieldNameSelected}\r\n                                        onChange={props.fieldNameHandler}\r\n                                    />\r\n                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                        Add New\r\n                                </Nav.Link>\r\n\r\n                                    <AddNewFieldNameModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Value\"\r\n                                            name=\"sku\"\r\n                                            value={props.value}\r\n                                            onChange={props.fieldValueHandler}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Label style={styles.label}>\r\n                                    {/* <span>For Multiple Values add | between values</span> */}\r\n                                    {props.isVariableProduct ?\r\n                                        <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                        : null\r\n                                    }\r\n                                    <span style={{ color: 'red' }}>\r\n                                        {props.error}</span>\r\n                                </Form.Label>\r\n                                <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                    onClick={props.addFieldHandler}>Add Field</Button>\r\n                            </Form.Row>\r\n                        }\r\n\r\n\r\n                        {/* Map */}\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.name}\r\n                                            onChange={() => data.name}\r\n                                        >\r\n                                            <option>{data.name}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.value}\r\n                                                onChange={() => data.value}\r\n                                            />\r\n                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;","\r\n// import product_size_options from '../../../../../../../sdk/consts/product-size-options'\r\n// import product_color_options from '../../../../../../../sdk/consts/product-color-options'\r\n\r\n// import { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import {\r\n//     faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown,\r\n// } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// import CreatableSelect from 'react-select/creatable';\r\n// import ReactSelectMaterialUi from \"react-select-material-ui\";\r\n// import GlobalStyleSheet from '../../../../../../../styleSheet';\r\n// import MuhalikConfig from '../../../../../../../sdk/muhalik.config';\r\n\r\n// import Select, { components } from 'react-select';\r\n// import { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\n// import AddNewFieldNameModal from './add-new-field-name-model'\r\n\r\n// const groupStyles = {\r\n//     border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n//     borderRadius: '5px',\r\n//     background: 'white',\r\n//     color: `${GlobalStyleSheet.admin_primry_color}`,\r\n// };\r\n// const coomponents = {\r\n//     DropdownIndicator: null,\r\n// };\r\n// const Group = props => (\r\n//     <div style={groupStyles}>\r\n//         <components.Group {...props} />\r\n//     </div>\r\n// );\r\n\r\n// const ProductData = props => {\r\n//     const [modalShow, setModalShow] = React.useState(false);\r\n//     let variations = true;\r\n//     if (props.attributesArray == '') {\r\n//         variations = false;\r\n//     } else {\r\n//         variations = true;\r\n//     }\r\n\r\n//     return (\r\n//         <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n\r\n//             <Card style={styles.card}>\r\n//                 <Card.Header style={styles.card_header}>\r\n//                     <Row noGutters style={{ display: 'flex', alignItems: 'center' }}>\r\n//                         <Col lg={3} md={3} sm={3} xs={4}>\r\n//                             Product Data\r\n//                         </Col>\r\n//                         <Col lg={3} md={3} sm={5} xs={8}>\r\n//                             <Form.Control\r\n//                                 as=\"select\"\r\n//                                 name=\"product_type\"\r\n//                                 size=\"sm\"\r\n//                                 value={props.product_type_values}\r\n//                                 onChange={(e) => { props.onChange(e); props.productTypeHandler(e) }}\r\n//                             >\r\n//                                 <option value='simple-product'> Simple Product </option>\r\n//                                 <option value=\"variable-prouct\"> Variable Product </option>\r\n//                             </Form.Control>\r\n//                         </Col>\r\n//                         <div className=\"mr-auto\"></div>\r\n//                         <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n//                             <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n//                         </Accordion.Toggle>\r\n//                     </Row>\r\n\r\n//                 </Card.Header>\r\n//                 <Accordion.Collapse eventKey=\"0\">\r\n//                     <Card.Body style={{ padding: '0.5%', margin: '0px' }}>\r\n//                         <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Inventory\">\r\n//                             <Row style={{ margin: '0px' }} noGutters>\r\n//                                 <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\" style={{ background: `${GlobalStyleSheet.admin_primry_color}` }}>\r\n//                                     <Nav variant=\"pills\" className=\"flex-column\" style={{ margin: '0px' }}>\r\n\r\n//                                         <Nav.Item>\r\n//                                             <div className=\"nav_link\">\r\n//                                                 <Nav.Link eventKey=\"Inventory\" style={styles.nav_link}>\r\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faStoreAlt} style={styles.product_fontawesome} />\r\n//                                                     <div className=\"linkName\"> Inventory </div>\r\n//                                                 </Nav.Link>\r\n//                                             </div>\r\n//                                         </Nav.Item>\r\n\r\n//                                         {!props.isVariableProduct ?\r\n//                                             <Nav.Item>\r\n//                                                 <div className=\"nav_link\">\r\n//                                                     <Nav.Link eventKey=\"General\" style={styles.nav_link}>\r\n//                                                         <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.product_fontawesome} />\r\n//                                                         <div className=\"linkName\"> General </div>\r\n//                                                     </Nav.Link>\r\n//                                                 </div>\r\n//                                             </Nav.Item>\r\n//                                             :\r\n//                                             <>\r\n//                                                 <Nav.Item>\r\n//                                                     <div className=\"nav_link\">\r\n//                                                         <Nav.Link eventKey=\"Attributes\" style={styles.nav_link}>\r\n//                                                             <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n//                                                             <div className=\"linkName\"> Attributes </div>\r\n//                                                         </Nav.Link>\r\n//                                                     </div>\r\n//                                                 </Nav.Item>\r\n//                                                 <Nav.Item>\r\n//                                                     <div className=\"nav_link\">\r\n//                                                         <Nav.Link eventKey=\"Variations\" style={styles.nav_link}>\r\n//                                                             <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n//                                                             <div className=\"linkName\"> Variations </div>\r\n//                                                         </Nav.Link>\r\n//                                                     </div>\r\n//                                                 </Nav.Item>\r\n//                                             </>\r\n//                                         }\r\n\r\n//                                         <Nav.Item>\r\n//                                             <div className=\"nav_link\">\r\n//                                                 <Nav.Link eventKey=\"Shipping\" style={styles.nav_link}>\r\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faTruck} style={styles.product_fontawesome} />\r\n//                                                     <div className=\"linkName\"> Shipping </div>\r\n//                                                 </Nav.Link>\r\n//                                             </div>\r\n//                                         </Nav.Item>\r\n\r\n//                                         <Nav.Item>\r\n//                                             <div className=\"nav_link\">\r\n//                                                 <Nav.Link eventKey=\"Advanced\" style={styles.nav_link}>\r\n//                                                     <FontAwesomeIcon size=\"xs\" icon={faTools} style={styles.product_fontawesome} />\r\n//                                                     <div className=\"linkName\"> Advanced </div>\r\n//                                                 </Nav.Link>\r\n//                                             </div>\r\n//                                         </Nav.Item>\r\n//                                         {/* <Nav.Item>\r\n//                                     <div className=\"nav_link\">\r\n//                                         <Nav.Link eventKey=\"Commission\" style={styles.nav_link}>\r\n//                                             <FontAwesomeIcon size=\"xs\" icon={faDollarSign} style={styles.product_fontawesome} />\r\n//                                             <div> Commission </div>\r\n//                                         </Nav.Link>\r\n//                                     </div>\r\n//                                 </Nav.Item> */}\r\n//                                     </Nav>\r\n//                                 </Col>\r\n//                                 <Col style={{ padding: '2%' }}>\r\n//                                     <Tab.Content>\r\n//                                         <Tab.Pane eventKey=\"General\">\r\n\r\n//                                             {props.isVariableProduct ? null :\r\n//                                                 <>\r\n//                                                     <Form.Row>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Product Price <span> * </span></Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"number\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Product Price\"\r\n//                                                                     name=\"product_price\"\r\n//                                                                     value={props.product_price_values}\r\n//                                                                     onChange={props.onChange}\r\n//                                                                     isInvalid={props.product_price_touched && props.product_price_errors}\r\n//                                                                 />\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.product_price_errors}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n//                                                             <Form.Control type=\"number\"\r\n//                                                                 size=\"sm\"\r\n//                                                                 name=\"product_in_stock\"\r\n//                                                                 value={props.product_in_stock_values}\r\n//                                                                 onChange={props.onChange}\r\n//                                                                 isInvalid={props.product_in_stock_touched && props.product_in_stock_errors}\r\n//                                                             />\r\n//                                                             <Form.Control.Feedback type=\"invalid\">\r\n//                                                                 {props.product_in_stock_errors}\r\n//                                                             </Form.Control.Feedback>\r\n//                                                         </Form.Group>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Brand Name</Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"text\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Brand Name\"\r\n//                                                                     name=\"product_brand_name\"\r\n//                                                                     value={props.product_brand_name_values}\r\n//                                                                     onChange={props.onChange}\r\n//                                                                     isInvalid={props.product_brand_name_touched && props.product_brand_name_errors}\r\n//                                                                 />\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.product_brand_name_errors}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                     </Form.Row>\r\n//                                                     <Form.Row>\r\n//                                                         <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Image Link <span> * </span></Form.Label>\r\n//                                                             {/* <CreatableSelect\r\n//                                                                 isMulti\r\n//                                                                 onChange={props.simpleProductImageLinkHandler}\r\n//                                                                 value={props.imageLink}\r\n//                                                                 placeholder=\"Select/Enter Size\"\r\n//                                                             /> */}\r\n//                                                             <CreatableSelect\r\n//                                                                 components={coomponents}\r\n//                                                                 inputValue={props.inputValue}\r\n//                                                                 isClearable\r\n//                                                                 isMulti\r\n//                                                                 menuIsOpen={false}\r\n//                                                                 onChange={props.simpleProductImageLinkHandler}\r\n//                                                                 onInputChange={props.simpleProductImageLinkInputChangeHandler}\r\n//                                                                 onKeyDown={props.simpleProductImageLinkhandleKeyDownHandler}\r\n//                                                                 placeholder=\"Type something and press enter...\"\r\n//                                                                 value={props.imageLink}\r\n//                                                             />\r\n//                                                         </Form.Group>\r\n//                                                     </Form.Row>\r\n//                                                     {/*<Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Product Color</Form.Label>\r\n//                                                     <CreatableSelect\r\n//                                                         onChange={props.productColorChangeHandler}\r\n//                                                         options={product_color_options}\r\n//                                                         value={props.color}\r\n//                                                         placeholder=\"Select/Enter Color\"\r\n//                                                     />\r\n//                                                 </Form.Group>\r\n//                                             </Form.Row> */}\r\n//                                                     <Form.Row>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Product Warranty (months) </Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"number\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Product Warranty\"\r\n//                                                                     name=\"product_warranty\"\r\n//                                                                     value={props.product_warranty_values}\r\n//                                                                     onChange={props.onChange}\r\n//                                                                     isInvalid={props.product_warranty_touched && props.product_warranty_errors}\r\n//                                                                 />\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.product_warranty_errors}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}> Warranty Type </Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <InputGroup.Prepend>\r\n//                                                                     <Form.Control\r\n//                                                                         as=\"select\"\r\n//                                                                         name=\"warranty_type\"\r\n//                                                                         size=\"sm\"\r\n//                                                                         value={props.warranty_type_values}\r\n//                                                                         onChange={props.onChange}\r\n//                                                                         isInvalid={props.warranty_type_touched && props.warranty_type_errors}\r\n//                                                                     >\r\n//                                                                         <option>Waranty Type</option>\r\n//                                                                         <option> No Warranty </option>\r\n//                                                                         <option> Brand Warranty </option>\r\n//                                                                         <option> Local Warranty </option>\r\n//                                                                         <option> Local Seller Warranty </option>\r\n//                                                                         <option> Non-Local Warranty </option>\r\n//                                                                         <option> Internationsl Warranty </option>\r\n//                                                                         <option> Internationsl Seller Warranty </option>\r\n//                                                                         <option> International Manufacturer Warranty </option>\r\n\r\n//                                                                     </Form.Control>\r\n//                                                                 </InputGroup.Prepend>\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.product_warranty_errors}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                         <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                             <Form.Label style={styles.label}>Product Discount</Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"number\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Discount on on Product(%)\"\r\n//                                                                     name=\"product_discount\"\r\n//                                                                     value={props.product_discount_values}\r\n//                                                                     onChange={props.onChange}\r\n//                                                                     isInvalid={props.product_discount_touched && props.product_discount_errors}\r\n//                                                                 />\r\n//                                                                 <InputGroup.Prepend>\r\n//                                                                     <Button variant='primary' size=\"sm\">%</Button>\r\n//                                                                 </InputGroup.Prepend>\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.product_discount_errors}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                     </Form.Row>\r\n//                                                 </>\r\n//                                             }\r\n//                                         </Tab.Pane>\r\n\r\n\r\n//                                         <Tab.Pane eventKey=\"Inventory\">\r\n//                                             <Form.Row>\r\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Product SKU</Form.Label>\r\n//                                                     <InputGroup>\r\n//                                                         <Form.Control\r\n//                                                             type=\"text\"\r\n//                                                             size=\"sm\"\r\n//                                                             placeholder=\"Enter SKU (Stock Keeping Unit)\"\r\n//                                                             name=\"sku\"\r\n//                                                             value={props.sku_values}\r\n//                                                             onChange={props.onChange}\r\n//                                                             isInvalid={props.sku_touched && props.sku_errors}\r\n//                                                         />\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.sku_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </InputGroup>\r\n//                                                 </Form.Group>\r\n//                                             </Form.Row>\r\n//                                         </Tab.Pane>\r\n\r\n\r\n\r\n\r\n//                                         <Tab.Pane eventKey=\"Shipping\">\r\n//                                             <Form.Group as={Row} noGutters>\r\n//                                                 <Form.Label style={styles.label}>Weight (kg)</Form.Label>\r\n//                                                 <Form.Control type=\"number\"\r\n//                                                     name=\"product_weight\"\r\n//                                                     size=\"sm\"\r\n//                                                     value={props.product_weight_values}\r\n//                                                     onChange={props.onChange}\r\n//                                                     isInvalid={props.product_weight_touched && props.product_weight_errors}\r\n//                                                 />\r\n//                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                     {props.product_weight_errors}\r\n//                                                 </Form.Control.Feedback>\r\n//                                             </Form.Group>\r\n//                                             <Form.Group as={Row} noGutters>\r\n//                                                 <Form.Label style={styles.label}>Dimensions (cm)</Form.Label>\r\n//                                                 <InputGroup>\r\n//                                                     <InputGroup.Prepend>\r\n//                                                         <Form.Control\r\n//                                                             type=\"number\"\r\n//                                                             name=\"dimension_length\"\r\n//                                                             size=\"sm\"\r\n//                                                             value={props.dimension_length_values}\r\n//                                                             onChange={props.onChange}\r\n//                                                             placeholder=\"Length\"\r\n//                                                             isInvalid={props.dimension_length_touched && props.dimension_length_errors}\r\n//                                                         />\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.dimension_length_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </InputGroup.Prepend>\r\n//                                                     <Form.Control\r\n//                                                         type=\"number\"\r\n//                                                         name=\"dimension_width\"\r\n//                                                         size=\"sm\"\r\n//                                                         value={props.dimension_width_values}\r\n//                                                         placeholder=\"Width\"\r\n//                                                         onChange={props.onChange}\r\n//                                                         isInvalid={props.dimension_width_touched && props.dimension_width_errors}\r\n//                                                     />\r\n//                                                     <InputGroup.Prepend>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.dimension_width_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                         <Form.Control\r\n//                                                             type=\"number\"\r\n//                                                             name=\"dimension_height\"\r\n//                                                             size=\"sm\"\r\n//                                                             value={props.dimension_height_values}\r\n//                                                             placeholder=\"Height\"\r\n//                                                             onChange={props.onChange}\r\n//                                                             isInvalid={props.dimension_height_touched && props.dimension_height_errors}\r\n//                                                         />\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.dimension_height_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </InputGroup.Prepend>\r\n//                                                 </InputGroup>\r\n//                                             </Form.Group>\r\n//                                             <Form.Row>\r\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Product Shipping Charges</Form.Label>\r\n//                                                     <InputGroup>\r\n//                                                         <Form.Control\r\n//                                                             type=\"text\"\r\n//                                                             size=\"sm\"\r\n//                                                             placeholder=\"Enter Product Shipping Charges\"\r\n//                                                             name=\"shipping_charges\"\r\n//                                                             value={props.shipping_charges_values}\r\n//                                                             onChange={props.onChange}\r\n//                                                             isInvalid={props.shipping_charges_touched && props.shipping_charges_errors}\r\n//                                                         />\r\n//                                                         <InputGroup.Prepend>\r\n//                                                             <Button variant='primary' size=\"sm\">Riyal</Button>\r\n//                                                         </InputGroup.Prepend>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.shipping_charges_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </InputGroup>\r\n//                                                 </Form.Group>\r\n//                                                 <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Product Handling Fee</Form.Label>\r\n//                                                     <InputGroup>\r\n//                                                         <Form.Control\r\n//                                                             type=\"text\"\r\n//                                                             size=\"sm\"\r\n//                                                             placeholder=\"Enter Product Handling Fee\"\r\n//                                                             name=\"handling_fee\"\r\n//                                                             value={props.handling_fee_values}\r\n//                                                             onChange={props.onChange}\r\n//                                                             isInvalid={props.handling_fee_touched && props.handling_fee_errors}\r\n//                                                         />\r\n//                                                         <InputGroup.Prepend>\r\n//                                                             <Button variant='primary' size=\"sm\">Riyal</Button>\r\n//                                                         </InputGroup.Prepend>\r\n//                                                         <Form.Control.Feedback type=\"invalid\">\r\n//                                                             {props.handling_fee_errors}\r\n//                                                         </Form.Control.Feedback>\r\n//                                                     </InputGroup>\r\n//                                                 </Form.Group>\r\n//                                             </Form.Row>\r\n//                                         </Tab.Pane>\r\n\r\n\r\n\r\n\r\n\r\n//                                         <Tab.Pane eventKey=\"Attributes\">\r\n//                                             <Form.Row >\r\n//                                                 <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Field Name</Form.Label>\r\n//                                                     <Select\r\n//                                                         options={groupedOptions}\r\n//                                                         components={{ Group }}\r\n//                                                         value={props.productAttributeNameSelected}\r\n//                                                         onChange={props.attributeNameHandler}\r\n//                                                     />\r\n//                                                     <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n//                                                         Add New\r\n//                                                     </Nav.Link>\r\n//                                                     <AddNewFieldNameModal\r\n//                                                         show={modalShow}\r\n//                                                         onHide={() => setModalShow(false)}\r\n//                                                     />\r\n//                                                 </Form.Group>\r\n//                                                 <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n//                                                     <Form.Label style={styles.label}>Field Value </Form.Label>\r\n//                                                     <InputGroup>\r\n//                                                         <Form.Control\r\n//                                                             type=\"text\"\r\n//                                                             placeholder=\"Enter Value\"\r\n//                                                             name=\"sku\"\r\n//                                                             value={props.value}\r\n//                                                             onChange={props.attributeValueHandler}\r\n//                                                         />\r\n//                                                         <Button variant=\"outline-primary\" style={{ marginLeft: '1%' }}\r\n//                                                             onClick={props.addAttributeHandler}>Add</Button>\r\n//                                                     </InputGroup>\r\n//                                                 </Form.Group>\r\n//                                                 <Form.Label style={styles.label}>\r\n//                                                     <span style={{ color: 'red' }}>{props.error}</span>\r\n//                                                 </Form.Label>\r\n//                                             </Form.Row>\r\n//                                             <Form.Row>\r\n//                                                 <Form.Label style={styles.label} className=\"mr-auto\">For Multiple Values add | between values</Form.Label>\r\n//                                                 <Button variant=\"outline-primary\" size=\"sm\"\r\n//                                                     onClick={props.createVariationsHandler}>Create Variations</Button>\r\n//                                             </Form.Row>\r\n//                                             <hr />\r\n//                                             {/* <Card style={{ background: 'lightGray', margin: '0.5% 1%' }}> */}\r\n\r\n//                                             {props.attributesArray && props.attributesArray.map((data, index) =>\r\n//                                                 <Form.Row style={{ padding: '0%' }} key={index}>\r\n//                                                     <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n//                                                         <Form.Control\r\n//                                                             as=\"select\"\r\n//                                                             size=\"sm\"\r\n//                                                             value={data.productAttributeName}\r\n//                                                             onChange={() => data.productAttributeName}\r\n//                                                         >\r\n//                                                             <option>{data.productAttributeName}</option>\r\n//                                                         </Form.Control>\r\n//                                                     </Form.Group>\r\n//                                                     <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n//                                                         <InputGroup>\r\n//                                                             <Form.Control\r\n//                                                                 type=\"text\"\r\n//                                                                 size=\"sm\"\r\n//                                                                 placeholder=\"Enter Value\"\r\n//                                                                 name=\"sku\"\r\n//                                                                 value={data.productAttributeValue}\r\n//                                                                 onChange={() => data.productAttributeValue}\r\n//                                                             />\r\n//                                                             <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n//                                                                 onClick={() => props.deleteAttributeHandler(index)}> delete</Button>\r\n//                                                         </InputGroup>\r\n//                                                     </Form.Group>\r\n//                                                     {/* <Button variant=\"outline-primary\" size=\"sm\" block style={{ width: '100px' }}\r\n//                                                     onClick={() => props.update(index, data.fieldName, data.fieldValue)}> update</Button> */}\r\n\r\n\r\n//                                                 </Form.Row>\r\n//                                             )}\r\n//                                         </Tab.Pane>\r\n\r\n\r\n//                                         <Tab.Pane eventKey=\"Variations\">\r\n//                                             {variations ?\r\n//                                                 <>\r\n//                                                     <Form.Row>\r\n//                                                         {/* Same Price */}\r\n//                                                         <Form.Group as={Col} >\r\n//                                                             <Form.Label style={styles.label}> Same Price</Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"number\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Price\"\r\n//                                                                     name=\"samePrice\"\r\n//                                                                     value={props.samePriceInput}\r\n//                                                                     onChange={props.variationsSamePriceChanged}\r\n//                                                                     isInvalid={props.samePriceError}\r\n//                                                                 />\r\n//                                                                 <InputGroup.Prepend>\r\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSamePriceHandler} size=\"sm\">Apply</Button>\r\n//                                                                 </InputGroup.Prepend>\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.samePriceError}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                         {/* Same Stock */}\r\n//                                                         <Form.Group as={Col} >\r\n//                                                             <Form.Label style={styles.label}> Same Stock</Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"number\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Stock\"\r\n//                                                                     name=\"sameStock\"\r\n//                                                                     value={props.sameStockInput}\r\n//                                                                     onChange={props.variationsSameStockChanged}\r\n//                                                                     isInvalid={props.sameStockError}\r\n//                                                                 />\r\n//                                                                 <InputGroup.Prepend>\r\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSameStockHandler} size=\"sm\">Apply</Button>\r\n//                                                                 </InputGroup.Prepend>\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.sameStockError}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                         {/* Same Image Link */}\r\n//                                                         <Form.Group as={Col} >\r\n//                                                             <Form.Label style={styles.label}> Same Image</Form.Label>\r\n//                                                             <InputGroup>\r\n//                                                                 <Form.Control\r\n//                                                                     type=\"text\"\r\n//                                                                     size=\"sm\"\r\n//                                                                     placeholder=\"Enter Image Link\"\r\n//                                                                     name=\"sameImgLinkInput\"\r\n//                                                                     value={props.sameImgLinkInput}\r\n//                                                                     onChange={props.variationsSameImgLinkChanged}\r\n//                                                                     isInvalid={props.sameImgLinkError}\r\n//                                                                 />\r\n//                                                                 <InputGroup.Prepend>\r\n//                                                                     <Button variant='primary' style={styles.label} onClick={props.variationsSameImgLinkHandler} size=\"sm\">Apply</Button>\r\n//                                                                 </InputGroup.Prepend>\r\n//                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                     {props.sameImgLinkError}\r\n//                                                                 </Form.Control.Feedback>\r\n//                                                             </InputGroup>\r\n//                                                         </Form.Group>\r\n//                                                     </Form.Row>\r\n//                                                     <hr />\r\n//                                                     {props.variationsArray && props.variationsArray.map((data, index) =>\r\n//                                                         <div key={index} >\r\n//                                                             <Accordion>\r\n//                                                                 <Row noGutters style={{ border: props.variationsErrorHandler(data) }}>\r\n//                                                                     {data.items && data.items.map((d, i) =>\r\n//                                                                         <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n//                                                                             <Form.Control\r\n//                                                                                 type=\"text\"\r\n//                                                                                 size=\"sm\"\r\n//                                                                                 placeholder=\"Enter Value\"\r\n//                                                                                 name=\"sku\"\r\n//                                                                                 value={d.value}\r\n//                                                                                 onChange={() => data.productAttributeValue}\r\n//                                                                             />\r\n//                                                                         </Form.Group>\r\n//                                                                     )}\r\n\r\n//                                                                     <div className=\"mr-auto\"></div>\r\n//                                                                     <Accordion.Toggle as={Form.Group} eventKey=\"0\">\r\n//                                                                         <Button variant=\"outline-primary\" size=\"sm\" style={{ marginRight: '10px' }}>\r\n//                                                                             <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n//                                                                         </Button>\r\n//                                                                     </Accordion.Toggle>\r\n//                                                                     <Form.Group style={{ float: 'right' }}>\r\n//                                                                         <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n//                                                                             onClick={() => props.deleteVariationHandler(index)}> delete</Button>\r\n//                                                                     </Form.Group>\r\n//                                                                 </Row>\r\n\r\n//                                                                 <Accordion.Collapse eventKey=\"0\">\r\n//                                                                     <div>\r\n//                                                                         <Form.Row>\r\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n//                                                                                 <Form.Label style={styles.label}>Product Price<span>*</span></Form.Label>\r\n//                                                                                 <InputGroup>\r\n//                                                                                     <Form.Control\r\n//                                                                                         type=\"number\"\r\n//                                                                                         size=\"sm\"\r\n//                                                                                         placeholder=\"Enter Product Price\"\r\n//                                                                                         name=\"product_price\"\r\n//                                                                                         value={data.price}\r\n//                                                                                         onChange={(e) => props.variationPriceHandler(e, index)}\r\n//                                                                                         isInvalid={data.price_error}\r\n//                                                                                     />\r\n//                                                                                     <Form.Control.Feedback type=\"invalid\">\r\n//                                                                                         {data.price_error}\r\n//                                                                                     </Form.Control.Feedback>\r\n//                                                                                 </InputGroup>\r\n//                                                                             </Form.Group>\r\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n//                                                                                 <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n//                                                                                 <Form.Control type=\"number\"\r\n//                                                                                     size=\"sm\"\r\n//                                                                                     name=\"product_in_stock\"\r\n//                                                                                     placeholder=\"Enter Product In Stock\"\r\n//                                                                                     value={data.stock}\r\n//                                                                                     onChange={(e) => props.variationStockHandler(e, index)}\r\n//                                                                                 />\r\n//                                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                                 </Form.Control.Feedback>\r\n//                                                                             </Form.Group>\r\n//                                                                             <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n//                                                                                 <Form.Label style={styles.label}>Image Link</Form.Label>\r\n//                                                                                 <Form.Control type=\"text\"\r\n//                                                                                     size=\"sm\"\r\n//                                                                                     name=\"image_link\"\r\n//                                                                                     placeholder=\"Enter Image Link\"\r\n//                                                                                     value={data.image_link}\r\n//                                                                                     onChange={(e) => props.variationImageLinkHandler(e, index)}\r\n//                                                                                     isInvalid={data.image_link_error}\r\n//                                                                                 />\r\n//                                                                                 <Form.Control.Feedback type=\"invalid\">\r\n//                                                                                     {data.image_link_error}\r\n//                                                                                 </Form.Control.Feedback>\r\n//                                                                             </Form.Group>\r\n//                                                                         </Form.Row>\r\n//                                                                         <Form.Row>\r\n//                                                                             {data.customField && data.customField.map((d, i) =>\r\n//                                                                                 <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n//                                                                                     <Form.Label style={styles.label}>{d.name}</Form.Label>\r\n//                                                                                     <InputGroup>\r\n//                                                                                         <Form.Control\r\n//                                                                                             type=\"text\"\r\n//                                                                                             size=\"sm\"\r\n//                                                                                             placeholder=\"Enter Value\"\r\n//                                                                                             name=\"sku\"\r\n//                                                                                             value={d.value}\r\n//                                                                                             onChange={() => data.productAttributeValue}\r\n//                                                                                         />\r\n//                                                                                         <InputGroup.Prepend>\r\n//                                                                                             <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n//                                                                                                 onClick={() => props.deleteVariationCustomFieldHandler(index, i)}> delete</Button>\r\n//                                                                                         </InputGroup.Prepend>\r\n//                                                                                     </InputGroup>\r\n//                                                                                 </Form.Group>\r\n//                                                                             )}\r\n//                                                                         </Form.Row>\r\n//                                                                     </div>\r\n//                                                                 </Accordion.Collapse>\r\n//                                                             </Accordion>\r\n//                                                             <hr />\r\n//                                                         </div>\r\n//                                                     )}\r\n//                                                     <Button variant=\"outline-primary\" size=\"sm\" block onClick={props.saveVariationsHandler}> Save Variations</Button>\r\n//                                                 </>\r\n//                                                 :\r\n//                                                 <div style={{ width: '100%', textAlign: 'center', marginTop: '10%' }}>\r\n//                                                     <Form.Label>Please First add Attributes from Attributes Tab</Form.Label>\r\n//                                                 </div>\r\n//                                             }\r\n//                                         </Tab.Pane>\r\n\r\n\r\n//                                         <Tab.Pane eventKey=\"Advanced\">\r\n//                                             <Form.Row >\r\n//                                                 <Form.Label style={styles.label}>Purchase Note</Form.Label>\r\n//                                                 <InputGroup>\r\n//                                                     <Form.Control\r\n//                                                         type=\"text\"\r\n//                                                         size=\"sm\"\r\n//                                                         placeholder=\"Enter Purchase Notes\"\r\n//                                                         name=\"purchase_note\"\r\n//                                                         value={props.purchase_note_values}\r\n//                                                         onChange={props.onChange}\r\n//                                                         isInvalid={props.purchase_note_touched && props.purchase_note_errors}\r\n//                                                     />\r\n//                                                     <Form.Control.Feedback type=\"invalid\">\r\n//                                                         {props.purchase_note_errors}\r\n//                                                     </Form.Control.Feedback>\r\n//                                                 </InputGroup>\r\n//                                             </Form.Row>\r\n//                                         </Tab.Pane>\r\n//                                         {/* <Tab.Pane eventKey=\"Commission\">\r\n//                                     Commission\r\n//                                     </Tab.Pane> */}\r\n//                                     </Tab.Content>\r\n//                                 </Col>\r\n//                             </Row>\r\n//                         </Tab.Container>\r\n//                     </Card.Body>\r\n//                 </Accordion.Collapse>\r\n//             </Card>\r\n//             <style jsx>\r\n//                 {`\r\n//                     span {\r\n//                         color: red\r\n//                     }\r\n//                     @media (max-width: 991px) {\r\n//                         .linkName {\r\n//                             display: none\r\n//                         }\r\n//                     }\r\n\r\n//                 `}\r\n//             </style>\r\n//         </Accordion >\r\n//     )\r\n// }\r\n\r\n// const styles = {\r\n//     title_row: {\r\n//         borderBottom: '1px solid gray',\r\n//         padding: '1.5% 4%'\r\n//     },\r\n//     title_fontawesome: {\r\n//         color: 'gray',\r\n//         marginRight: '3%',\r\n//         width: '26px',\r\n//         height: '26px',\r\n//         maxHeight: '26px',\r\n//         maxWidth: '26px',\r\n//     },\r\n//     title: {\r\n//         color: 'gray'\r\n//     },\r\n\r\n//     nav_link: {\r\n//         color: 'white',\r\n//         fontSize: '12px',\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         height: '45px',\r\n//     },\r\n\r\n\r\n//     row: {\r\n//         margin: '2%',\r\n//         padding: '0%'\r\n//     },\r\n//     card: {\r\n//         width: '100%',\r\n//     },\r\n//     card_header: {\r\n//         alignItems: 'center',\r\n//         // color: '#6A7074',\r\n//         fontSize: '15px',\r\n//         background: 'lightgray'\r\n//     },\r\n//     buttons: {\r\n//         background: `${GlobalStyleSheet.primry_color}`,\r\n//         border: 'none',\r\n//         fontSize: '10px',\r\n//     },\r\n//     submit_btn: {\r\n//         background: `${GlobalStyleSheet.primry_color}`,\r\n//         marginTop: '3%',\r\n//     },\r\n//     label: {\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//     },\r\n//     term_condition_label: {\r\n//         width: '100%',\r\n//         fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n//         paddingTop: '-10px',\r\n//         marginTop: '-10px',\r\n//     },\r\n//     fontawesome: {\r\n//         color: `${GlobalStyleSheet.primary_text_color}`,\r\n//         width: '15px',\r\n//         height: '15px',\r\n//         maxHeight: '15px',\r\n//         maxWidth: '15px',\r\n//     },\r\n//     product_fontawesome: {\r\n//         color: `${GlobalStyleSheet.primary_text_color}`,\r\n//         marginRight: '10%',\r\n//         width: '15px',\r\n//         height: '15px',\r\n//         maxHeight: '15px',\r\n//         maxWidth: '15px',\r\n//     },\r\n//     variations_fontawesome: {\r\n//         color: `${GlobalStyleSheet.admin_primry_color}`,\r\n//         marginRight: '10%',\r\n//         width: '15px',\r\n//         height: '15px',\r\n//         maxHeight: '15px',\r\n//         maxWidth: '15px',\r\n//     },\r\n// }\r\n\r\n// export default ProductData;\r\n\r\n\r\n\r\n\r\n\r\nimport product_size_options from '../../../../../../../sdk/consts/product-size-options'\r\nimport product_color_options from '../../../../../../../sdk/consts/product-color-options'\r\n\r\nimport { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model'\r\n\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\nconst coomponents = {\r\n    DropdownIndicator: null,\r\n};\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\nconst ProductData = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    let variations = true;\r\n    if (props.attributesArray == '') {\r\n        variations = false;\r\n    } else {\r\n        variations = true;\r\n    }\r\n\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Row noGutters style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Col lg={3} md={3} sm={3} xs={4}>\r\n                            Product Data\r\n                        </Col>\r\n                        <Col lg={3} md={3} sm={5} xs={8}>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"product_type\"\r\n                                size=\"sm\"\r\n                                value={props.product_type_values}\r\n                                onChange={(e) => { props.onChange(e); props.productTypeHandler(e) }}\r\n                            >\r\n                                <option value='simple-product'> Simple Product </option>\r\n                                <option value=\"variable-prouct\"> Variable Product </option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <div className=\"mr-auto\"></div>\r\n                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                        </Accordion.Toggle>\r\n                    </Row>\r\n\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body style={{ padding: '0.5%', margin: '0px' }}>\r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Inventory\">\r\n                            <Row style={{ margin: '0px' }} noGutters>\r\n                                <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\" style={{ background: `${GlobalStyleSheet.admin_primry_color}` }}>\r\n                                    <Nav variant=\"pills\" className=\"flex-column\" style={{ margin: '0px' }}>\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Inventory\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faStoreAlt} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Inventory </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n\r\n                                        {!props.isVariableProduct ?\r\n                                            <Nav.Item>\r\n                                                <div className=\"nav_link\">\r\n                                                    <Nav.Link eventKey=\"General\" style={styles.nav_link}>\r\n                                                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.product_fontawesome} />\r\n                                                        <div className=\"linkName\"> General </div>\r\n                                                    </Nav.Link>\r\n                                                </div>\r\n                                            </Nav.Item>\r\n                                            :\r\n                                            <>\r\n                                                <Nav.Item>\r\n                                                    <div className=\"nav_link\">\r\n                                                        <Nav.Link eventKey=\"Attributes\" style={styles.nav_link}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n                                                            <div className=\"linkName\"> Attributes </div>\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Nav.Item>\r\n                                                <Nav.Item>\r\n                                                    <div className=\"nav_link\">\r\n                                                        <Nav.Link eventKey=\"Variations\" style={styles.nav_link}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n                                                            <div className=\"linkName\"> Variations </div>\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Nav.Item>\r\n                                            </>\r\n                                        }\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Shipping\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faTruck} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Shipping </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Advanced\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faTools} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Advanced </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n                                        {/* <Nav.Item>\r\n                                    <div className=\"nav_link\">\r\n                                        <Nav.Link eventKey=\"Commission\" style={styles.nav_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faDollarSign} style={styles.product_fontawesome} />\r\n                                            <div> Commission </div>\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </Nav.Item> */}\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col style={{ padding: '2%' }}>\r\n                                    <Tab.Content>\r\n                                        <Tab.Pane eventKey=\"General\">\r\n\r\n                                            {props.isVariableProduct ? null :\r\n                                                <>\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Price <span> * </span></Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Product Price\"\r\n                                                                    name=\"product_price\"\r\n                                                                    value={props.product_price_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_price_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_price_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n                                                            <Form.Control type=\"number\"\r\n                                                                size=\"sm\"\r\n                                                                name=\"product_in_stock\"\r\n                                                                value={props.product_in_stock_values}\r\n                                                                onChange={props.onChange}\r\n                                                                isInvalid={props.product_in_stock_errors}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {props.product_in_stock_errors}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Brand Name</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Brand Name\"\r\n                                                                    name=\"product_brand_name\"\r\n                                                                    value={props.product_brand_name_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_brand_name_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_brand_name_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Image Link <span> * </span></Form.Label>\r\n                                                            {/* <CreatableSelect\r\n                                                                isMulti\r\n                                                                onChange={props.simpleProductImageLinkHandler}\r\n                                                                value={props.imageLink}\r\n                                                                placeholder=\"Select/Enter Size\"\r\n                                                            /> */}\r\n                                                            <CreatableSelect\r\n                                                                components={coomponents}\r\n                                                                inputValue={props.inputValue}\r\n                                                                isClearable\r\n                                                                isMulti\r\n                                                                menuIsOpen={false}\r\n                                                                onChange={props.simpleProductImageLinkHandler}\r\n                                                                onInputChange={props.simpleProductImageLinkInputChangeHandler}\r\n                                                                onKeyDown={props.simpleProductImageLinkhandleKeyDownHandler}\r\n                                                                placeholder=\"Type something and press enter...\"\r\n                                                                value={props.imageLink}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    {/*<Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Color</Form.Label>\r\n                                                    <CreatableSelect\r\n                                                        onChange={props.productColorChangeHandler}\r\n                                                        options={product_color_options}\r\n                                                        value={props.color}\r\n                                                        placeholder=\"Select/Enter Color\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Form.Row> */}\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Warranty (months) </Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Product Warranty\"\r\n                                                                    name=\"product_warranty\"\r\n                                                                    value={props.product_warranty_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_warranty_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_warranty_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}> Warranty Type </Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        name=\"warranty_type\"\r\n                                                                        size=\"sm\"\r\n                                                                        value={props.warranty_type_values}\r\n                                                                        onChange={props.onChange}\r\n                                                                        isInvalid={props.warranty_type_errors}\r\n                                                                    >\r\n                                                                        <option>Waranty Type</option>\r\n                                                                        <option> No Warranty </option>\r\n                                                                        <option> Brand Warranty </option>\r\n                                                                        <option> Local Warranty </option>\r\n                                                                        <option> Local Seller Warranty </option>\r\n                                                                        <option> Non-Local Warranty </option>\r\n                                                                        <option> Internationsl Warranty </option>\r\n                                                                        <option> Internationsl Seller Warranty </option>\r\n                                                                        <option> International Manufacturer Warranty </option>\r\n\r\n                                                                    </Form.Control>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_warranty_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Discount</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Discount on on Product(%)\"\r\n                                                                    name=\"product_discount\"\r\n                                                                    value={props.product_discount_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_discount_errors}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' size=\"sm\">%</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_discount_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                </>\r\n                                            }\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Inventory\">\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product SKU</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter SKU (Stock Keeping Unit)\"\r\n                                                            name=\"sku\"\r\n                                                            value={props.sku_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.sku_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.sku_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n\r\n\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Shipping\">\r\n                                            <Form.Group as={Row} noGutters>\r\n                                                <Form.Label style={styles.label}>Weight (kg)</Form.Label>\r\n                                                <Form.Control type=\"number\"\r\n                                                    name=\"product_weight\"\r\n                                                    size=\"sm\"\r\n                                                    value={props.product_weight_values}\r\n                                                    onChange={props.onChange}\r\n                                                    isInvalid={props.product_weight_errors}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {props.product_weight_errors}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row} noGutters>\r\n                                                <Form.Label style={styles.label}>Dimensions (cm)</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            name=\"dimension_length\"\r\n                                                            size=\"sm\"\r\n                                                            value={props.dimension_length_values}\r\n                                                            onChange={props.onChange}\r\n                                                            placeholder=\"Length\"\r\n                                                            isInvalid={props.dimension_length_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_length_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control\r\n                                                        type=\"number\"\r\n                                                        name=\"dimension_width\"\r\n                                                        size=\"sm\"\r\n                                                        value={props.dimension_width_values}\r\n                                                        placeholder=\"Width\"\r\n                                                        onChange={props.onChange}\r\n                                                        isInvalid={props.dimension_width_errors}\r\n                                                    />\r\n                                                    <InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_width_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            name=\"dimension_height\"\r\n                                                            size=\"sm\"\r\n                                                            value={props.dimension_height_values}\r\n                                                            placeholder=\"Height\"\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.dimension_height_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_height_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup.Prepend>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Shipping Charges</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter Product Shipping Charges\"\r\n                                                            name=\"shipping_charges\"\r\n                                                            value={props.shipping_charges_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.shipping_charges_errors}\r\n                                                        />\r\n                                                        <InputGroup.Prepend>\r\n                                                            <Button variant='primary' size=\"sm\">Riyal</Button>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.shipping_charges_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Handling Fee</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter Product Handling Fee\"\r\n                                                            name=\"handling_fee\"\r\n                                                            value={props.handling_fee_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.handling_fee_errors}\r\n                                                        />\r\n                                                        <InputGroup.Prepend>\r\n                                                            <Button variant='primary' size=\"sm\">Riyal</Button>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.handling_fee_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n\r\n\r\n\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Attributes\">\r\n                                            <Form.Row >\r\n                                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                                    <Select\r\n                                                        options={groupedOptions}\r\n                                                        components={{ Group }}\r\n                                                        value={props.productAttributeNameSelected}\r\n                                                        onChange={props.attributeNameHandler}\r\n                                                    />\r\n                                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                                        Add New\r\n                                                    </Nav.Link>\r\n                                                    <AddNewFieldNameModal\r\n                                                        show={modalShow}\r\n                                                        onHide={() => setModalShow(false)}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Enter Value\"\r\n                                                            name=\"sku\"\r\n                                                            value={props.value}\r\n                                                            onChange={props.attributeValueHandler}\r\n                                                        />\r\n                                                        <Button variant=\"outline-primary\" style={{ marginLeft: '1%' }}\r\n                                                            onClick={props.addAttributeHandler}>Add</Button>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                                <Form.Label style={styles.label}>\r\n                                                    <span style={{ color: 'red' }}>{props.error}</span>\r\n                                                </Form.Label>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Form.Label style={styles.label} className=\"mr-auto\">For Multiple Values add | between values</Form.Label>\r\n                                                <Button variant=\"outline-primary\" size=\"sm\"\r\n                                                    onClick={props.createVariationsHandler}>Create Variations</Button>\r\n                                            </Form.Row>\r\n                                            <hr />\r\n                                            {/* <Card style={{ background: 'lightGray', margin: '0.5% 1%' }}> */}\r\n\r\n                                            {props.attributesArray && props.attributesArray.map((data, index) =>\r\n                                                <Form.Row style={{ padding: '0%' }} key={index}>\r\n                                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            size=\"sm\"\r\n                                                            value={data.productAttributeName}\r\n                                                            onChange={() => data.productAttributeName}\r\n                                                        >\r\n                                                            <option>{data.productAttributeName}</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                placeholder=\"Enter Value\"\r\n                                                                name=\"sku\"\r\n                                                                value={data.productAttributeValue}\r\n                                                                onChange={() => data.productAttributeValue}\r\n                                                            />\r\n                                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                onClick={() => props.deleteAttributeHandler(index)}> delete</Button>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    {/* <Button variant=\"outline-primary\" size=\"sm\" block style={{ width: '100px' }}\r\n                                                    onClick={() => props.update(index, data.fieldName, data.fieldValue)}> update</Button> */}\r\n\r\n\r\n                                                </Form.Row>\r\n                                            )}\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Variations\">\r\n                                            {variations ?\r\n                                                <>\r\n                                                    <Form.Row>\r\n                                                        {/* Same Price */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Price</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Price\"\r\n                                                                    name=\"samePrice\"\r\n                                                                    value={props.samePriceInput}\r\n                                                                    onChange={props.variationsSamePriceChanged}\r\n                                                                    isInvalid={props.samePriceError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSamePriceHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.samePriceError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        {/* Same Stock */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Stock</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Stock\"\r\n                                                                    name=\"sameStock\"\r\n                                                                    value={props.sameStockInput}\r\n                                                                    onChange={props.variationsSameStockChanged}\r\n                                                                    isInvalid={props.sameStockError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSameStockHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.sameStockError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        {/* Same Image Link */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Image</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Image Link\"\r\n                                                                    name=\"sameImgLinkInput\"\r\n                                                                    value={props.sameImgLinkInput}\r\n                                                                    onChange={props.variationsSameImgLinkChanged}\r\n                                                                    isInvalid={props.sameImgLinkError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSameImgLinkHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.sameImgLinkError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    <hr />\r\n                                                    {props.variationsArray && props.variationsArray.map((data, index) =>\r\n                                                        <div key={index} >\r\n                                                            <Accordion>\r\n                                                                <Row noGutters style={{ border: props.variationsErrorHandler(data) }}>\r\n                                                                    {data.items && data.items.map((d, i) =>\r\n                                                                        <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n                                                                            <Form.Control\r\n                                                                                type=\"text\"\r\n                                                                                size=\"sm\"\r\n                                                                                placeholder=\"Enter Value\"\r\n                                                                                name=\"sku\"\r\n                                                                                value={d.value}\r\n                                                                                onChange={() => data.productAttributeValue}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                    )}\r\n\r\n                                                                    <div className=\"mr-auto\"></div>\r\n                                                                    <Accordion.Toggle as={Form.Group} eventKey=\"0\">\r\n                                                                        <Button variant=\"outline-primary\" size=\"sm\" style={{ marginRight: '10px' }}>\r\n                                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                                        </Button>\r\n                                                                    </Accordion.Toggle>\r\n                                                                    <Form.Group style={{ float: 'right' }}>\r\n                                                                        <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                            onClick={() => props.deleteVariationHandler(index)}> delete</Button>\r\n                                                                    </Form.Group>\r\n                                                                </Row>\r\n\r\n                                                                <Accordion.Collapse eventKey=\"0\">\r\n                                                                    <div>\r\n                                                                        <Form.Row>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n                                                                                <Form.Label style={styles.label}>Product Price<span>*</span></Form.Label>\r\n                                                                                <InputGroup>\r\n                                                                                    <Form.Control\r\n                                                                                        type=\"number\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        placeholder=\"Enter Product Price\"\r\n                                                                                        name=\"product_price\"\r\n                                                                                        value={data.price}\r\n                                                                                        onChange={(e) => props.variationPriceHandler(e, index)}\r\n                                                                                        isInvalid={data.price_error}\r\n                                                                                    />\r\n                                                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                                                        {data.price_error}\r\n                                                                                    </Form.Control.Feedback>\r\n                                                                                </InputGroup>\r\n                                                                            </Form.Group>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n                                                                                <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n                                                                                <Form.Control type=\"number\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    name=\"product_in_stock\"\r\n                                                                                    placeholder=\"Enter Product In Stock\"\r\n                                                                                    value={data.stock}\r\n                                                                                    onChange={(e) => props.variationStockHandler(e, index)}\r\n                                                                                />\r\n                                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                                </Form.Control.Feedback>\r\n                                                                            </Form.Group>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                                                <Form.Label style={styles.label}>Image Link</Form.Label>\r\n                                                                                <Form.Control type=\"text\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    name=\"image_link\"\r\n                                                                                    placeholder=\"Enter Image Link\"\r\n                                                                                    value={data.image_link}\r\n                                                                                    onChange={(e) => props.variationImageLinkHandler(e, index)}\r\n                                                                                    isInvalid={data.image_link_error}\r\n                                                                                />\r\n                                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                                    {data.image_link_error}\r\n                                                                                </Form.Control.Feedback>\r\n                                                                            </Form.Group>\r\n                                                                        </Form.Row>\r\n                                                                        <Form.Row>\r\n                                                                            {data.customField && data.customField.map((d, i) =>\r\n                                                                                <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n                                                                                    <Form.Label style={styles.label}>{d.name}</Form.Label>\r\n                                                                                    <InputGroup>\r\n                                                                                        <Form.Control\r\n                                                                                            type=\"text\"\r\n                                                                                            size=\"sm\"\r\n                                                                                            placeholder=\"Enter Value\"\r\n                                                                                            name=\"sku\"\r\n                                                                                            value={d.value}\r\n                                                                                            onChange={() => data.productAttributeValue}\r\n                                                                                        />\r\n                                                                                        <InputGroup.Prepend>\r\n                                                                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                                                onClick={() => props.deleteVariationCustomFieldHandler(index, i)}> delete</Button>\r\n                                                                                        </InputGroup.Prepend>\r\n                                                                                    </InputGroup>\r\n                                                                                </Form.Group>\r\n                                                                            )}\r\n                                                                        </Form.Row>\r\n                                                                    </div>\r\n                                                                </Accordion.Collapse>\r\n                                                            </Accordion>\r\n                                                            <hr />\r\n                                                        </div>\r\n                                                    )}\r\n                                                    <Button variant=\"outline-primary\" size=\"sm\" block onClick={props.saveVariationsHandler}> Save Variations</Button>\r\n                                                </>\r\n                                                :\r\n                                                <div style={{ width: '100%', textAlign: 'center', marginTop: '10%' }}>\r\n                                                    <Form.Label>Please First add Attributes from Attributes Tab</Form.Label>\r\n                                                </div>\r\n                                            }\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Advanced\">\r\n                                            <Form.Row >\r\n                                                <Form.Label style={styles.label}>Purchase Note</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Purchase Notes\"\r\n                                                        name=\"purchase_note\"\r\n                                                        value={props.purchase_note_values}\r\n                                                        onChange={props.onChange}\r\n                                                        isInvalid={props.purchase_note_errors}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {props.purchase_note_errors}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n                                        {/* <Tab.Pane eventKey=\"Commission\">\r\n                                    Commission\r\n                                    </Tab.Pane> */}\r\n                                    </Tab.Content>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab.Container>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <style jsx>\r\n                {`\r\n                    span {\r\n                        color: red\r\n                    }\r\n                    @media (max-width: 991px) {\r\n                        .linkName {\r\n                            display: none\r\n                        }\r\n                    }\r\n                    \r\n                `}\r\n            </style>\r\n        </Accordion >\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '12px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n    },\r\n\r\n\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    submit_btn: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        marginTop: '3%',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    product_fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\n\r\nexport default ProductData;","\r\nimport React, { Component } from 'react';\r\nimport { Accordion, Form, Col, Row, Card, InputGroup, Button, Toast, Alert, Nav, Tabs, Spinner } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faExclamationTriangle, faListAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\n\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nimport GlobalStyleSheet from '../../../../../../styleSheet';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\r\nimport CustomFields from './add-new-contents/custom-fields';\r\nimport ProductData from './add-new-contents/product-data';\r\nimport product_size_options from '../../../../../../sdk/consts/product-size-options'\r\nimport product_color_options from '../../../../../../sdk/consts/product-color-options'\r\n\r\n// Option List for select Product Category (when offline)\r\nlet product_categories_options = [\r\n    { value: 'Shoe', label: 'Shoe' },\r\n    { value: 'Cloth', label: 'Cloth' },\r\n    { value: 'Shirt', label: 'Shirt' },\r\n    { value: 'Pant', label: 'Pant' }\r\n]\r\nconst product_sub_categories_options = [\r\n    { value: 'Sub Shoe', label: 'Sub Shoe' },\r\n    { value: 'Sub Cloth', label: 'Sub Cloth' },\r\n    { value: 'Sub Shirt', label: 'Sub Shirt' },\r\n]\r\nconst product_sub_sub_categories_options = [\r\n    { value: 'Foo', label: 'Foo' },\r\n    { value: 'Loo', label: 'Loo' },\r\n    { value: 'Khoo', label: 'Khoo' },\r\n]\r\n\r\n// For React-Select\r\nconst components = {\r\n    DropdownIndicator: null,\r\n};\r\n// Model For React-Select\r\nconst createOption = (label) => ({\r\n    value: label,\r\n    label,\r\n});\r\n\r\nconst react_select_styles = {\r\n    control: (base) => ({\r\n        ...base,\r\n        fontSize: '13px',\r\n    }),\r\n    dropdownIndicator: (base) => ({\r\n        ...base,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        fontSize: '13px',\r\n    }),\r\n    clearIndicator: (base) => ({\r\n        ...base,\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n        fontSize: '13px',\r\n    }),\r\n    option: provided => ({\r\n        ...provided,\r\n        fontSize: '13px',\r\n    }),\r\n};\r\n\r\n// Yup Schema for validation fields\r\nconst schema = yup.object({\r\n    product_name: yup.string().required(\"Enter Product Name\")\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n\r\n    product_description: yup.string().required(\"Enter Product Name\")\r\n        .min(5, \"Must have at least 5 characters\")\r\n        .max(200, \"Can't be longer than 200 characters\"),\r\n    // Product Data\r\n    product_type: yup.string(),\r\n    // => Inventory\r\n    sku: yup.string()\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => General(Simple-Product)\r\n    product_price: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 1-1000000')\r\n        .max(1000000, 'Enter Between 1-1000000'),\r\n    product_in_stock: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(1, \"Must grater than 1 digit\")\r\n        .max(1000000, \"Can't be longer than 1000000\"),\r\n    product_brand_name: yup.string()\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n    product_image_link: yup.string(),\r\n    product_warranty: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-200')\r\n        .max(200, 'Enter Between 0-200'),\r\n    warranty_type: yup.string(),\r\n    product_discount: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => Attributes (Variable Product)\r\n    purchase_note: yup.string(),\r\n    // => Variations (Variable Product)\r\n    product_variations: yup.string(),\r\n    // => Shipping\r\n    product_weight: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_length: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_width: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_height: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    shipping_charges: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    handling_fee: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    // => Advanve\r\n    purchase_note: yup.string(),\r\n    // Custom Fields\r\n    custom_fields: yup.string(),\r\n\r\n    product_category: yup.string(),\r\n    product_sub_category: yup.string(),\r\n    product_sub_sub_category: yup.string(),\r\n\r\n    dangerous_goods: yup.string(),\r\n    product_tags: yup.string(),\r\n});\r\n\r\n\r\nclass AddNew extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            showVariationsErrorAlert: false,\r\n            showSimpleProductPriceImgLinkErrorrAlert: false,\r\n            isVariableProduct: false,\r\n\r\n            productCategories: '',\r\n            productSubCategories: '',\r\n            productSubSubCategories: '',\r\n\r\n            subCategoryDisabled: true,\r\n            subSubCategoryDisabled: true,\r\n\r\n            subCategoryError: 'no_error',\r\n            subSubCategoryError: 'no_error',\r\n\r\n            categoryErrorDiv: 'BorderDiv',\r\n            subCategoryErrorDiv: 'BorderDiv',\r\n            subSubategoryErrorDiv: 'BorderDiv',\r\n\r\n\r\n            productTags: [],\r\n\r\n            warrantyType: 'Year',\r\n            inputValue: '',\r\n            simple_product_image_link: [],\r\n            simple_product_image_link: [],\r\n\r\n\r\n            image_linkError: 'no_error',\r\n            image_linkErrorDiv: 'BorderDiv',\r\n\r\n            // Product Attributes\r\n            productAttributesArray: [],\r\n            productAttributeName: '',\r\n            productAttributeValue: '',\r\n            productAttributeError: '',\r\n            productAttributeNameSelected: '',\r\n\r\n            variationsArray: [],\r\n            isVariationsSaved: false,\r\n            samePriceInput: '',\r\n            samePriceError: '',\r\n            sameStockInput: '',\r\n            sameStockError: '',\r\n            sameImgLinkInput: '',\r\n            sameImgLinkError: '',\r\n\r\n            // Custom Fields\r\n            customFieldsArray: [],\r\n            customFieldName: '',\r\n            customFieldValue: '',\r\n            customFieldError: '',\r\n            customFieldNameSelected: '',\r\n\r\n            // Dangerous Goods\r\n            dangerousGoodsArray: [],\r\n        };\r\n        this.handleProductTypeChange = this.handleProductTypeChange.bind(this);\r\n        this.handleAddCustomFieldBtnClick = this.handleAddCustomFieldBtnClick.bind(this);\r\n        // this.uploadProduct = this.uploadProduct.bind(this);\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            product_categories_options = response.data.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //  Submit data to api\r\n    async uploadProduct(data, currentComponent) {\r\n        console.log('data: ', data)\r\n        const url = MuhalikConfig.PATH + '/api/products/add';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false });\r\n            currentComponent.setState({ showToast: true });\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleProductTypeChange(e) {\r\n        if (e.target.value == 'variable-prouct') {\r\n            this.setState({ isVariableProduct: true });\r\n        }\r\n        else {\r\n            this.setState({ isVariableProduct: false });\r\n        }\r\n    }\r\n\r\n    // Product Data\r\n    // => Simple Product Image Link\r\n    handleSimpleProductImageLinkChange = (arr, actionMeta) => {\r\n        this.setState({ simple_product_image_link: arr, image_linkError: 'no_error', image_linkErrorDiv: 'BorderDiv' });\r\n    };\r\n    handleSimpleProductImageLinkInputChange = (arr) => {\r\n        this.setState({ inputValue: arr });\r\n    };\r\n    handleSimpleProductImage_linkKeyDown = (event) => {\r\n        const inputValue = this.state.inputValue;\r\n        const simple_product_image_link = this.state.simple_product_image_link;\r\n        if (!inputValue) return;\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case 'Tab':\r\n                this.setState({\r\n                    inputValue: '',\r\n                    simple_product_image_link: [...simple_product_image_link, createOption(inputValue)],\r\n                });\r\n                event.preventDefault();\r\n        }\r\n    };\r\n    // => End Of Simple Product Image Link\r\n\r\n    // => Product Attributes (Variable Product)\r\n    handleProductAttributeNameChange(e) {\r\n        this.setState({ productAttributeName: e.value })\r\n        this.setState({ productAttributeNameSelected: e })\r\n    }\r\n    handleProductAttributeValueChange = (e) => {\r\n        this.setState({ productAttributeValue: e.target.value })\r\n    }\r\n    handleAddProductAttributeClick = () => {\r\n        if (this.state.productAttributeName != '' && this.state.productAttributeValue != '') {\r\n            this.setState({ productAttributeError: '' })\r\n            const copyArray = Object.assign([], this.state.productAttributesArray);\r\n            copyArray.push({\r\n                productAttributeName: this.state.productAttributeName,\r\n                productAttributeValue: this.state.productAttributeValue,\r\n            })\r\n            this.setState({ productAttributeName: '' })\r\n            this.setState({ productAttributeValue: '' })\r\n            this.setState({ productAttributeNameSelected: '' })\r\n            this.setState({ productAttributesArray: copyArray })\r\n        } else {\r\n            this.setState({ productAttributeError: 'Enter Field Name and Value' });\r\n        }\r\n    }\r\n    handleCreateVariationsClick = () => {\r\n        var allArrays = [];\r\n        this.state.productAttributesArray.forEach(element => {\r\n            var trim = element.productAttributeValue.split(' ').join('');\r\n            var splitArray = trim.split('|');\r\n            allArrays.push(splitArray)\r\n        });\r\n\r\n        const array = this.allPossibleCases(allArrays)\r\n        var data = [];\r\n        array.forEach(element => {\r\n            const split = element.split('-');\r\n            let item = [];\r\n\r\n            split.forEach((e, i) => {\r\n                item.push({ name: this.state.productAttributesArray[i].productAttributeName, value: e })\r\n            });\r\n            data.push({ items: item, price: '', stock: '1', image_link: '', price_error: '', image_link_error: '', customField: [] })\r\n        });\r\n        // console.log(\"split Array: \", data)\r\n        this.setState({ variationsArray: data })\r\n    }\r\n    allPossibleCases(arr) {\r\n        if (arr.length == 1) {\r\n            return arr[0];\r\n        } else {\r\n            var result = [];\r\n            var allCasesOfRest = this.allPossibleCases(arr.slice(1));  // recur with the rest of array\r\n            for (var i = 0; i < allCasesOfRest.length; i++) {\r\n                for (var j = 0; j < arr[0].length; j++) {\r\n                    result.push(arr[0][j] + \"-\" + allCasesOfRest[i]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    handleUpdateProductAttributeClick = (index, name, value) => {\r\n        const copyArray = Object.assign([], this.state.productAttributesArray);\r\n        copyArray[index] = { productAttributeName: name, productAttributeValue: value };\r\n        this.setState({ productAttributesArray: copyArray });\r\n    }\r\n    handleDeleteProductAttributeClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.productAttributesArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ productAttributesArray: copyArray });\r\n    }\r\n    // => End Of Product Attributes\r\n\r\n    // => Product Variations (Variable Product)\r\n    //  // =>Same Price For All Variations\r\n    handleVariationsSamePriceChanged = (e) => {\r\n        if (e.target.value >= 0) {\r\n            this.setState({ samePriceInput: e.target.value })\r\n        }\r\n    }\r\n    handleVariationsSamePriceClick = (e) => {\r\n        if (this.state.samePriceInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.price = this.state.samePriceInput;\r\n\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ samePriceError: 'Enter Value' })\r\n        }\r\n    }\r\n    // // => Same Stock For All Variations\r\n    handleVariationsSameStockChanged = (e) => {\r\n        if (e.target.value >= 0) {\r\n            this.setState({ sameStockInput: e.target.value })\r\n        }\r\n    }\r\n    handleVariationsSameStockClick = () => {\r\n        if (this.state.sameStockInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.stock = this.state.sameStockInput;\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ sameStockError: 'Enter Value' })\r\n        }\r\n    }\r\n    // // => Same Image link For All Variations\r\n    handleVariationsSameImgLinkChanged = (e) => {\r\n        this.setState({ sameImgLinkInput: e.target.value })\r\n    }\r\n    handleVariationsSameImgLinkClick = () => {\r\n        if (this.state.sameImgLinkInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.image_link = this.state.sameImgLinkInput;\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ sameImgLinkError: 'Enter Value' })\r\n        }\r\n    }\r\n\r\n    handleVariationPriceChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        if (e.target.value >= 0) {\r\n            object.price = e.target.value;\r\n            copyArray[index] = object;\r\n            this.setState({ variationsArray: copyArray });\r\n        }\r\n    }\r\n    handleVariationProductInStockChang = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        if (e.target.value >= 0) {\r\n            object.stock = e.target.value;\r\n            copyArray[index] = object;\r\n            this.setState({ variationsArray: copyArray });\r\n        }\r\n    }\r\n    handleVariationImageLinkChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        object.image_link = e.target.value;\r\n        copyArray[index] = object;\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleDeleteProductVariationClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleDeleteVariationCustomFieldClick = (index, i) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        copyArray[index].customField.splice(i, 1);\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleSaveVariationsClick = () => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let flag = true;\r\n        copyArray.forEach(element => {\r\n            if (element.price == '' || element.image_link == '') {\r\n                flag = false;\r\n                if (element.price == '') {\r\n                    element.price_error = 'Enter price'\r\n                }\r\n                if (element.image_link == '') {\r\n                    element.image_link_error = 'Enter Image Link'\r\n                }\r\n            } else {\r\n                element.price_error = ''\r\n                element.image_link_error = ''\r\n            }\r\n        });\r\n        if (flag == true) {\r\n            this.setState({ isVariationsSaved: true })\r\n        }\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleVariationsErrorCheck = (data) => {\r\n        if (data.price_error != '' || data.image_link_error != '') {\r\n            return '1px solid red'\r\n        }\r\n        else {\r\n            return 'none'\r\n        }\r\n    }\r\n    // => End Of Product Variations\r\n    // End of Product Data\r\n\r\n\r\n\r\n    // Custom Fields\r\n    handleCustomFieldNameChange(e) {\r\n        this.setState({ customFieldName: e.value })\r\n        this.setState({ customFieldNameSelected: e })\r\n    }\r\n    handleCustomFieldValueChange = (e) => {\r\n        this.setState({ customFieldValue: e.target.value })\r\n    }\r\n    handleAddCustomFieldBtnClick = () => {\r\n        if (this.state.customFieldName != '' && this.state.customFieldValue != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n\r\n            if (this.state.isVariableProduct == true) {\r\n                copyArray.forEach(element => {\r\n                    element.customField.push({\r\n                        name: this.state.customFieldName,\r\n                        value: this.state.customFieldValue\r\n                    });\r\n                    console.log(\"element.customField: \", element.customField);\r\n                });\r\n                this.setState({ variationsArray: copyArray })\r\n            } else {\r\n                this.state.customFieldsArray.push({\r\n                    name: this.state.customFieldName,\r\n                    value: this.state.customFieldValue,\r\n                })\r\n            }\r\n\r\n            this.setState({ customFieldError: '' })\r\n            this.setState({ customFieldName: '' })\r\n            this.setState({ customFieldValue: '' })\r\n            this.setState({ customFieldNameSelected: '' })\r\n        } else {\r\n            this.setState({ customFieldError: 'Enter Field Name and Value' });\r\n        }\r\n    }\r\n    updateCustomFieldsClick = (index, name, value) => {\r\n        const copyArray = Object.assign([], this.state.customFieldsArray);\r\n        copyArray[index] = { customFieldName: name, customFieldValue: value };\r\n        this.setState({ customFieldsArray: copyArray });\r\n    }\r\n    deleteCustomFieldsClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.customFieldsArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ customFieldsArray: copyArray });\r\n    }\r\n\r\n\r\n\r\n\r\n    // Product Category\r\n    handleProductCategoryChange = (value) => {\r\n        this.setState({ productCategories: value, subCategoryDisabled: false, categoryErrorDiv: 'BorderDiv' });\r\n    }\r\n    handleProductSubCategoryChange = (value) => {\r\n\r\n        this.setState({\r\n            productSubCategories: value, subSubCategoryDisabled: false,\r\n            subCategoryError: 'no_error', subCategoryErrorDiv: 'BorderDiv'\r\n        });\r\n    }\r\n    handleProductSubSubCategoryChange = (value) => {\r\n        this.setState({ productSubSubCategories: value, subSubCategoryError: 'no_error', subSubCategoryErrorDiv: 'BorderDiv' });\r\n    }\r\n\r\n    // Dangerous Goods\r\n    handleDangerousGoodsChange = (e, name) => {\r\n        const copyArray = Object.assign([], this.state.dangerousGoodsArray);\r\n        if (e.target.checked) {\r\n            copyArray.push({ value: name });\r\n        } else {\r\n            copyArray.forEach((element, index) => {\r\n                if (element.value == name) {\r\n                    copyArray.splice(index, 1)\r\n                }\r\n            });\r\n        }\r\n        this.setState({ dangerousGoodsArray: copyArray });\r\n    }\r\n\r\n    // Product Tags\r\n    handleProductTagChange = (arr) => {\r\n        this.setState({ productTags: arr });\r\n    };\r\n\r\n    render() {\r\n        var showCustomFields = false;\r\n        if (this.state.variationsArray.length == 0 && this.state.isVariableProduct == true) {\r\n            showCustomFields = true;\r\n        }\r\n        else {\r\n            showCustomFields = false;\r\n        }\r\n\r\n        return (\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={{\r\n                    product_type: 'simple-product',\r\n                }}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    if (this.state.productCategories == '' || this.state.productSubCategories == '' || this.state.productSubSubCategories == '' ||\r\n                        (this.state.simple_product_image_link == '' && values.product_type == 'simple-product')) {\r\n\r\n                        if (this.state.productCategories == '') {\r\n                            this.setState({ categoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        if (this.state.productSubCategories == '') {\r\n                            this.setState({ subCategoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        if (this.state.productSubSubCategories == '') {\r\n                            this.setState({ subSubCategoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        if (this.state.simple_product_image_link == '' && values.product_type == 'simple-product') {\r\n                            this.setState({ showSimpleProductPriceImgLinkErrorrAlert: true, image_linkError: \"error\", image_linkErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        setSubmitting(false);\r\n                    } else if (this.state.isVariationsSaved == false && values.product_type == 'variable-prouct') {\r\n                        this.setState({ showVariationsErrorAlert: true });\r\n                    } else {\r\n                        resetForm();\r\n                        setSubmitting(true);\r\n                        this.setState({ isLoading: true });\r\n                        setTimeout(() => {\r\n                            let array = [];\r\n                            // this.state.productCategories.forEach(element => {\r\n                            //     array.push(element.value)\r\n                            // })\r\n                            values.product_category = this.state.productCategories;\r\n                            values.product_sub_category = this.state.productSubCategories;\r\n                            values.product_sub_sub_category = this.state.productSubSubCategories;\r\n                            // array = [];\r\n                            // this.state.productTags.forEach(element => {\r\n                            //     array.push(element.value)\r\n                            // })\r\n                            values.product_tags = this.state.productTags;\r\n\r\n                            values.dangerous_goods = this.state.dangerousGoodsArray;\r\n\r\n                            if (values.product_type == 'simple-product') {\r\n                                // array = [];\r\n                                // this.state.simple_product_image_link.forEach(element => {\r\n                                //     array.push(element.value)\r\n                                // })\r\n                                values.product_image_link = this.state.simple_product_image_link;\r\n                                if (this.state.customFieldsArray != []) {\r\n                                    // array = []\r\n                                    // this.state.customFieldsArray.forEach(custom => {\r\n                                    //     var obj = {};\r\n                                    //     obj[custom.customFieldName] = custom.customFieldValue;\r\n                                    //     array.push(obj)\r\n                                    // });\r\n                                    values.custom_fields = this.state.customFieldsArray;\r\n                                }\r\n                            } else {\r\n                                array = [];\r\n                                this.state.variationsArray.forEach((element, index) => {\r\n                                    let item = []\r\n                                    element.items.forEach(e => {\r\n                                        item.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    element.customField.forEach(e => {\r\n                                        item.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    item.push({ name: 'price', value: element.price })\r\n                                    item.push({ name: 'stock', value: element.stock })\r\n                                    item.push({ name: 'image_link', value: element.image_link })\r\n                                    array.push({ item: item })\r\n                                })\r\n                                values.product_variations = array;\r\n                            }\r\n                            resetForm();\r\n                            if (this.uploadProduct(values, this)) {\r\n                                this.setState({\r\n                                    showSimpleProductPriceImgLinkErrorrAlert: false, isVariableProduct: false,\r\n                                    productCategories: '', productSubCategories: '', productSubSubCategories: '',\r\n                                    subCategoryDisabled: true, subSubCategoryDisabled: true,\r\n                                    categoryErrorDiv: 'BorderDiv', subCategoryErrorDiv: 'BorderDiv', subSubategoryErrorDiv: 'BorderDiv',\r\n                                    productTags: [],\r\n                                    warrantyType: 'Year', inputValue: '', simple_product_image_link: [], simple_product_image_link: [],\r\n                                    image_linkError: 'no_error', image_linkErrorDiv: 'BorderDiv',\r\n                                    // Product Attributes\r\n                                    productAttributesArray: [], productAttributeName: '', productAttributeValue: '', productAttributeError: '', productAttributeNameSelected: '',\r\n                                    variationsArray: [], isVariationsSaved: false, samePriceInput: '', samePriceError: '', sameStockInput: '', sameStockError: '', sameImgLinkInput: '', sameImgLinkError: '',\r\n                                    // Custom Fields\r\n                                    customFieldsArray: [], customFieldName: '', customFieldValue: '', customFieldError: '', customFieldNameSelected: '',\r\n                                    // Dangerous Goods\r\n                                    dangerousGoodsArray: [],\r\n                                });\r\n\r\n                            }\r\n                            setSubmitting(false);\r\n                        }, 500);\r\n                    }\r\n                }}>\r\n                {({\r\n                    handleSubmit, handleChange, values, touched, isValid, errors, handleBlur, isSubmitting\r\n                }) => (\r\n                        <div>\r\n                            <Row style={styles.title_row} noGutters>\r\n                                <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                                <div className=\"mr-auto\" style={styles.title}> Add New Product</div>\r\n                            </Row>\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n\r\n                                {/* {this.state.showToast ? */}\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showToast: false })}\r\n                                    show={this.state.showToast}\r\n                                    header={'Success'}\r\n                                    message={'Product Uploaded Successfully'}\r\n                                    iconName={faThumbsUp}\r\n                                    color={\"#00b300\"}\r\n                                />\r\n                                {/* : null */}\r\n                                {/* } */}\r\n                                {/* {this.state.showVariationsErrorAlert ? */}\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showVariationsErrorAlert: false })}\r\n                                    show={this.state.showVariationsErrorAlert}\r\n                                    header={'Error'}\r\n                                    message={'Please Add/Save Variations First'}\r\n                                    iconName={faExclamationTriangle}\r\n                                    color={\"#ff3333\"}\r\n                                />\r\n                                {/* : null */}\r\n                                {/* } */}\r\n                                {/* {this.state.showSimpleProductPriceImgLinkErrorrAlert ? */}\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showSimpleProductPriceImgLinkErrorrAlert: false })}\r\n                                    show={this.state.showSimpleProductPriceImgLinkErrorrAlert}\r\n                                    header={'Error'}\r\n                                    message={'Enter Price/Image Link in General Tab First'}\r\n                                    iconName={faExclamationTriangle}\r\n                                    color={\"#ff3333\"}\r\n                                />\r\n                                {/* : null */}\r\n                                {/* } */}\r\n\r\n\r\n                                <Row noGutters style={{ paddingTop: '2%' }}>\r\n                                    <Col lg={9} md={9} sm={12} xs={12}>\r\n                                        {/* Product Name */}\r\n                                        <Form.Group as={Row} style={styles.row}>\r\n                                            <Form.Label style={styles.label}>Product Name<span>*</span></Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Product Name\"\r\n                                                    name=\"product_name\"\r\n                                                    value={values.product_name || ''}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={errors.product_name}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.product_name}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        {/* End of Product Name */}\r\n\r\n                                        {/* Product Discription */}\r\n                                        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                            <Form.Group as={Row} style={styles.row}>\r\n                                                <Card style={styles.card}>\r\n                                                    <Card.Header style={styles.card_header}>\r\n                                                        <Form.Label >Product Discruption</Form.Label>\r\n                                                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                        </Accordion.Toggle>\r\n                                                    </Card.Header>\r\n                                                    <Accordion.Collapse eventKey=\"0\">\r\n                                                        <Card.Body>\r\n                                                            <Form.Group>\r\n                                                                <Form.Control\r\n                                                                    as=\"textarea\"\r\n                                                                    placeholder=\"Enter Product Description\"\r\n                                                                    name=\"product_description\"\r\n                                                                    value={values.product_description || ''}\r\n                                                                    rows=\"7\"\r\n                                                                    onChange={handleChange}\r\n                                                                    isInvalid={errors.product_description}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {errors.product_description}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </Form.Group>\r\n                                                        </Card.Body>\r\n                                                    </Accordion.Collapse>\r\n                                                </Card>\r\n                                            </Form.Group>\r\n                                        </Accordion>\r\n                                        {/* Product Data Row */}\r\n                                        <Row style={styles.row}>\r\n                                            <ProductData\r\n                                                productTypeHandler={this.handleProductTypeChange}\r\n                                                isVariableProduct={this.state.isVariableProduct}\r\n\r\n                                                product_type_values={values.product_type || ''}\r\n\r\n                                                product_price_values={values.product_price || ''}\r\n                                                // product_price_touched={touched.product_price}\r\n                                                product_price_errors={errors.product_price}\r\n\r\n                                                product_in_stock_values={values.product_in_stock || ''}\r\n                                                // product_in_stock_touched={touched.product_in_stock}\r\n                                                product_in_stock_errors={errors.product_in_stock}\r\n\r\n                                                product_brand_name_values={values.product_brand_name || ''}\r\n                                                // product_brand_name_touched={touched.product_brand_name}\r\n                                                product_brand_name_errors={errors.product_brand_name}\r\n\r\n                                                imageLink={this.state.simple_product_image_link}\r\n                                                simpleProductImageLinkHandler={this.handleSimpleProductImageLinkChange.bind(this)}\r\n                                                inputValue={this.state.inputValue}\r\n                                                simpleProductImageLinkInputChangeHandler={this.handleSimpleProductImageLinkInputChange.bind(this)}\r\n                                                simpleProductImageLinkhandleKeyDownHandler={this.handleSimpleProductImage_linkKeyDown.bind(this)}\r\n                                                simpleProductError={this.state.showSimpleProductPriceImgLinkErrorrAlert}\r\n\r\n                                                product_warranty_values={values.product_warranty || ''}\r\n                                                // product_warranty_touched={touched.product_warranty}\r\n                                                product_warranty_errors={errors.product_warranty}\r\n\r\n                                                warranty_type_values={values.warranty_type || ''}\r\n                                                // warranty_type_touched={touched.warranty_type}\r\n                                                warranty_type_errors={errors.warranty_type}\r\n\r\n                                                product_discount_values={values.product_discount || ''}\r\n                                                // product_discount_touched={touched.product_discount}\r\n                                                product_discount_errors={errors.product_discount}\r\n\r\n                                                sku_values={values.sku || ''}\r\n                                                // sku_touched={touched.sku}\r\n                                                sku_errors={errors.sku}\r\n\r\n                                                product_weight_values={values.product_weight || ''}\r\n                                                // product_weight_touched={touched.product_weight}\r\n                                                product_weight_errors={errors.product_weight}\r\n\r\n                                                dimension_length_values={values.dimension_length || ''}\r\n                                                // dimension_length_touched={touched.dimension_length}\r\n                                                dimension_length_errors={errors.dimension_length}\r\n\r\n                                                dimension_width_values={values.dimension_width || ''}\r\n                                                // dimension_width_touched={touched.dimension_width}\r\n                                                dimension_width_errors={errors.dimension_width}\r\n\r\n                                                dimension_height_values={values.dimension_height || ''}\r\n                                                // dimension_height_touched={touched.dimension_height}\r\n                                                dimension_height_errors={errors.dimension_height}\r\n\r\n                                                shipping_charges_values={values.shipping_charges || ''}\r\n                                                // shipping_charges_touched={touched.shipping_charges}\r\n                                                shipping_charges_errors={errors.shipping_charges}\r\n\r\n                                                handling_fee_values={values.handling_fee || ''}\r\n                                                // handling_fee_touched={touched.handling_fee}\r\n                                                handling_fee_errors={errors.handling_fee}\r\n\r\n                                                purchase_note_values={values.purchase_note || ''}\r\n                                                // purchase_note_touched={touched.purchase_note}\r\n                                                purchase_note_errors={errors.purchase_note}\r\n\r\n                                                onChange={handleChange}\r\n                                                // touched={touched}\r\n                                                errors={errors}\r\n\r\n                                                productColorChangeHandler={this.handleProductColorChange}\r\n                                                // size={this.state.size}\r\n                                                productSizeChangeHandler={this.handleProductSizeChange}\r\n\r\n                                                attributesArray={this.state.productAttributesArray}\r\n                                                name={this.state.productAttributeName}\r\n                                                value={this.state.productAttributeValue}\r\n                                                productAttributeNameSelected={this.state.productAttributeNameSelected}\r\n                                                attributeNameHandler={this.handleProductAttributeNameChange.bind(this)}\r\n                                                attributeValueHandler={this.handleProductAttributeValueChange.bind(this)}\r\n                                                addAttributeHandler={this.handleAddProductAttributeClick.bind(this)}\r\n                                                update={this.handleUpdateProductAttributeClick.bind(this)}\r\n                                                deleteAttributeHandler={this.handleDeleteProductAttributeClick.bind(this)}\r\n                                                deleteVariationHandler={this.handleDeleteProductVariationClick.bind(this)}\r\n                                                deleteVariationCustomFieldHandler={this.handleDeleteVariationCustomFieldClick.bind(this)}\r\n                                                saveVariationsHandler={this.handleSaveVariationsClick.bind(this)}\r\n                                                variationsErrorHandler={this.handleVariationsErrorCheck.bind(this)}\r\n                                                error={this.state.productAttributeError}\r\n\r\n                                                createVariationsHandler={this.handleCreateVariationsClick}\r\n                                                variationsArray={this.state.variationsArray}\r\n                                                variationPriceHandler={this.handleVariationPriceChange.bind(this)}\r\n                                                variationStockHandler={this.handleVariationProductInStockChang.bind(this)}\r\n                                                variationImageLinkHandler={this.handleVariationImageLinkChange.bind(this)}\r\n\r\n                                                samePriceInput={this.state.samePriceInput}\r\n                                                samePriceError={this.state.samePriceError}\r\n                                                variationsSamePriceChanged={this.handleVariationsSamePriceChanged.bind(this)}\r\n                                                variationsSamePriceHandler={this.handleVariationsSamePriceClick.bind(this)}\r\n\r\n\r\n\r\n                                                sameStockInput={this.state.sameStockInput}\r\n                                                sameStockError={this.state.sameStockError}\r\n                                                variationsSameStockChanged={this.handleVariationsSameStockChanged.bind(this)}\r\n                                                variationsSameStockHandler={this.handleVariationsSameStockClick.bind(this)}\r\n\r\n                                                sameImgLinkInput={this.state.sameImgLinkInput}\r\n                                                sameImgLinkError={this.state.sameImgLinkError}\r\n                                                variationsSameImgLinkChanged={this.handleVariationsSameImgLinkChanged.bind(this)}\r\n                                                variationsSameImgLinkHandler={this.handleVariationsSameImgLinkClick.bind(this)}\r\n                                            />\r\n                                        </Row>\r\n                                        {/* End of Product Data Row */}\r\n                                        {/* Custom Fields Row */}\r\n                                        <Form.Group as={Row} style={styles.row} >\r\n                                            <CustomFields\r\n                                                customFieldsArray={this.state.customFieldsArray}\r\n                                                isVariableProduct={this.state.isVariableProduct}\r\n                                                name={this.state.customFieldName}\r\n                                                value={this.state.customFieldValue}\r\n                                                customFieldNameSelected={this.state.customFieldNameSelected}\r\n                                                fieldNameHandler={this.handleCustomFieldNameChange.bind(this)}\r\n                                                fieldValueHandler={this.handleCustomFieldValueChange.bind(this)}\r\n                                                addFieldHandler={this.handleAddCustomFieldBtnClick.bind(this)}\r\n                                                update={this.updateCustomFieldsClick.bind(this)}\r\n                                                delete={this.deleteCustomFieldsClick.bind(this)}\r\n                                                error={this.state.customFieldError}\r\n                                                showCustomFields={showCustomFields}\r\n                                            />\r\n                                        </Form.Group>\r\n                                        {/* End of Custom Fields Row */}\r\n                                    </Col>\r\n\r\n                                    <Col lg={3} md={3} sm={12} xs={12}>\r\n                                        {/* Product Category */}\r\n                                        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                            <Form.Group as={Row} style={styles.row}>\r\n                                                <Card style={styles.card}>\r\n                                                    <Card.Header style={styles.card_header}>\r\n                                                        <Form.Label >Product Categories</Form.Label>\r\n                                                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                        </Accordion.Toggle>\r\n                                                    </Card.Header>\r\n                                                    <Accordion.Collapse eventKey=\"0\">\r\n                                                        <Card.Body >\r\n                                                            <Form.Group>\r\n                                                                <Form.Label style={styles.label}>Category</Form.Label>\r\n                                                                <div className={this.state.categoryErrorDiv}>\r\n                                                                    <Select\r\n                                                                        styles={react_select_styles}\r\n                                                                        onChange={this.handleProductCategoryChange}\r\n                                                                        options={product_categories_options}\r\n                                                                        value={this.state.productCategories}\r\n                                                                        isSearchable={true}\r\n                                                                        isClearable={true}\r\n                                                                        placeholder=\"Select Category\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group>\r\n                                                                <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                                                                <div className={this.state.subCategoryErrorDiv}>\r\n                                                                    <Select\r\n                                                                        styles={react_select_styles}\r\n                                                                        onChange={this.handleProductSubCategoryChange}\r\n                                                                        options={product_sub_categories_options}\r\n                                                                        value={this.state.productSubCategories}\r\n                                                                        isSearchable={true}\r\n                                                                        isClearable={true}\r\n                                                                        placeholder=\"Select Sub Category\"\r\n                                                                        isDisabled={this.state.subCategoryDisabled}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </Form.Group>\r\n                                                            <Form.Group>\r\n                                                                <Form.Label style={styles.label}>Sub Sub Category</Form.Label>\r\n                                                                <div className={this.state.subSubCategoryErrorDiv}>\r\n                                                                    <Select\r\n                                                                        styles={react_select_styles}\r\n                                                                        onChange={this.handleProductSubSubCategoryChange}\r\n                                                                        options={product_sub_sub_categories_options}\r\n                                                                        value={this.state.productSubSubCategories}\r\n                                                                        isSearchable={true}\r\n                                                                        isClearable={true}\r\n                                                                        placeholder=\"Select Sub Sub Category\"\r\n                                                                        isDisabled={this.state.subSubCategoryDisabled}\r\n                                                                    />\r\n                                                                </div>\r\n                                                            </Form.Group>\r\n                                                        </Card.Body>\r\n                                                    </Accordion.Collapse>\r\n                                                </Card>\r\n                                            </Form.Group>\r\n                                        </Accordion>\r\n                                        {/* End of Product ategory */}\r\n\r\n                                        {/* Dangerous Goods */}\r\n                                        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                            <Form.Group as={Row} style={styles.row}>\r\n                                                <Card style={styles.card}>\r\n                                                    <Card.Header style={styles.card_header}>\r\n                                                        <Form.Label >Dangerous Goods</Form.Label>\r\n                                                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                        </Accordion.Toggle>\r\n                                                    </Card.Header>\r\n                                                    <Accordion.Collapse eventKey=\"0\">\r\n                                                        <Card.Body>\r\n                                                            <Form.Check\r\n                                                                name=\"not_specified\"\r\n                                                                label=\"Not Specified\"\r\n                                                                style={styles.label}\r\n                                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Not Specified')}\r\n                                                            />\r\n                                                            <br></br>\r\n                                                            <Form.Check\r\n                                                                name=\"ceramic\"\r\n                                                                label=\"Ceramic\"\r\n                                                                style={styles.label}\r\n                                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Ceramic')}\r\n                                                            />\r\n                                                            <br></br>\r\n                                                            <Form.Check\r\n                                                                name=\"glass\"\r\n                                                                label=\"Glass\"\r\n                                                                style={styles.label}\r\n                                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Glass')}\r\n                                                            />\r\n                                                            <br></br>\r\n                                                            <Form.Check\r\n                                                                name=\"metal\"\r\n                                                                label=\"Metal\"\r\n                                                                style={styles.label}\r\n                                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Metal')}\r\n                                                            />\r\n                                                            <br></br>\r\n                                                            <Form.Check\r\n                                                                name=\"plastic\"\r\n                                                                label=\"Plastic\"\r\n                                                                style={styles.label}\r\n                                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Plastic')}\r\n                                                            />\r\n                                                        </Card.Body>\r\n                                                    </Accordion.Collapse>\r\n                                                </Card>\r\n                                            </Form.Group>\r\n                                        </Accordion>\r\n                                        {/* End ofDangerous Goods */}\r\n\r\n                                        {/* Product Tags */}\r\n                                        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                            <Form.Group as={Row} style={styles.row}>\r\n                                                <Card style={styles.card}>\r\n                                                    <Card.Header style={styles.card_header}>\r\n                                                        <Form.Label >Product Tags</Form.Label>\r\n                                                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                        </Accordion.Toggle>\r\n                                                    </Card.Header>\r\n                                                    <Accordion.Collapse eventKey=\"0\">\r\n                                                        <Card.Body style={{ height: '250px' }}>\r\n                                                            <CreatableSelect\r\n                                                                isMulti\r\n                                                                onChange={this.handleProductTagChange}\r\n                                                                options={product_color_options}\r\n                                                                value={this.state.productTags}\r\n                                                                placeholder=\"Select/Enter Tags\"\r\n                                                            />\r\n                                                        </Card.Body>\r\n                                                    </Accordion.Collapse>\r\n                                                </Card>\r\n                                            </Form.Group>\r\n                                        </Accordion>\r\n                                        {/* End of Product Tags */}\r\n\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n                                {/* Form Submit Btn Row */}\r\n                                <Form.Row style={styles.row}>\r\n                                    <Form.Group as={Col}>\r\n                                        <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                        <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p>\r\n                                        <Button type=\"submit\" onSubmit={handleSubmit} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Upload'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                                {/* End of Form Submit Btn Row */}\r\n                            </Form>\r\n\r\n                            <style jsx>\r\n                                {`\r\n                                        .RedBorderDiv{\r\n                                            border: 0.5px solid #DC3545;\r\n                                            padding: 1px;\r\n                                            border-radius: 2px;\r\n                                            width: 100%;\r\n                                        }\r\n                                        .BorderDiv{\r\n                                            border: none;\r\n                                            width: 100%;\r\n                                        }\r\n                                        span {\r\n                                            color: red;\r\n                                        }\r\n                                        .nav_link {\r\n                                            background: ${GlobalStyleSheet.admin_primry_color};\r\n                                            border-top: 0.5px solid #434556;\r\n                                            border-bottom: 0.5px solid #434556;\r\n                                            margin: 1.5px 0px;\r\n                                            border-radius: 4px\r\n                                        }\r\n                                        p {\r\n                                            text-align: center; \r\n                                            margin: 0px;\r\n                                        }\r\n                                    `}\r\n                            </style>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '0.7% 4%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '20px',\r\n        height: '20px',\r\n        maxHeight: '20px',\r\n        maxWidth: '20px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n    },\r\n\r\n\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '14px',\r\n        background: 'lightgray'\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    submit_btn: {\r\n        // background: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginTop: '1%',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    product_fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default AddNew;","import { Row, Col, Image, Modal, Button, Form } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faArrowLeft, faTimes, faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport React, { Component } from 'react';\r\n// https://drive.google.com/uc?export=view&id=1NXjE17yYJj2Pt7be9_J0DXdsnNzO4Yd4\r\n// https://drive.google.com/uc?export=view&id=1F7ylPEh_UmvimCgPAOM7rf6gJ_yG8TK9\r\n\r\n\r\nconst ViewProduct = props => {\r\n    const [imgPreview, setImgPreview] = React.useState(false);\r\n    const [index, setIndex] = React.useState('')\r\n\r\n    const len = props.data.product_image_link.length;\r\n\r\n    function prevImage() {\r\n        if (index > 0) {\r\n            setIndex(index - 1)\r\n        }\r\n    }\r\n\r\n    function nextImage() {\r\n        if (index < (len - 1)) {\r\n            setIndex(index + 1)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row style={styles.title_row} noGutters>\r\n                <FontAwesomeIcon className=\"fontawesome\" icon={faArrowLeft} style={styles.title_fontawesome} onClick={props.back} className=\"mr-auto\" />\r\n                <div className=\"mr-auto\" style={styles.title}> {props.data.product_name}</div>\r\n                <div style={styles.title}> Prev </div>\r\n                <div style={styles.title}> Next </div>\r\n            </Row>\r\n            {_.isEqual(props.data.product_type, \"simple-product\") ?\r\n                <Row style={styles.img_row} noGutters>\r\n                    {props.data.product_image_link && props.data.product_image_link.map((element, index) =>\r\n                        <div style={{ margin: '0%' }}>\r\n                            <Image thumbnail fluid style={{ minWidth: '200px', maxWidth: '200px' }}\r\n                                src={element.value} alt=\"Flowers in Chania\" onClick={() => { setImgPreview(true), setIndex(index) }} />\r\n                        </div>\r\n                    )}\r\n                </Row>\r\n                :\r\n                <>\r\n                    <Row style={styles.img_row}>\r\n                        {/* <Form.Label style={styles.general_info_label}>General Info</Form.Label> */}\r\n                        <label><span>General Info</span></label>\r\n                        <label>Data</label>\r\n                    </Row>\r\n                </>\r\n            }\r\n            {/* Image Preview */}\r\n            <div>\r\n                {imgPreview ?\r\n                    <div className=\"modal-overlay\">\r\n                        <div className=\"modal-body\">\r\n                            <div className=\"close-modal\">\r\n                                <div className=\"mr-auto\"></div>\r\n                                <div className=\"mr-auto\"></div>\r\n                                <FontAwesomeIcon className=\"mr-auto\" icon={faChevronLeft} style={styles.img_preview_fontawesome}\r\n                                    onClick={() => prevImage} />\r\n                                <FontAwesomeIcon className=\"mr-auto\" icon={faChevronRight} style={styles.img_preview_fontawesome}\r\n                                    onClick={nextImage} />\r\n                                <div className=\"mr-auto\"></div>\r\n                                <FontAwesomeIcon icon={faTimes} style={styles.img_preview_fontawesome}\r\n                                    onClick={() => setImgPreview(false)} />\r\n                            </div>\r\n                            <div className=\"image-container\">\r\n                                <img\r\n                                    src={props.data.product_image_link[index].value}\r\n                                    style={{ maxWidth: '100%', maxHeight: '90vh', margin: 'auto' }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n            </div>\r\n            <style jsx>\r\n                {`\r\n                    label {\r\n                        width: 100%; \r\n                        text-align: center; \r\n                        border-bottom: 1px solid gray; \r\n                        line-height: 0.1em;\r\n                        font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n                        margin: 0%; \r\n                    } \r\n                    label span { \r\n                            background: ${GlobalStyleSheet.admin_primry_color};\r\n                            color: white;\r\n                            padding: 5px 10px;\r\n                    }\r\n                   .modal-overlay {\r\n                        position: fixed;\r\n                        top: 0;\r\n                        left: 0;\r\n                        bottom: 0;\r\n                        right: 0;\r\n                        z-index: 10;\r\n                        width: 100%;\r\n                        height: 100%;\r\n                        background: rgba(21, 21, 21, 0.75);\r\n                    }\r\n                     .modal-body {\r\n                        position: relative;\r\n                        z-index: 11;\r\n                        margin: 2.5%;\r\n                        overflow: hidden;\r\n                        max-width: 100%;\r\n                        max-height: 100%;\r\n                    }\r\n                    .close-modal {\r\n                        position: fixed;\r\n                        display: flex;\r\n                        top: 10px;\r\n                        left: 0;\r\n                        right: 0;\r\n                        width: 100%;\r\n                    }\r\n                    .image-container {\r\n                        display: grid;\r\n                        height: 100%;\r\n                        // display: flex;\r\n                        // justify-content: center;\r\n                        // align-items: center;\r\n                    }\r\n                `}\r\n            </style>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '0.7% 4%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    title_fontawesome: {\r\n        cursor: 'pointer',\r\n        marginRight: '3%',\r\n        width: '20px',\r\n        height: '20px',\r\n        maxHeight: '20px',\r\n        maxWidth: '20px',\r\n    },\r\n    title: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    img_row: {\r\n        margin: '2%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroung: 'white',\r\n        zIndex: '999'\r\n    },\r\n    img_preview_fontawesome: {\r\n        cursor: 'pointer',\r\n        color: 'white',\r\n        fontWeight: 'lighter',\r\n        width: '30px',\r\n        height: '30px',\r\n        maxHeight: '30px',\r\n        maxWidth: '30px',\r\n    },\r\n    general_info_label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        width: '100%',\r\n        borderBottom: '1px solid gray'\r\n    },\r\n}\r\nexport default ViewProduct;","import React, { Component } from 'react';\r\nimport { Row, Table, Form, Button, Nav } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../../../styleSheet'\r\nimport ViewProduct from './all-products-contents/view-product'\r\nimport Link from 'next/link'\r\nimport Router from 'next/router'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faArrowAltCircleLeft } from '@fortawesome/free-regular-svg-icons';\r\n\r\n\r\nclass AllProducts extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            productsArray: [],\r\n            viewProduct: false,\r\n            data: [],\r\n        }\r\n    }\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products/';\r\n        try {\r\n            const response = await axios.get(url);\r\n            console.log('data:', response.data.data.docs)\r\n            this.setState({ productsArray: response.data.data.docs })\r\n        } catch (error) {\r\n            console.log('Data Fetching Eror:', error);\r\n        }\r\n    }\r\n\r\n    handleViewProduct(index, i) {\r\n        // let dataa;\r\n        // Simple Product\r\n        if (i == -1) {\r\n            this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n        } else { // Variable Product\r\n            // dataa = Object.assign([], this.state.productsArray[index])\r\n            // dataa.product_variations = dataa.product_variations[i];\r\n            this.setState({ data: this.state.productsArray[index], viewProduct: true })\r\n        }\r\n        // console.log('datadata:', data)\r\n        // Router.push({\r\n        //     pathname: '/view-product',\r\n        //     query: { data: data },\r\n        // }, '/vendor/view-product?' + data.product_name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.viewProduct ?\r\n                    <ViewProduct\r\n                        data={this.state.data}\r\n                        back={() => this.setState({ viewProduct: false, data: [] })}\r\n                    />\r\n                    :\r\n                    <>\r\n                        <Row style={styles.title_row} noGutters>\r\n                            <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                            <div className=\"mr-auto\" style={styles.title}> All Products</div>\r\n                        </Row>\r\n                        <Row noGutters style={{ margin: '2%', background: 'white' }}>\r\n                            <Table responsive bordered hover size=\"sm\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th style={{ textAlign: 'center' }}>\r\n                                            <Form.Check type=\"checkbox\" />\r\n                                        </th>\r\n                                        <th style={{ textAlign: 'center' }}>Name</th>\r\n                                        <th style={{ textAlign: 'center' }}>SKU</th>\r\n                                        <th style={{ textAlign: 'center' }}>Stock</th>\r\n                                        <th style={{ textAlign: 'center' }}>Price</th>\r\n                                        <th style={{ textAlign: 'center' }}>Categories</th>\r\n                                        <th style={{ textAlign: 'center' }}>Tags</th>\r\n                                        <th style={{ textAlign: 'center' }}>Date</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.productsArray && this.state.productsArray.map((element, index) =>\r\n                                        _.isEqual(element.product_type, \"simple-product\") ?\r\n                                            <tr key={index}>\r\n                                                <td align=\"center\" style={styles.label}><Form.Check type=\"checkbox\" /></td>\r\n                                                <td className=\"td\">\r\n                                                    {element.product_name}\r\n                                                    <div className=\"mr-auto\"></div>\r\n                                                    <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index, -1)}> View </Nav.Link>\r\n                                                    <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n                                                    <Nav.Link style={styles.nav_link}>Delete</Nav.Link>\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                <td align=\"center\" style={styles.label}>{element.product_in_stock}</td>\r\n                                                <td align=\"center\" style={styles.label}>{element.product_price}</td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {element.product_category && element.product_category.map(e =>\r\n                                                        e.value + ','\r\n                                                    )}\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {_.isEmpty(element.product_tags) ? '-' :\r\n                                                        element.product_tags.map(e =>\r\n                                                            e.value + ','\r\n                                                        )\r\n                                                    }\r\n                                                </td>\r\n                                                <td align=\"center\" style={styles.label}>\r\n                                                    {_.isEmpty(element.product_entry_date) ? '-' : element.product_entry_date}\r\n                                                </td>\r\n                                            </tr>\r\n                                            :\r\n                                            <>\r\n                                                <tr>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        <Form.Check type=\"checkbox\" />\r\n                                                    </td>\r\n                                                    <td className=\"td\">\r\n                                                        {element.product_name}\r\n                                                        <div className=\"mr-auto\"></div>\r\n                                                        <Nav.Link style={styles.nav_link} onClick={() => this.handleViewProduct(index)}>View</Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link}>Edit</Nav.Link>\r\n                                                        <Nav.Link style={styles.nav_link}>Delete</Nav.Link>\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>{element.sku ? element.sku : '-'}</td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_variations.map(e =>\r\n                                                            e.item[e.item.length - 2].value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_variations.map(e =>\r\n                                                            e.item[e.item.length - 3].value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {element.product_category && element.product_category.map(e =>\r\n                                                            e.value + ','\r\n                                                        )}\r\n                                                    </td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {_.isEmpty(element.product_tags) ? '-' :\r\n                                                            element.product_tags.map(e =>\r\n                                                                e.value + ','\r\n                                                            )\r\n                                                        }</td>\r\n                                                    <td align=\"center\" style={styles.label}>\r\n                                                        {_.isEmpty(element.product_entry_date) ? '-' : element.product_entry_date}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </>\r\n                                    )}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Row >\r\n                    </>\r\n                }\r\n                <style jsx>\r\n                    {`\r\n                        .td {\r\n                            display: flex;\r\n                            flex-direction: row;\r\n                            align-items: center;\r\n                            font-size: ${GlobalStyleSheet.form_label_fontsize};\r\n                        }\r\n                    `}\r\n                </style>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '0.7% 4%',\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '20px',\r\n        height: '20px',\r\n        maxHeight: '20px',\r\n        maxWidth: '20px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`\r\n    },\r\n    nav_link: {\r\n        paddingLeft: '10px',\r\n        paddingRight: '5px',\r\n    },\r\n}\r\nexport default AllProducts;","\r\nconst MonthlyReports = () => {\r\n    return(\r\n        <div>This is overall</div>\r\n    )\r\n}\r\n\r\nexport default MonthlyReports;","\r\nconst OverallReports = () => {\r\n    return(\r\n        <div>This is overall</div>\r\n    )\r\n}\r\n\r\nexport default OverallReports;","import React, { Component } from 'react';\r\nimport { Row, Table } from 'react-bootstrap';\r\n\r\nclass WeeklyReports extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n                <Table striped bordered hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>First Name</th>\r\n                            <th>Last Name</th>\r\n                            <th>Username</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>1</td>\r\n                            <td>Mark</td>\r\n                            <td>Otto</td>\r\n                            <td>@mdo</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>2</td>\r\n                            <td>Jacob</td>\r\n                            <td>Thornton</td>\r\n                            <td>@fat</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>3</td>\r\n                            <td colSpan=\"2\">Larry the Bird</td>\r\n                            <td>@twitter</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default WeeklyReports;","\r\nconst YearlyReports = () => {\r\n    return(\r\n        <div>This is overall</div>\r\n    )\r\n}\r\n\r\nexport default YearlyReports;","import { Row, Tabs, Tab } from 'react-bootstrap';\r\n\r\nimport WeeklyReports from './report-contents/weekly-reports'\r\nimport MonthlyReports from './report-contents/monthly-reports'\r\nimport YearlyReports from './report-contents/yearly-reports'\r\nimport OverallReports from './report-contents/overall-reports'\r\n\r\nconst Reports = () => {\r\n    return (\r\n        <div style={{ width: '100%', margin: '2%'}}>\r\n            <Tabs defaultActiveKey=\"overall\" transition={false} id=\"reports_tab\" justify fill>\r\n                <Tab eventKey=\"overall\" title=\"Overall\">\r\n                    <OverallReports></OverallReports>\r\n                </Tab>\r\n                <Tab eventKey=\"yearly\" title=\"Yearly\">\r\n                    <YearlyReports></YearlyReports>\r\n                </Tab>\r\n                <Tab eventKey=\"monthly\" title=\"Monthly\">\r\n                    <MonthlyReports></MonthlyReports>\r\n                </Tab>\r\n                <Tab eventKey=\"weekly\" title=\"Weekly\">\r\n                    <WeeklyReports></WeeklyReports>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reports;","\r\nimport { Row, Col, Card, InputGroup, Button } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faStoreAlt, faUserPlus, faCheckDouble, faDollarSign, faTachometerAlt,\r\n    faEdit, faClock, faBan\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\nimport CountUp from 'react-countup';\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass VendorDashboard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noOfTotalProducts: 1000,\r\n            noOfInStockProducts: 2000,\r\n            noOfSoldProducts: 3000,\r\n            noOfReturnedProducts: 4000,\r\n\r\n            totalEarnings: 5470,\r\n            thisYearEarnings: 2309,\r\n            thisMonthEarnings: 1207,\r\n\r\n            noOfTotalOrders: 1190,\r\n            noOfDeliveredOrders: 980,\r\n            noOfPendingOrders: 120,\r\n            noOfCancelledOrders: 100,\r\n\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faTachometerAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Dashboard </div>\r\n                </Row>\r\n                <Row noGutters style={{ padding: '0% 1%' }}>\r\n                    <Col lg={4} md={4} sm={12} xs={12} style={styles.product_card_col}>\r\n                        <Card>\r\n                            <Card.Header style={styles.card_header}>\r\n                                Products\r\n                            </Card.Header>\r\n                            <Card.Body style={styles.card_body}>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Total Products</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.total_product_row}>\r\n                                        <FontAwesomeIcon icon={faProductHunt} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfTotalProducts} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">In-Stock Products</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.stock_product_row}>\r\n                                        <FontAwesomeIcon icon={faStoreAlt} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfInStockProducts} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Sold Products</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.sold_product_row}>\r\n                                        <FontAwesomeIcon icon={faCheckDouble} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfSoldProducts} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Returned Products</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.returned_product_row}>\r\n                                        <FontAwesomeIcon icon={faThumbsDown} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfReturnedProducts} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    {/* Col-2 */}\r\n                    <Col lg={4} md={4} sm={12} xs={12} style={styles.order_card_col}>\r\n                        <Card>\r\n                            <Card.Header style={styles.card_header}>\r\n                                Orders\r\n                            </Card.Header>\r\n                            <Card.Body style={styles.card_body}>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Total Orders</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.total_order_row}>\r\n                                        <FontAwesomeIcon icon={faEdit} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfTotalOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Deleivered Orders</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.delivered_order_row}>\r\n                                        <FontAwesomeIcon icon={faThumbsUp} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfDeliveredOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Pending Orders</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.prnding_order_row}>\r\n                                        <FontAwesomeIcon icon={faClock} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfPendingOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.card_text_div}>\r\n                                    <p>\r\n                                        <span className=\"label_span\">Cancelled Orders</span>\r\n                                    </p>\r\n                                    <div className=\"number_count_div\" style={styles.cancelled_order_row}>\r\n                                        <FontAwesomeIcon icon={faBan} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfCancelledOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    {/* Col-3 */}\r\n                    <Col lg={4} md={4} sm={12} xs={12} style={styles.earning_card_col}>\r\n                        <Row noGutters style={styles.earning_card_row}>\r\n                            <Card style={styles.total_earning_card}>\r\n                                <Card.Header style={styles.earning_card_header}>\r\n                                    Total Earnings\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"number_count_div\" style={styles.total_errning_row}>\r\n                                        <FontAwesomeIcon icon={faDollarSign} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfPendingOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                        <Row noGutters style={styles.earning_card_row}>\r\n                            <Card style={styles.year_earning_card}>\r\n                                <Card.Header style={styles.earning_card_header}>\r\n                                    This Year Earnings\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"number_count_div\" style={styles.year_errning_row}>\r\n                                        <FontAwesomeIcon icon={faDollarSign} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfPendingOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                        <Row noGutters style={styles.earning_card_row}>\r\n                            <Card style={styles.month_earning_card}>\r\n                                <Card.Header style={styles.earning_card_header}>\r\n                                    This Month Earnings\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <div className=\"number_count_div\" style={styles.month_errning_row}>\r\n                                        <FontAwesomeIcon icon={faDollarSign} className=\"mr-auto\" style={styles.product_fontawesome} />\r\n                                        <CountUp start={0} end={this.state.noOfPendingOrders} delay={0} duration={10}>\r\n                                            {({ countUpRef }) => (\r\n                                                <div>\r\n                                                    <span className=\"number_count\" ref={countUpRef} />\r\n                                                </div>\r\n                                            )}\r\n                                        </CountUp>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <style jsx>\r\n                    {`\r\n                        p {\r\n                            width: 100%; \r\n                            border-bottom: 1.2px dashed lightgray; \r\n                            line-height: 0.1em;\r\n                         } \r\n                         .label_span {\r\n                            background:#fff;\r\n                            padding-right: 3%\r\n                         }\r\n                         .number_count {\r\n                            color: white;\r\n                            font-size: 25px\r\n                         }\r\n                         .number_count_div {\r\n                            cursor: pointer;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            padding: 5%;\r\n                            background: red;\r\n                            border-radius: 5px\r\n                         }\r\n                         .number_count_div:hover {\r\n                             margin: -5px 0px 5px 0px;\r\n                             box-shadow: 0 4px 8px 0 black, 0 6px 20px 0 yellow;\r\n                         }\r\n                    `}\r\n                </style>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid lightgray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0px'\r\n    },\r\n\r\n    card_header: {\r\n        // background: 'white',\r\n        // padding: '1.5% 5%',\r\n        color: '#6A7074',\r\n        // borderBottom: `0.5px solid ${GlobalStyleSheet.body_color}`\r\n        fontSize: '15px'\r\n    },\r\n    card_text_div: {\r\n        color: '#6A7074',\r\n        fontSize: '14px',\r\n        padding: '5%',\r\n    },\r\n\r\n    // Products\r\n    product_card_col: {\r\n        padding: '3% 1%'\r\n    },\r\n    total_product_row: {\r\n        background: 'blue',\r\n    },\r\n    stock_product_row: {\r\n        background: 'purple',\r\n    },\r\n    sold_product_row: {\r\n        background: 'green',\r\n    },\r\n    returned_product_row: {\r\n        background: 'gray',\r\n    },\r\n\r\n    // Orders\r\n    order_card_col: {\r\n        padding: '3% 1%'\r\n    },\r\n    total_order_row: {\r\n        background: 'blue',\r\n    },\r\n    delivered_order_row: {\r\n        background: 'green',\r\n    },\r\n    prnding_order_row: {\r\n        background: '#ffbf00',\r\n    },\r\n    cancelled_order_row: {\r\n        background: 'red',\r\n    },\r\n\r\n    // Earnings\r\n    earning_card_col: {\r\n        padding: '3% 1%'\r\n    },\r\n    earning_card_row: {\r\n        marginBottom: '4%'\r\n    },\r\n    earning_card_header: {\r\n        color: 'white',\r\n        fontSize: '15px',\r\n    },\r\n    total_earning_card: {\r\n        width: '100%',\r\n        background: '#0099e6',\r\n    },\r\n    year_earning_card: {\r\n        width: '100%',\r\n        background: '#ac00e6',\r\n        color: 'blue'\r\n    },\r\n    month_earning_card: {\r\n        width: '100%',\r\n        background: '#ac7339',\r\n    },\r\n    // \r\n    total_errning_row: {\r\n        // margin: '3% 0%',\r\n        background: '#0088cc',\r\n    },\r\n    year_errning_row: {\r\n        // margin: '3% 0%',\r\n        background: '#9900cc',\r\n    },\r\n    month_errning_row: {\r\n        // margin: '3% 0%',\r\n        background: '#996633',\r\n    },\r\n\r\n    product_fontawesome: {\r\n        color: 'white',\r\n        width: '30px',\r\n        height: '30px',\r\n        maxHeight: '30px',\r\n        maxWidth: '30px',\r\n    },\r\n\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primry_color}`,\r\n        width: '50px',\r\n        height: '50px',\r\n        maxHeight: '50px',\r\n        maxWidth: '50px',\r\n        float: 'right'\r\n    },\r\n}\r\n\r\nexport default VendorDashboard;\r\n","\r\nimport { Nav, Tab, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faUpload, faTachometerAlt, faChevronRight, faChevronDown, faChevronUp,\r\n    faPlusCircle, faPowerOff, faListAlt, faWarehouse, faTags, faPercent, faChartBar\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport VendorDashboard from './dashboard-contents/vendor-dashboard';\r\nimport AllProducts from './dashboard-contents/product-contents/all-products';\r\nimport AddNew from './dashboard-contents/product-contents/add-new';\r\nimport AddCategory from './dashboard-contents/product-contents/add-category';\r\nimport Inventory from './dashboard-contents/inventory';\r\nimport Discounts from './dashboard-contents/discounts';\r\nimport Reports from './dashboard-contents/reports';\r\nimport BulkUpload from './dashboard-contents/bulk-upload';\r\nimport Orders from './dashboard-contents/orders';\r\n\r\nimport GlobalStyleSheet from '../../../../styleSheet';\r\n\r\n\r\nconst DashboardSideDrawer = props => {\r\n    let drawerClasses = \"tabs_side_drawer\";\r\n    if (props.show) {\r\n        drawerClasses = \"tabs_side_drawer open\";\r\n    }\r\n    const [show_product, setShow_product] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"dashboard-tabs\" defaultActiveKey=\"Dashboard\">\r\n                {/* Side Drawer Components */}\r\n                <div className={drawerClasses}>\r\n                    <Nav className=\"flex-column\" variant=\"pills\">\r\n                        <Nav.Item style={styles.image_div}>\r\n                            <p>\r\n                                <Image src=\"muhalik.jpg\" roundedCircle thumbnail fluid style={styles.image} />\r\n                                <Nav.Link href=\"/index\" style={styles.muhalik}> {props.token} </Nav.Link>\r\n                            </p>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Dashboard\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faTachometerAlt} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Dashboard</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link style={styles.nav_link} onClick={() => setShow_product(!show_product)}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\"> Products </div>\r\n                                    <FontAwesomeIcon icon={show_product ? faChevronUp : faChevronDown} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        {show_product ?\r\n                            <div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"AllProducts\" onClick={props.click} style={styles.product_submenu_link} >\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> All Products </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"AddNew\" onClick={props.click} style={styles.product_submenu_link} >\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faPlusCircle} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Add New </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"AddCategory\" onClick={props.click} style={styles.product_submenu_link}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Add Category </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            : null}\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Inventory\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faWarehouse} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Inventory</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"BulkUpload\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faUpload} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Bulk Upload</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Discounts\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faTags} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Discount Coupons</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Orders\" onClick={props.click} style={styles.nav_link} >\r\n                                    <FontAwesomeIcon icon={faTags} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Orders</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\" >\r\n                                <Nav.Link eventKey=\"Reports\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faChartBar} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Reports</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\" >\r\n                                <Nav.Link onClick={props.click, props.logoutClickHandler} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faPowerOff} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Logout</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </div>\r\n\r\n                <div className=\"tabs_side_drawer_tab_content\" >\r\n                    <Col sm={\"auto\"} style={{ padding: '0px' }}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Dashboard\">\r\n                                <VendorDashboard />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"AllProducts\">\r\n                                <AllProducts />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"AddNew\">\r\n                                <AddNew />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"AddCategory\">\r\n                                <AddCategory />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Inventory\">\r\n                                <Inventory />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"BulkUpload\">\r\n                                <BulkUpload />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Discounts\">\r\n                                <Discounts />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Orders\">\r\n                                <Orders />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Reports\">\r\n                                <Reports />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </div>\r\n                {/* End of the Side Drawer Components */}\r\n            </Tab.Container>\r\n            <style jsx>\r\n                {`\r\n                    .nav_link {\r\n                        color: ${GlobalStyleSheet.body_color};\r\n                        border-top: 0.5px solid #434556;\r\n                        border-bottom: 0.5px solid #434556;\r\n                    }\r\n                    .nav_link:hover {\r\n                        background: #30313E;\r\n                    }\r\n                    .tabs_side_drawer {\r\n                        height: 100%;\r\n                        background: ${GlobalStyleSheet.admin_primry_color};\r\n                        box-shadow: 1px 0px 7px rgba(0, 0, 0, 0.5);\r\n                        position: fixed;\r\n                        top: 0;\r\n                        bottom: 1px;\r\n                        left: 0;\r\n                        overflow-y: auto;                        \r\n                        width: 80%;\r\n                        max-width: 400px;\r\n                        z-index: 200;\r\n                        transform: translateX(-150% );\r\n                        transition: transform 0.5s ease-out;\r\n                    }\r\n                    .tabs_side_drawer.open{\r\n                        transform: translateX(0);\r\n                    }\r\n                    .product_submenu {\r\n                        background: ${GlobalStyleSheet.admin_primry_color};\r\n                        border-top: 0.5px solid #434556;\r\n                        border-bottom: 0.5px solid #434556;\r\n                        margin: 0% 5% 0% 10%;\r\n                    }\r\n                    p {\r\n                        text-align: center; \r\n                        margin: 0px;\r\n                        padding: 0px;\r\n                    }\r\n                    label {\r\n                        margin-top: 4%;\r\n                        color: ${GlobalStyleSheet.body_color};\r\n                    }\r\n                    \r\n                    @media (min-width: 992px) {\r\n                        .tabs_side_drawer {\r\n                            display: none;\r\n                        }\r\n                        .tabs_side_drawer_tab_content {\r\n                            display: none;\r\n                        }\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    image_div: {\r\n        background: 'white',\r\n        width: '100%',\r\n        borderRight: '0.5px solid gray',\r\n        padding: '2%'\r\n    },\r\n    image: {\r\n        width: '80px'\r\n    },\r\n    muhalik: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        fontSize: '16px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        background: 'none',\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px'\r\n    },\r\n    product_submenu_link: {\r\n        color: 'white',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '40px'\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        marginRight: '8%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    forword_fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        float: 'right',\r\n        width: '8px',\r\n        height: '8px',\r\n        maxHeight: '8px',\r\n        maxWidth: '8px',\r\n    },\r\n}\r\n\r\nexport default DashboardSideDrawer;","import { Image, Nav, Navbar, Dropdown, ButtonGroup, Form, Container, DropdownButton, InputGroup, Button, Spinner, Tab, Row, Col, } from \"react-bootstrap\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faSearch, faBars, faChevronRight, faTachometerAlt, faUpload, faHandsHelping, faUser,\r\n    faChevronDown, faChevronUp, faPowerOff, faListAlt, faWarehouse, faTags, faPercent, faPlusCircle, faChartBar\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport VendorDashboard from './dashboard-contents/vendor-dashboard';\r\nimport AllProducts from './dashboard-contents/product-contents/all-products';\r\nimport AddNew from './dashboard-contents/product-contents/add-new';\r\nimport AddCategory from './dashboard-contents/product-contents/add-category';\r\nimport Inventory from './dashboard-contents/inventory';\r\nimport Discounts from './dashboard-contents/discounts';\r\nimport Reports from './dashboard-contents/reports';\r\nimport BulkUpload from './dashboard-contents/bulk-upload';\r\nimport Orders from './dashboard-contents/orders';\r\n\r\nimport GlobalStyleSheet from '../../../../styleSheet';\r\n\r\nconst Dashboard = props => {\r\n    let wprapper_Casses = \"wrapper\";\r\n    if (props.show) {\r\n        wprapper_Casses = \"wrapper open\";\r\n    }\r\n\r\n    const [show_product, setShow_product] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"dashboard-tabs\" defaultActiveKey=\"Dashboard\" >\r\n                <Row noGutters>\r\n                    {/* Show/Hide Tabs & Tabs-Content when screen Switches to Large/Medium,Small,Extra-Small Devices*/}\r\n                    <div className={wprapper_Casses} style={styles.wrapper_col}>\r\n                        <Nav className=\"flex-column\" variant=\"pills\" style={{ minWidth: '220px', maxWidth: '220px' }}>\r\n                            <Nav.Item style={styles.image_div}>\r\n                                <p>\r\n                                    <Image src=\"muhalik.jpg\" roundedCircle thumbnail fluid style={styles.image} />\r\n                                    <Nav.Link href=\"/index\" style={styles.muhalik}> {props.token} </Nav.Link>\r\n                                </p>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Dashboard\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faTachometerAlt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Dashboard </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link style={styles.nav_link} onClick={() => setShow_product(!show_product)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Products </div>\r\n                                        <FontAwesomeIcon icon={show_product ? faChevronUp : faChevronDown} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            {show_product ?\r\n                                <div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"AllProducts\" style={styles.product_submenu_link} >\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> All Products </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"AddNew\" style={styles.product_submenu_link} >\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faPlusCircle} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Add New </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"AddCategory\" style={styles.product_submenu_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Add Category </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                : null}\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Inventory\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faWarehouse} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Inventory </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"BulkUpload\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faUpload} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Bulk Upload </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Discounts\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faTags} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Discount </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Orders\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faTags} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Orders </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\" >\r\n                                    <Nav.Link eventKey=\"Reports\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faChartBar} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Reports </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        {/* End Tabs Side Drawer */}\r\n                    </div>\r\n                    {/* Toolbar & Tabs Contents */}\r\n                    <Col>\r\n                        {/* Toolbar */}\r\n                        <Navbar collapseOnSelect expand=\"lg\" style={styles.navbar} variant=\"dark\">\r\n                            {/* Show/Hide bar btn while screen switches to Large to Small,Medium,Extra-Small Devices */}\r\n                            <div className=\"side_tab_toogle_btn mr-auto\" style={styles.toolbar_btn_div}>\r\n                                <Button style={styles.toolbar_btn} onClick={props.drawerClickHandler}>\r\n                                    <FontAwesomeIcon icon={faBars} style={styles.toolbar_fontawesomer} />\r\n                                </Button>\r\n                            </div>\r\n                            {/* Bars Btn to Show/Hide Tabs Sde Drawer in Large Devices */}\r\n                            <div className=\"wrapper_btn\" style={styles.toolbar_btn_div}>\r\n                                <Button style={styles.toolbar_btn} onClick={props.wrapperBtnClickHandler}>\r\n                                    <FontAwesomeIcon icon={faBars} style={styles.toolbar_fontawesomer} />\r\n                                </Button>\r\n                            </div>\r\n                            {/* Search Bar */}\r\n                            <Form inline style={{ width: '85%' }} className=\"mr-auto\">\r\n                                <Form.Control\r\n                                    style={styles.search_bar}\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Search here\"\r\n                                    aria-describedby=\"side_drawer_searchbar\"\r\n                                    name=\"side_drawer_searchbar\"\r\n                                />\r\n                                <InputGroup.Prepend>\r\n                                    <Button id=\"side_drawer_searchBtn\" style={styles.toolbar_btn}>\r\n                                        <FontAwesomeIcon icon={faSearch} style={styles.toolbar_fontawesomer} />\r\n                                    </Button>\r\n                                </InputGroup.Prepend>\r\n                            </Form>\r\n                            {/* Account Setting Dropdown */}\r\n                            <div className=\"account_settig_dropdown\">\r\n                                <Dropdown as={ButtonGroup} alignRight>\r\n                                    <Dropdown.Toggle size=\"sm\" split variant=\"light\" id=\"dropdown-split\" style={{ background: 'none', border: 'none' }} />\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item href=\"#/action-1\">\r\n                                            <FontAwesomeIcon icon={faUser} style={styles.dropDown_fontawesome} />\r\n                                        My Profile\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-2\">\r\n                                            <FontAwesomeIcon icon={faSearch} style={styles.dropDown_fontawesome} />\r\n                                        Feedback\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-3\">\r\n                                            <FontAwesomeIcon icon={faHandsHelping} style={styles.dropDown_fontawesome} />\r\n                                        Help?\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Divider />\r\n                                        <Dropdown.Item onClick={props.logoutClickHandler}>\r\n                                            <FontAwesomeIcon icon={faPowerOff} style={styles.dropDown_fontawesome} />\r\n                                        Logout\r\n                                </Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Navbar>\r\n                        {/* End of Toolbar */}\r\n                        {/* Tab Content for Large Devices */}\r\n                        <div className=\"tab_content\">\r\n                            <Tab.Content style={{ height: `calc(100vh - 65px)`, overflowY: 'auto' }}>\r\n                                <Tab.Pane eventKey=\"Dashboard\">\r\n                                    <VendorDashboard />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"AllProducts\">\r\n                                    <AllProducts />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"AddNew\">\r\n                                    <AddNew />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"AddCategory\">\r\n                                    <AddCategory />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Inventory\">\r\n                                    <Inventory />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"BulkUpload\">\r\n                                    <BulkUpload />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Discounts\">\r\n                                    <Discounts />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Orders\">\r\n                                    <Orders />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Reports\">\r\n                                    <Reports />\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </div>\r\n                        {/* End of Tab Content for Large Devices */}\r\n                    </Col>\r\n                    {/* End of the Toolbar & Tabs Components */}\r\n                </Row>\r\n            </Tab.Container>\r\n            <style jsx>\r\n                {`\r\n                .show_product {\r\n                    display: none;\r\n                }\r\n                .show_product.open {\r\n                    display: flex;\r\n                }\r\n                .wrapper {\r\n                    display: none;\r\n                }\r\n                .wrapper.open{\r\n                    backgroung:  ${GlobalStyleSheet.admin_primry_color};\r\n                    display: block;\r\n                    height: 100vh;\r\n                    overflow-y: auto;\r\n                }\r\n                .nav_link {\r\n                    background: ${GlobalStyleSheet.admin_primry_color};\r\n                    border-top: 0.5px solid #434556;\r\n                    border-bottom: 0.5px solid #434556;\r\n                    margin: 1.5px 0px;\r\n                }\r\n                .nav_link:hover {\r\n                    background: #30313E;\r\n                }\r\n                .product_submenu {\r\n                    background: ${GlobalStyleSheet.admin_primry_color};\r\n                    border-top: 0.5px solid #434556;\r\n                    border-bottom: 0.5px solid #434556;\r\n                    margin: 0% 5% 0% 10%;\r\n                }\r\n                .product_submenu:hover {\r\n                    background: #30313E;\r\n                }\r\n                .side_tab_toogle_btn {\r\n                    margin: 0%\r\n                }\r\n                p {\r\n                    text-align: center; \r\n                    margin: 0px;\r\n                }\r\n                @media (max-width: 991px) {\r\n                    .wrapper_btn {\r\n                        display: none\r\n                    }\r\n                    .wrapper {\r\n                      display: none;\r\n                    }\r\n                    .tab_content {\r\n                        display: none;\r\n                    }\r\n                    .account_settig_dropdown {\r\n                        display: none\r\n                    }\r\n                    .wrapper.open {\r\n                        display: none;\r\n                        height: 0vh\r\n                    }\r\n                }\r\n                @media (min-width: 992px) {\r\n                    .side_tab_toogle_btn {\r\n                        display: none;\r\n                    }\r\n                }\r\n            `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    image_div: {\r\n        background: 'white',\r\n        width: '100%',\r\n        borderRight: '0.5px solid gray',\r\n        padding: '2%'\r\n    },\r\n    image: {\r\n        width: '100px'\r\n    },\r\n    muhalik: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        fontSize: '16px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        background: 'none'\r\n    },\r\n    wrapper_col: {\r\n        background: `${GlobalStyleSheet.admin_primry_color}`,\r\n    },\r\n    navbar: {\r\n        borderBottom: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n        background: 'white',\r\n        padding: '1% 1%',\r\n    },\r\n    toolbar_btn_div: {\r\n        marginRight: '1%',\r\n    },\r\n    toolbar_btn: {\r\n        background: `${GlobalStyleSheet.admin_primry_color}`,\r\n        border: 'none',\r\n        width: '31px',\r\n        height: '31px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: '0px',\r\n    },\r\n    toolbar_fontawesomer: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    },\r\n\r\n    search_bar: {\r\n        flex: '1',\r\n    },\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px'\r\n    },\r\n    product_submenu_link: {\r\n        color: 'white',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '40px'\r\n    },\r\n\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        marginRight: '8%',\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    },\r\n    forword_fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        width: '10px',\r\n        height: '10px',\r\n        maxHeight: '10px',\r\n        maxWidth: '10px',\r\n    },\r\n\r\n    dropDown_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        margin: '0px 20px 0px 0px',\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport Router from 'next/router';\r\nimport Dashboard from './components/vendor/dashboard/dashboard';\r\nimport DashboardSideDrawer from './components/vendor/dashboard/dashboard-side-drawer';\r\nimport GlobalStyleSheet from '../styleSheet';\r\nimport { chectAuth, removeTokenFromStorage } from '../sdk/core/authentication-service';\r\n\r\nconst BackDrop = props => (\r\n    <div>\r\n        <div onClick={props.click}>\r\n        </div>\r\n        <style jsx>{`\r\n             position: fixed;\r\n             width: 100%;\r\n             height: 100%;\r\n             top: 0;\r\n             left: 0;\r\n             background: rgba(0, 0, 0, 0.3);\r\n             z-index: 100;\r\n        `}</style>\r\n    </div>\r\n)\r\n\r\nclass Vendor extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.authUser();\r\n        this.state = {\r\n            sideDrawerOpen: false,\r\n            showWrapper: true,\r\n            jwt_token: '',\r\n        }\r\n    }\r\n\r\n    async authUser() {\r\n        this.setState({ jwt_token: await chectAuth('vendor') });\r\n    }\r\n\r\n    drawerToggleClickHandler = () => {\r\n        this.setState(prevState => {\r\n            return { sideDrawerOpen: !prevState.sideDrawerOpen };\r\n        });\r\n    };\r\n    ShowWrapperClickHandler = () => {\r\n        this.setState(prevState => {\r\n            return { showWrapper: !prevState.showWrapper };\r\n        });\r\n    };\r\n\r\n    backdropClickHandler = () => {\r\n        this.setState({ sideDrawerOpen: false });\r\n    };\r\n\r\n    logout() {\r\n        removeTokenFromStorage();\r\n    }\r\n\r\n    render() {\r\n        let backdrop;\r\n        if (this.state.sideDrawerOpen) {\r\n            backdrop = <BackDrop click={this.backdropClickHandler} />;\r\n        }\r\n\r\n        return (\r\n            <div style={styles.body}>\r\n                {/* <AdminLayout> */}\r\n                <Dashboard token={this.state.jwt_token} show={this.state.showWrapper} drawerClickHandler={this.drawerToggleClickHandler}\r\n                    wrapperBtnClickHandler={this.ShowWrapperClickHandler} logoutClickHandler={this.logout} />\r\n\r\n                <DashboardSideDrawer token={this.state.jwt_token} show={this.state.sideDrawerOpen}\r\n                    click={this.backdropClickHandler} logoutClickHandler={this.logout} />\r\n                {backdrop}\r\n                {/* </AdminLayout> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    body: {\r\n        background: `${GlobalStyleSheet.body_color}`,\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        right: '0',\r\n        minHeight: '100vh',\r\n    },\r\n}\r\n\r\nexport default Vendor;","export const generalOptions = [\r\n    { value: 'Color', label: 'Color' },\r\n    { value: 'Size', label: 'Size' },\r\n    { value: 'Width', label: 'Width' },\r\n    { value: 'Length', label: 'Length' },\r\n    { value: 'Quality', label: 'Quality' },\r\n    { value: 'Camera', label: 'Camera' },\r\n];\r\n\r\nexport const laptop = [\r\n    { value: 'USB Type/ Post', label: 'USB Type/ Post' },\r\n    { value: 'Screen Resolution', label: 'Screen Resolution' },\r\n    { value: 'Displays Type', label: 'Displays Type' },\r\n    { value: 'Processor', label: 'Processor' },\r\n    { value: 'RAM', label: 'RAM' },\r\n    { value: 'ROM', label: 'ROM' },\r\n    { value: 'SSD', label: 'SSD' },\r\n    { value: 'Graphic Card', label: 'RAM' },\r\n    { value: 'Operating System', label: 'Operating System' },\r\n];\r\n\r\nexport const stateOptions = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'DC', label: 'District Of Columbia' },\r\n    { value: 'FM', label: 'Federated States Of Micronesia' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'HI', label: 'Hawaii' },\r\n    { value: 'ID', label: 'Idaho' },\r\n    { value: 'IL', label: 'Illinois' },\r\n    { value: 'IN', label: 'Indiana' },\r\n    { value: 'IA', label: 'Iowa' },\r\n    { value: 'KS', label: 'Kansas' },\r\n    { value: 'KY', label: 'Kentucky' },\r\n    { value: 'LA', label: 'Louisiana' },\r\n    { value: 'ME', label: 'Maine' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MD', label: 'Maryland' },\r\n    { value: 'MA', label: 'Massachusetts' },\r\n    { value: 'MI', label: 'Michigan' },\r\n    { value: 'MN', label: 'Minnesota' },\r\n    { value: 'MS', label: 'Mississippi' },\r\n    { value: 'MO', label: 'Missouri' },\r\n    { value: 'MT', label: 'Montana' },\r\n    { value: 'NE', label: 'Nebraska' },\r\n    { value: 'NV', label: 'Nevada' },\r\n    { value: 'NH', label: 'New Hampshire' },\r\n    { value: 'NJ', label: 'New Jersey' },\r\n    { value: 'NM', label: 'New Mexico' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'NC', label: 'North Carolina' },\r\n    { value: 'ND', label: 'North Dakota' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'OH', label: 'Ohio' },\r\n    { value: 'OK', label: 'Oklahoma' },\r\n    { value: 'OR', label: 'Oregon' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PA', label: 'Pennsylvania' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'RI', label: 'Rhode Island' },\r\n    { value: 'SC', label: 'South Carolina' },\r\n    { value: 'SD', label: 'South Dakota' },\r\n    { value: 'TN', label: 'Tennessee' },\r\n    { value: 'TX', label: 'Texas' },\r\n    { value: 'UT', label: 'Utah' },\r\n    { value: 'VT', label: 'Vermont' },\r\n    { value: 'VI', label: 'Virgin Islands' },\r\n    { value: 'VA', label: 'Virginia' },\r\n    { value: 'WA', label: 'Washington' },\r\n    { value: 'WV', label: 'West Virginia' },\r\n    { value: 'WI', label: 'Wisconsin' },\r\n    { value: 'WY', label: 'Wyoming' },\r\n];\r\n\r\nexport const groupedOptions = [\r\n    {\r\n        label: 'General',\r\n        options: generalOptions,\r\n    },\r\n    {\r\n        label: 'Laptop',\r\n        options: laptop,\r\n    },\r\n    ,\r\n    {\r\n        label: 'States',\r\n        options: stateOptions,\r\n    },\r\n];","// Option List for select Product Color\r\nconst product_color_options = [\r\n    // A\r\n    { value: 'Apricot', label: 'Apricot' },\r\n    { value: 'Aquamarine', label: 'Aquamarine' },\r\n    // B\r\n    { value: 'Black', label: 'Black' },\r\n    { value: 'Blue', label: 'Blue' },\r\n    { value: 'Bronze', label: 'Bronze' },\r\n    { value: 'Baby-Blue', label: 'Baby-Blue' },\r\n    { value: 'Blue-Green', label: 'Blue-Green' },\r\n    { value: 'Blue-Violet', label: 'Blue-Violet' },\r\n    // C\r\n    { value: 'Chocolate', label: 'Chocolate' },\r\n    { value: 'Coffee', label: 'Coffee' },\r\n    { value: 'Cyan', label: 'Cyan' },\r\n    // D\r\n    { value: 'Desert-Sand', label: 'Desert-Sand' },\r\n    // G\r\n    { value: 'Gray', label: 'Gray' },\r\n    { value: 'Green', label: 'Green' },\r\n    // I\r\n    { value: 'Indigo', label: 'Indigo' },\r\n    // L\r\n    { value: 'Lime', label: 'Lime' },\r\n    // M\r\n    { value: 'Magenta', label: 'Magenta' },\r\n    { value: 'Maroon', label: 'Maroon' },\r\n    // N\r\n    { value: 'Navy', label: 'Navy' },\r\n    { value: 'Navy-Blue', label: 'Navy-Blue' },\r\n    // O\r\n    { value: 'Orange', label: 'Orange' },\r\n    { value: 'Olive', label: 'Olive' },\r\n    // P\r\n    { value: 'Pink', label: 'Pink' },\r\n    { value: 'Peach', label: 'Peach' },\r\n    { value: 'Purple', label: 'Purple' },\r\n    // R\r\n    { value: 'Red', label: 'Chocolate' },\r\n    { value: 'Rose', label: 'Rose' },\r\n    { value: 'Red-Violet', label: 'Red-Violet' },\r\n    // S\r\n    { value: 'Silver', label: 'Silver' },\r\n    { value: 'Sky-Blue', label: 'Sky-Blue' },\r\n    // T\r\n    { value: 'Tan', label: 'Tan' },\r\n    { value: 'Teal', label: 'Teal' },\r\n    { value: 'Turquoise', label: 'Turquoise' },\r\n    // V\r\n    { value: 'Violet', label: 'Violet' },\r\n    // W\r\n    { value: 'White', label: 'White' },\r\n    // Y\r\n    { value: 'Yellow', label: 'Yellow' },\r\n]\r\n\r\nexport default product_color_options;","// Option List for select Product Size\r\nconst product_size_options = [\r\n    { value: 'X-S', label: 'X-Small' },\r\n    { value: 'S', label: 'Small' },\r\n    { value: 'M', label: 'Medium' },\r\n    { value: 'L', label: 'Large' },\r\n    { value: 'X-L', label: 'X-Large' },\r\n    { value: '10', label: '10' },\r\n    { value: '11', label: '11' },\r\n    { value: '12', label: '12' },\r\n    { value: '13', label: '13' },\r\n    { value: '14', label: '14' },\r\n    { value: '15', label: '15' },\r\n    { value: '16', label: '16' },\r\n    { value: '17', label: '17' },\r\n    { value: '18', label: '18' },\r\n    { value: '19', label: '19' },\r\n    { value: '20', label: '20' },\r\n    { value: '21', label: '20' },\r\n    { value: '22', label: '20' },\r\n    { value: '23', label: '20' },\r\n    { value: '24', label: '20' },\r\n    { value: '25', label: '20' },\r\n    { value: '26', label: '20' },\r\n    { value: '27', label: '20' },\r\n    { value: '28', label: '20' },\r\n    { value: '29', label: '20' },\r\n    { value: '30', label: '30' },\r\n    { value: '31', label: '31' },\r\n    { value: '32', label: '32' },\r\n    { value: '33', label: '33' },\r\n    { value: '34', label: '34' },\r\n    { value: '35', label: '35' },\r\n    { value: '36', label: '36' },\r\n    { value: '37', label: '37' },\r\n    { value: '38', label: '38' },\r\n    { value: '49', label: '49' },\r\n    { value: '40', label: '40' },\r\n    { value: '41', label: '41' },\r\n    { value: '42', label: '42' },\r\n    { value: '43', label: '43' },\r\n    { value: '44', label: '44' },\r\n    { value: '45', label: '45' },\r\n    { value: '46', label: '46' },\r\n    { value: '47', label: '47' },\r\n    { value: '48', label: '48' },\r\n    { value: '49', label: '49' },\r\n    { value: '50', label: '50' },\r\n    { value: '51', label: '51' },\r\n    { value: '52', label: '52' },\r\n    { value: '53', label: '53' },\r\n    { value: '54', label: '54' },\r\n    { value: '55', label: '55' },\r\n    { value: '56', label: '56' },\r\n    { value: '57', label: '57' },\r\n    { value: '58', label: '58' },\r\n    { value: '59', label: '59' },\r\n    { value: '60', label: '60' },\r\n    { value: '61', label: '61' },\r\n    { value: '62', label: '62' },\r\n    { value: '63', label: '63' },\r\n    { value: '64', label: '64' },\r\n    { value: '65', label: '65' },\r\n    { value: '66', label: '66' },\r\n    { value: '67', label: '67' },\r\n    { value: '67', label: '68' },\r\n    { value: '69', label: '69' },\r\n    { value: '70', label: '70' },\r\n    { value: '71', label: '71' },\r\n    { value: '72', label: '72' },\r\n    { value: '73', label: '73' },\r\n    { value: '74', label: '74' },\r\n    { value: '75', label: '75' },\r\n    { value: '76', label: '76' },\r\n    { value: '77', label: '77' },\r\n    { value: '78', label: '78' },\r\n    { value: '79', label: '79' },\r\n    { value: '80', label: '80' },\r\n    { value: '81', label: '81' },\r\n    { value: '82', label: '82' },\r\n    { value: '83', label: '83' },\r\n    { value: '84', label: '84' },\r\n    { value: '85', label: '85' },\r\n    { value: '86', label: '86' },\r\n    { value: '87', label: '87' },\r\n    { value: '88', label: '88' },\r\n    { value: '89', label: '89' },\r\n    { value: '90', label: '90' },\r\n    { value: '91', label: '91' },\r\n    { value: '92', label: '92' },\r\n    { value: '93', label: '93' },\r\n    { value: '94', label: '94' },\r\n    { value: '95', label: '95' },\r\n    { value: '96', label: '96' },\r\n    { value: '97', label: '97' },\r\n    { value: '98', label: '98' },\r\n    { value: '99', label: '99' },\r\n    { value: '100', label: '100' },\r\n\r\n]\r\n\r\nexport default product_size_options;\r\n","// export default AuthenticationService;\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n// import { useRouter } from 'next/router'\r\n// import Router from 'next/router'\r\n\r\nimport * as decode from 'jwt-decode'\r\nimport Router from 'next/router'\r\n\r\nconst AuthenticationService = () => (\r\n    <div></div>\r\n)\r\n\r\nexport async function saveTokenToStorage(token) {\r\n    await reactLocalStorage.set('token', token);\r\n}\r\n\r\nexport function getTokenFromStorage() {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        return decodedToken.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getUncodededTokenFromStorage() {\r\n    return reactLocalStorage.get('token');\r\n}\r\n\r\nexport function removeTokenFromStorage() {\r\n    try {\r\n        reactLocalStorage.remove('token');\r\n        Router.replace('/index');\r\n        Router.reload('/index');\r\n    } catch (error) {\r\n        console.log(\"error:\", error)\r\n    }\r\n}\r\n\r\nexport function chectAuth(rolee) {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        if (decodedToken.data.role == 'admin') {\r\n            return decodedToken.data.fullName;\r\n        } else if (decodedToken.data.role !== rolee) {\r\n            Router.replace('/index')\r\n        } else {\r\n            return decodedToken.data.fullName;\r\n        }\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default AuthenticationService;","// export default class MuhalikConfig {\r\nconst path = 'https://muhalikweb.herokuapp.com';\r\n// const path = 'https://muhalik.herokuapp.com';\r\n// const path = 'http://localhost:5000';\r\n\r\n//     static getPath() {\r\n//       return MySouqConfig.path;\r\n//     }\r\n//   }\r\n\r\nconst MuhalikConfig = {\r\n    PATH: path,\r\n}\r\n\r\nexport default MuhalikConfig;","\r\n// export const GlobalStyleSheet = {\r\n//     // primry_color: '#563D7C',\r\n//     primry_color: '#28A745',\r\n//     primary_text_color: 'white',\r\n// }\r\n\r\nlet GlobalStyleSheet = {\r\n    // primry_color: '#563D7C',\r\n    primry_color: '#28A745',\r\n\r\n    admin_primry_color: '#373948',\r\n    primary_text_color: 'white',\r\n\r\n    // Body color\r\n    body_color: '#F1F1F1',\r\n    // body_color: '#DDE1E3',\r\n    // body_color: '#F0F0F0',\r\n\r\n    // Fontsize for all the labels of any form control (input, textbox etc):\r\n    form_label_fontsize: '13px',\r\n}\r\n\r\nexport default GlobalStyleSheet;\r\n\r\n\r\n// \"45: [Product upload page added]\"\r\n// \"46: [Admin/Vendor Dashboard Mobile View Toolbar Error Solved]\"\r\n// \"47: [Product upload connected to backend(produck modal updated)]\"\r\n// \"48: [Admin/Vendor Layout Updated]\"\"\r\n// 49: git commit -m \"49: [jwt_token added and route redirect added]\"\r\n//  50 [header set into post request]git commit -m \"\"\r\n// 51 git commit -m \"51: [routing-guard/toast added & login/signup/v-signup layout updated & index.js updated]\"\r\n// 52 git commit -m \"52: [Index.js updated, signup updated]\"\r\n// 53 git commit -m \"53: [vendor dashboard layout updated]\"\r\n// 54[add product updated(simple & variable product), layout changed]","module.exports = require(\"@fortawesome/free-brands-svg-icons\");","module.exports = require(\"@fortawesome/free-regular-svg-icons\");","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"axios\");","module.exports = require(\"formik\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"prop-types-exact\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-countup\");","module.exports = require(\"react-select\");","module.exports = require(\"react-select-material-ui\");","module.exports = require(\"react-select/creatable\");","module.exports = require(\"reactjs-localstorage\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"url\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChpBA;AACA;AAkBA;AAAA;AACA;AAAA;AACA;AADA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACvrBA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;AAWA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAmBA;AACA;AAAA;;;;;;;;;;;;ACnCA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;;;;;;;ACVA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AAIA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA,iBAKA;AACA;AACA;AACA;AAAA;AACA,iBAIA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;AAGA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAAA,mBAOA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA/eA;AACA;AA+eA;AACA;;;;;;;;;;;;ACljBA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACPA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;ACzBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAAA;;;;;;;;;;;;ACtBA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;ACtGA;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClOA;AACA;AACA,aAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAMA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AAFA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AA+EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxFA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AAMA;AACA;AAEA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAUA;AACA;AApIA;AACA;AAqIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAZA;AAsBA;;;;;;;;;;;;;;;;;;ACpKA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAVA;AAAA;AAqBA;AACA;AA/BA;AACA;AAgCA;AACA;AACA;AACA;AAFA;AADA;AAOA;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAbA;AACA;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AA2BA;AAAA;AAAA;AACA;AACA;AA7BA;AA+BA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AArCA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAvFA;AACA;AAwFA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAxBA;AAiCA;;;;;;;;;;;;;;;;;;;;;;ACjIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAlBA;AA2BA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxcwapBA;AAAA;AAAA;AA0rBA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAxEA;AAkFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxnDA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AAFA;AAIA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AACA;AACA;AAJA;AAMA;AAEA;AAFA;AAjBA;AACA;AAuBA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAIA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAIA;AAIA;AAGA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAxEA;AACA;AA2EA;AACA;AACA;AACA;AAFA;AA8GA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAhHA;AAiHA;AAAA;AAAA;AACA;AACA;AAnHA;AAoHA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AAjIA;AAyIA;AAAA;AAAA;AACA;AACA;AA3IA;AA4IA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA3JA;AA4JA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAjLA;AAgMA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AApMA;AAqMA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAzMA;AA8MA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlNA;AAmNA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA9NA;AAgOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApOA;AAqOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/OA;AAiPA;AAAA;AAAA;AACA;AACA;AAnPA;AAoPA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA9PA;AAgQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxQA;AAyQA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjRA;AAkRA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAxRA;AAyRA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA7RA;AA8RA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAlSA;AAmSA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAxTA;AAyTA;AACA;AACA;AAEA;AACA;AACA;AACA;AAhUA;AA2UA;AAAA;AAAA;AACA;AACA;AA7UA;AA8UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAzWA;AA0WA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA9WA;AA+WA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAnXA;AAyXA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3XA;AA6XA;AACA;AAAA;AACA;AAAA;AAFA;AAIA;AACA;AAlYA;AAmYA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AArYA;AAwYA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AApZA;AAuZA;AAAA;AAAA;AACA;AACA;AAvZA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAzDA;AA2DA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAmBA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAiIA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAgFA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAdA;AAiBA;AACA;AAAA;AACA;AACA;AACA;AAnGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqdA;AAgBA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAzBA;AA2BA;AAEA;AA7BA;AA+BA;AAEA;AAjCA;AAmCA;AAEA;AArCA;AAuCA;AAEA;AAzCA;AA2CA;AAEA;AA7CA;AA+CA;AAEA;AAjDA;AAmDA;AAEA;AArDA;AAuDA;AAEA;AAzDA;AA2DA;AAEA;AA7DA;AA+DA;AAEA;AAjEA;AAmEA;AAEA;AArEA;AAuEA;AAEA;AAzEA;AA2EA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkocA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnYA;AAAA;AAAA;AAAA;;AAAA;AA2aA;AACA;AAx7BA;AACA;AAy7BA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA1EA;AAmFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtqyGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AArCA;AA2CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnqHA;AACA;AA9JA;AACA;AA+JA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AArBA;AA0BA;;;;;;;;;;;;;;;;;;ACtMA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAMA;AACA;AAtCA;AACA;AAuCA;;;;;;;;;;;;;;;;;;AC1CA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACPA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAbA;AAgtMA;AAAA;AAAA;AAgPA;AACA;AAvQA;AACA;AAwQA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAIA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnHA;AA6HA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjZA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAOA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AAGA;AAAA;AA1IA;AAAA;AAAA;;AAAA;AA0MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAzCA;AAmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9RA;AAEA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9LA;AAAA;AAAA;AAAA;;AAAA;AA4QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAhFA;AA0FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AAFA;AAeA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnBA;AAoBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxBA;AA0BA;AAAA;AAAA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AArDA;AACA;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;;;;;;;;;;;;ACzFA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAMA;AACA;AAFA;;;;;;;;;;;;AC7FA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;ACzrGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACxDA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;ACbA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAbA;AAgBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}