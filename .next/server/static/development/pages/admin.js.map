{"version":3,"file":"static\\development\\pages\\admin.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/pages/admin.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/admin-dashboard.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/commision.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/customers.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/discount.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/inventory.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-categories.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-fields.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/product-contents/product-tags.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/reports.js","webpack:///./src/pages/components/admin/dashboard/dashboard-contents/vendors.js","webpack:///./src/pages/components/admin/dashboard/dashboard-side-drawer.js","webpack:///./src/pages/components/admin/dashboard/dashboard.js","webpack:///./src/pages/components/admin/footer/admin-footer.js","webpack:///./src/pages/components/admin/layout/AdminLayout.js","webpack:///./src/pages/components/admin/toolbar/admin-toolbar.js","webpack:///./src/pages/components/alert-modal.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/add-new-field-name-model.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/custom-fields.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new-contents/product-data.js","webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new.js","webpack:///./src/sdk/consts/fields-data.js","webpack:///./src/sdk/consts/product-color-options.js","webpack:///./src/sdk/consts/product-size-options.js","webpack:///./src/sdk/core/authentication-service.js","webpack:///./src/sdk/muhalik.config.js","webpack:///./src/styleSheet.js","webpack:///external \"@fortawesome/free-brands-svg-icons\"","webpack:///external \"@fortawesome/free-regular-svg-icons\"","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"axios\"","webpack:///external \"formik\"","webpack:///external \"isomorphic-unfetch\"","webpack:///external \"jwt-decode\"","webpack:///external \"next/head\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-bootstrap\"","webpack:///external \"react-select\"","webpack:///external \"react-select-material-ui\"","webpack:///external \"react-select/creatable\"","webpack:///external \"reactjs-localstorage\"","webpack:///external \"styled-jsx/style\"","webpack:///external \"yup\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","import React, { Component } from 'react';\r\nimport Router from 'next/router'\r\nimport Dashboard from './components/admin/dashboard/dashboard';\r\nimport DashboardSideDrawer from './components/admin/dashboard/dashboard-side-drawer';\r\nimport AdminLayout from './components/admin/layout/AdminLayout';\r\nimport GlobalStyleSheet from '../styleSheet';\r\nimport { chectAuth, removeTokenFromStorage } from '../sdk/core/authentication-service';\r\n\r\nconst BackDrop = props => (\r\n    <div>\r\n        <div onClick={props.click}>\r\n        </div>\r\n        <style jsx>{`\r\n             position: fixed;\r\n             width: 100%;\r\n             height: 100%;\r\n             top: 0;\r\n             left: 0;\r\n             background: rgba(0, 0, 0, 0.3);\r\n             z-index: 100;\r\n        `}</style>\r\n    </div>\r\n)\r\n\r\nclass Admin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.authUser()\r\n        this.state = {\r\n            sideDrawerOpen: false,\r\n            showWrapper: true,\r\n            jwt_token: '',\r\n        }\r\n    }\r\n\r\n    async authUser() {\r\n        this.setState({ jwt_token: await chectAuth('admin') });\r\n    }\r\n\r\n    drawerToggleClickHandler = () => {\r\n        this.setState(prevState => {\r\n            return { sideDrawerOpen: !prevState.sideDrawerOpen };\r\n        });\r\n    };\r\n    ShowWrapperClickHandler = () => {\r\n        this.setState(prevState => {\r\n            return { showWrapper: !prevState.showWrapper };\r\n        });\r\n    };\r\n\r\n    backdropClickHandler = () => {\r\n        this.setState({ sideDrawerOpen: false });\r\n    };\r\n\r\n    logout() {\r\n        removeTokenFromStorage();\r\n    }\r\n\r\n    render() {\r\n        let backdrop;\r\n        if (this.state.sideDrawerOpen) {\r\n            backdrop = <BackDrop click={this.backdropClickHandler} />;\r\n        }\r\n\r\n        return (\r\n            <div style={styles.body}>\r\n                {/* <AdminLayout> */}\r\n                <Dashboard token={this.state.jwt_token} show={this.state.showWrapper} drawerClickHandler={this.drawerToggleClickHandler}\r\n                    ClickHandler={this.ShowWrapperClickHandler} logoutClickHandler={this.logout} />\r\n                <DashboardSideDrawer token={this.state.jwt_token} show={this.state.sideDrawerOpen}\r\n                    click={this.backdropClickHandler} logoutClickHandler={this.logout} />\r\n                {backdrop}\r\n                {/* </AdminLayout> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    body: {\r\n        background: `${GlobalStyleSheet.body_color}`,\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        right: '0',\r\n        minHeight: '100vh',\r\n    },\r\n}\r\n\r\nexport default Admin;","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport { Row, Col, Card, InputGroup, Button } from 'react-bootstrap'\r\n// american-sign-language-interpreting\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass AdminDashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row style={styles.row}>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Vendoors</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Customers</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUserPlus} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}> Product Sold </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faThumbsUp} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card}>\r\n                                <Card.Header style={styles.card_header}> Oredrs </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                5678\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n\r\n\r\n                <Row style={styles.row}>\r\n                    <Col lg={6} md={6} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Vendors</Card.Header>\r\n                                <Card.Body>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={6} md={6} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Customers</Card.Header>\r\n                                <Card.Body>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <style jsx>\r\n                    {`\r\n                        .hover {\r\n                            margin: 5px 15px\r\n                        }\r\n                        .hover:hover {\r\n                            margin: 0px 10px;\r\n                            cursor: pointer\r\n                        }\r\n                    `}\r\n                </style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0px'\r\n    },\r\n    col: {\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    card: {\r\n        background: 'white',\r\n        borderRadius: '0px',\r\n        padding: '0px'\r\n    },\r\n    card_header: {\r\n        background: 'white',\r\n        color: 'gray',\r\n        border: 'none'\r\n    },\r\n    card_text: {\r\n        color: '#6A7074',\r\n        fontSize: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primry_color}`,\r\n        width: '50px',\r\n        height: '50px',\r\n        maxHeight: '50px',\r\n        maxWidth: '50px',\r\n        float: 'right'\r\n    },\r\n}\r\n\r\nexport default AdminDashboard;","\r\nconst Commision = () => {\r\n    return (\r\n        <div>\r\n            <p>This is Commision page</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Commision;","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport { Row, Col, Card, InputGroup, Button } from 'react-bootstrap'\r\n// american-sign-language-interpreting\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass Customers extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row style={styles.row}>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Customers</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>New Customers</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUserPlus} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}> Top Customers </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faThumbsUp} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12}  style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card}>\r\n                                <Card.Header style={styles.card_header}> Header </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <style jsx>\r\n                    {`\r\n                        .hover {\r\n                            margin: 5px 15px\r\n                        }\r\n                        .hover:hover {\r\n                            margin: 0px 10px;\r\n                            cursor: pointer\r\n                        }\r\n                    `}\r\n                </style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n         padding: '0px'\r\n    },\r\n    col: {\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    card: {\r\n        background: 'white',\r\n        borderRadius: '0px',\r\n        padding: '0px'\r\n    },\r\n    card_header: {\r\n        background: 'white',\r\n        color: 'gray',\r\n        border: 'none'\r\n    },\r\n    card_text: {\r\n        color: '#6A7074',\r\n        fontSize: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primry_color}`,\r\n        width: '50px',\r\n        height: '50px',\r\n        maxHeight: '50px',\r\n        maxWidth: '50px',\r\n        float: 'right'\r\n    },\r\n}\r\n\r\nexport default Customers;","import React, { Component } from 'react';\r\nclass Discount extends Component {\r\n  state = {  }\r\n  render() { \r\n    return ( <p>cvbnm</p> );\r\n  }\r\n}\r\n \r\nexport default Discount;","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport { Row, Col, Card, InputGroup, Button } from 'react-bootstrap'\r\n// american-sign-language-interpreting\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass Inventory extends React.Component {\r\n    // static async getInitialProps(ctx) {\r\n    //     const res = await fetch('https://api.github.com/repos/zeit/next.js')\r\n    //     const json = await res.json()\r\n    //     return { stars: 10 }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row style={styles.row}>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Product In Stock</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Product Sold</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUserPlus} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}> Product Categories </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faThumbsUp} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12}  style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card}>\r\n                                <Card.Header style={styles.card_header}> Header </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <style jsx>\r\n                    {`\r\n                        .hover {\r\n                            margin: 5px 15px\r\n                        }\r\n                        .hover:hover {\r\n                            margin: 0px 10px;\r\n                            cursor: pointer\r\n                        }\r\n                    `}\r\n                </style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n         padding: '0px'\r\n    },\r\n    col: {\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    card: {\r\n        background: 'white',\r\n        borderRadius: '0px',\r\n        padding: '0px'\r\n    },\r\n    card_header: {\r\n        background: 'white',\r\n        color: 'gray',\r\n        border: 'none'\r\n    },\r\n    card_text: {\r\n        color: '#6A7074',\r\n        fontSize: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primry_color}`,\r\n        width: '50px',\r\n        height: '50px',\r\n        maxHeight: '50px',\r\n        maxWidth: '50px',\r\n        float: 'right'\r\n    },\r\n}\r\n\r\nexport default Inventory;","import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nclass ProducCategories extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            categoryValue: '',\r\n            error: '',\r\n            categoryList: [],\r\n            categoryRequestList: [],\r\n\r\n            editRequestedCategory: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ categoryList: copyArray });\r\n            this.setState({ categoryRequestList: this.state.categoryList });\r\n        } catch (error) {\r\n            console.log('feror:', error);\r\n        }\r\n    }\r\n\r\n    async addCategory() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.categoryValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showModalMessage: 'Product Category Added Successfully' })\r\n        this.setState({ showModal: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (categoryValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addCategory(this);\r\n        }\r\n    }\r\n\r\n\r\n    // Category Request \r\n    // => Field Value \r\n    handleCategoryRequestChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        if (copyArray[index].error == '') {\r\n            copyArray[index].label = true;\r\n            this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryRequestList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleCategoryChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray[index].label = true;\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Updated Successfully', showModal: true });\r\n    }\r\n    //  => Delete\r\n    handleDeleteCategoryClick(index) {\r\n        const copyArray = Object.assign([], this.state.categoryList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ categoryList: copyArray, showModalMessage: 'Product Category Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Categories </div>\r\n                </Row>\r\n\r\n\r\n                {/* Add New Category */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add New Category </Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Category Value\"\r\n                                                name=\"sku\"\r\n                                                value={this.state.categoryValue}\r\n                                                onChange={(e) => this.setState({ categoryValue: e.target.value })}\r\n                                                isInvalid={this.state.error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {this.state.error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Add Category'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n                {/* Add Category Requests */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Category Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.categoryRequestList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Category Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleCategoryRequestChange(e, index)}\r\n                                                        isInvalid={data.error}\r\n                                                        disabled={data.label}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {data.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => data.label ? this.handleEditCategoryRequestClick(index) : this.handleUpdateCategoryRequestClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.label ? this.handleAddCategoryRequestClick(index) : this.handleCancelCategoryRequestClick(index) }}>\r\n                                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => this.handleDeleteCategoryRequestClick(index)}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n                {/* All Categories */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>All Categories</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.categoryList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Category Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleCategoryChange(e, index)}\r\n                                                        disabled={data.label}\r\n                                                        isInvalid={data.error}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={data.label ? () => this.handleEditCategoryClick(index) : () => this.handleUpdateCategoryClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.laebl ? this.handleDeleteCategoryClick(index) : this.handleCancelCategoryClick(index) }}>\r\n                                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducCategories\r\n","import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nclass ProducFields extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            fieldValue: '',\r\n            error: '',\r\n            fieldList: [],\r\n            fieldRequestList: [],\r\n\r\n            editRequestedField: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    // Getting Product Fields from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ fieldList: copyArray });\r\n            this.setState({ fieldRequestList: this.state.fieldList });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async addField() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.fieldValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showModalMessage: 'Product Field Added Successfully' })\r\n        this.setState({ showModal: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (fieldValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addField(this);\r\n        }\r\n    }\r\n\r\n\r\n    // Field Request \r\n    // => Field Value \r\n    handleFieldRequestChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditFieldRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ fieldRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateFieldRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        if (copyArray[index].error == '') {\r\n            copyArray[index].label = true;\r\n            this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddFieldRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldRequestList: copyArray, showModalMessage: 'Product Field Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleFieldChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditFieldClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelFieldClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ fieldList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateFieldClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray[index].label = true;\r\n        this.setState({ fieldList: copyArray, showModalMessage: 'Product Field Updated Successfully', showModal: true });\r\n    }\r\n    //  => Delete\r\n    handleDeleteFieldClick(index) {\r\n        const copyArray = Object.assign([], this.state.fieldList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ fieldList: copyArray, showModalMessage: 'Product Field Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n\r\n\r\n                {/* Add New Fields */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add New Field </Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Field Value\"\r\n                                                name=\"sku\"\r\n                                                value={this.state.fieldValue}\r\n                                                onChange={(e) => this.setState({ fieldValue: e.target.value })}\r\n                                                isInvalid={this.state.error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {this.state.error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Add Field'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n                {/* Add Field Request */}\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Fields </div>\r\n                </Row>\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Field Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.fieldRequestList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Field Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleFieldRequestChange(e, index)}\r\n                                                        isInvalid={data.error}\r\n                                                        disabled={data.label}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {data.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => data.label ? this.handleEditFieldRequestClick(index) : this.handleUpdateFieldRequestClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.label ? this.handleAddFieldRequestClick(index) : this.handleCancelFieldRequestClick(index) }}>\r\n                                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => this.handleDeleteFieldRequestClick(index)}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* All Fields */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>All Fields</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.fieldList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Field Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleFieldChange(e, index)}\r\n                                                        disabled={data.label}\r\n                                                        isInvalid={data.error}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={data.label ? () => this.handleEditFieldClick(index) : () => this.handleUpdateFieldClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.laebl ? this.handleDeleteFieldClick(index) : this.handleCancelFieldClick(index) }}>\r\n                                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducFields\r\n","import { Form, Row, Accordion, Col, Card, InputGroup, Button, Spinner } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus, faListAlt, faSlidersH } from '@fortawesome/free-solid-svg-icons'\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons'\r\nimport React, { Component } from 'react';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config'\r\nimport GlobalStyleSheet from '../../../../.././../styleSheet'\r\nimport axios from 'axios';\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nclass ProducTags extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            tagValue: '',\r\n            error: '',\r\n            tagList: [],\r\n            tagRequestList: [],\r\n\r\n            editRequestedTag: '',\r\n            showModalMessage: '',\r\n            showModal: false,\r\n        }\r\n    }\r\n\r\n    // Getting Product Tags from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            let copyArray = response.data.data;\r\n            copyArray.forEach((data, index) => {\r\n                data.label = true;\r\n            })\r\n            this.setState({ tagList: copyArray });\r\n            this.setState({ tagRequestList: this.state.tagList });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async addTag() {\r\n        // const url = MuhalikConfig.PATH + '/api/products/add';\r\n        // await axios.post(url, {\r\n        // this.state.tagValue\r\n        // }, {\r\n        //     headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        // }).then(function (response) {\r\n        this.setState({ isLoading: true })\r\n        this.setState({ showModalMessage: 'Product Tag Added Successfully' })\r\n        this.setState({ showModal: true })\r\n        return true;\r\n        // }).catch(function (error) {\r\n        //     currentComponent.setState({ isLoading: false });\r\n        //     alert('Error: ', error.response.data.message);\r\n        //     return false;\r\n        // });\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (tagValue == '') {\r\n            this.setState({ error: 'Enter Value First' })\r\n        } else {\r\n            this.setState({ isLoading: true })\r\n            this.setState({ error: '' })\r\n            this.addTag(this);\r\n        }\r\n    }\r\n\r\n\r\n    // Tag Request \r\n    // => Field Value \r\n    handleTagRequestChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Edit\r\n    async handleEditTagRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagRequestList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ tagRequestList: copyArray })\r\n    }\r\n    // Update\r\n    handleUpdateTagRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        if (copyArray[index].error == '') {\r\n            copyArray[index].label = true;\r\n            this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n        }\r\n    }\r\n    //  => Add\r\n    handleAddTagRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Added Successfully', showModal: true })\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagRequestClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagRequestList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagRequestList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // All categories\r\n    //  => Chane\r\n    handleTagChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = e.target.value;\r\n\r\n        if (e.target.value != '' && e.target.value.length <= 20 && e.target.value.length >= 3) {\r\n            copyArray[index].error = ''\r\n        } else {\r\n            copyArray[index].error = 'Value must be 3-20 characters'\r\n        }\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n\r\n    //  => Edit\r\n    async handleEditTagClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagList);\r\n        var obj = {};\r\n        obj['value'] = copyArray[index].value;\r\n        obj['label'] = false;\r\n        obj['prevVal'] = copyArray[index].value;\r\n        obj['error'] = '';\r\n        copyArray[index] = obj\r\n        await this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Cancle\r\n    handleCancelTagClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].value = copyArray[index].prevVal;\r\n        copyArray[index].label = true;\r\n        this.setState({ tagList: copyArray })\r\n    }\r\n    //  => Update\r\n    handleUpdateTagClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagList);\r\n        copyArray[index].label = true;\r\n        this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Updated Successfully', showModal: true });\r\n    }\r\n    //  => Delete\r\n    handleDeleteTagClick(index) {\r\n        const copyArray = Object.assign([], this.state.tagList);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ tagList: copyArray, showModalMessage: 'Product Tag Deleted', showModal: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AlertModal\r\n                    onHide={(e) => this.setState({ showModal: false })}\r\n                    show={this.state.showModal}\r\n                    header={'Success'}\r\n                    message={this.state.showModalMessage}\r\n                    iconName={faThumbsUp}\r\n                    color={\"#00b300\"}\r\n                />\r\n                <Row style={styles.title_row} noGutters>\r\n                    <FontAwesomeIcon icon={faListAlt} style={styles.title_fontawesome} />\r\n                    <div className=\"mr-auto\" style={styles.title}> Product Tags </div>\r\n                </Row>\r\n\r\n                {/* Add New Tag */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add New Tag </Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    <Form.Group>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Tag Value\"\r\n                                                name=\"sku\"\r\n                                                value={this.state.tagValue}\r\n                                                onChange={(e) => this.setState({ tagValue: e.target.value })}\r\n                                                isInvalid={this.state.error}\r\n                                            />\r\n                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                {this.state.error}\r\n                                            </Form.Control.Feedback>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button type=\"submit\" size=\"sm\" onClick={this.handleSubmit.bind(this)} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                            {this.state.isLoading ? 'Uploading' : 'Add Tag'}\r\n                                            {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : null}\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n                {/* Add Tag Requests */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>Add Tag Requests</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.tagRequestList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Tag Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleTagRequestChange(e, index)}\r\n                                                        isInvalid={data.error}\r\n                                                        disabled={data.label}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {data.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => data.label ? this.handleEditTagRequestClick(index) : this.handleUpdateTagRequestClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-primary\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.label ? this.handleAddTagRequestClick(index) : this.handleCancelTagRequestClick(index) }}>\r\n                                                    <div>{data.label ? 'Add' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-danger\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => this.handleDeleteTagRequestClick(index)}>\r\n                                                    <div>Discard</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                {/* All Tags */}\r\n                <Row noGutters>\r\n                    <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                        <Card style={styles.card}>\r\n                            <Card.Header>\r\n                                <Form.Label>All Tags</Form.Label>\r\n                                <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                                </Accordion.Toggle>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Card.Body style={styles.card_body}>\r\n                                    {this.state.tagList.map((data, index) =>\r\n                                        <Form.Row>\r\n                                            <Form.Group as={Col} lg={8} md={8} sm={12} xs={12}>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Tag Value\"\r\n                                                        name=\"sku\"\r\n                                                        value={data.value}\r\n                                                        onChange={(e) => this.handleTagChange(e, index)}\r\n                                                        disabled={data.label}\r\n                                                        isInvalid={data.error}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {this.state.error}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} lg={1} md={1} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant=\"outline-success\" size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={data.label ? () => this.handleEditTagClick(index) : () => this.handleUpdateTagClick(index)} >\r\n                                                    <div>{data.label ? 'Edit' : 'Update'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                            <div className=\"mr-auto\"></div>\r\n                                            <Form.Group as={Col} lg={2} md={2} sm=\"auto\" xs=\"auto\">\r\n                                                <Button type=\"submit\" variant={data.label ? \"outline-danger\" : \"outline-primary\"} size=\"sm\" block style={styles.submit_btn}\r\n                                                    onClick={() => { data.laebl ? this.handleDeleteTagClick(index) : this.handleCancelTagClick(index) }}>\r\n                                                    <div>{data.label ? 'Delete' : 'Cancel'}</div>\r\n                                                </Button>\r\n                                            </Form.Group>\r\n\r\n                                        </Form.Row>\r\n                                    )}\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    card: {\r\n        // width: '100%',\r\n        margin: '2%'\r\n    },\r\n    card_body: {\r\n        // padding: '5%'\r\n    },\r\n    error: {\r\n        width: '100%',\r\n        textAlign: 'center',\r\n        color: '#DC3545',\r\n        fontSize: '14px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default ProducTags\r\n","import { Tabs, Tab } from 'react-bootstrap';\r\n\r\nconst Reports = () => {\r\n    return (\r\n        <div style={{width: '100%', background: 'yellow'}}>\r\n            <Tabs defaultActiveKey=\"daily\" transition={false} id=\"reports_tab\" style={{padding: '0px', margin: '0px', width: '100%'}}>\r\n                <Tab eventKey=\"daily\" title=\"Daily Reports\">\r\n                    <p>Daily Reports</p>\r\n                </Tab>\r\n                <Tab eventKey=\"weekly\" title=\"Weekly Reports\">\r\n                    <p>Weekly Reports</p>\r\n                </Tab>\r\n                <Tab eventKey=\"monthly\" title=\"Monthly Reports\">\r\n                    <p>Monthly Reports</p>\r\n                </Tab>\r\n                <Tab eventKey=\"yearly\" title=\"Yearly Reports\">\r\n                    <p>Yearly Reports</p>\r\n                </Tab>\r\n                <Tab eventKey=\"overall\" title=\"Overall Reports\">\r\n                    <p>Overall Reports</p>\r\n                </Tab>\r\n            </Tabs>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reports;","import React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\n\r\nimport { Row, Col, Card, InputGroup, Button } from 'react-bootstrap'\r\n// american-sign-language-interpreting\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUsers, faUserPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport GlobalStyleSheet from '../../../../../styleSheet'\r\n\r\nclass Vendor extends React.Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Row style={styles.row}>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>Vendors</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}>New Vendors</Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUserPlus} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12} style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card} >\r\n                                <Card.Header style={styles.card_header}> Top Vendors </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                1234\r\n                                        </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faThumbsUp} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                    <Col lg={3} md={3} sm={12} xs={12}  style={styles.col}>\r\n                        <div className=\"hover\">\r\n                            <Card style={styles.card}>\r\n                                <Card.Header style={styles.card_header}> Admin Vendors </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                5678\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Card.Text style={styles.card_text}>\r\n                                                <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                            </Card.Text>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <style jsx>\r\n                    {`\r\n                        .hover {\r\n                            margin: 5px 15px\r\n                        }\r\n                        .hover:hover {\r\n                            margin: 0px 10px;\r\n                            cursor: pointer\r\n                        }\r\n                    `}\r\n                </style>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n         padding: '0px'\r\n    },\r\n    col: {\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    card: {\r\n        background: 'white',\r\n        borderRadius: '0px',\r\n        padding: '0px'\r\n    },\r\n    card_header: {\r\n        background: 'white',\r\n        color: 'gray',\r\n        border: 'none'\r\n    },\r\n    card_text: {\r\n        color: '#6A7074',\r\n        fontSize: '30px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primry_color}`,\r\n        width: '50px',\r\n        height: '50px',\r\n        maxHeight: '50px',\r\n        maxWidth: '50px',\r\n        float: 'right'\r\n    },\r\n}\r\n\r\nexport default Vendor;","import { Nav, Tab, Row, Col, Image } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPersonBooth, faTachometerAlt, faChevronRight, faUsers, faChevronUp, faChevronDown,\r\n    faListAlt, faWarehouse, faTags, faPercent, faChartBar, faPlusCircle\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport AdminDashboard from './dashboard-contents/admin-dashboard';\r\nimport Vendors from './dashboard-contents/vendors';\r\nimport Customers from './dashboard-contents/customers';\r\nimport AddNew from '../../vendor/dashboard/dashboard-contents/product-contents/add-new';\r\n// Products \r\nimport ProducCategories from './dashboard-contents/product-contents/product-categories'\r\nimport ProductTags from './dashboard-contents/product-contents/product-tags'\r\nimport ProductFields from './dashboard-contents/product-contents/product-fields'\r\n// \r\nimport Inventory from './dashboard-contents/inventory';\r\nimport Discounts from './dashboard-contents/discount';\r\nimport Commision from './dashboard-contents/commision';\r\nimport Reports from './dashboard-contents/reports';\r\n\r\nimport GlobalStyleSheet from '../../../../styleSheet';\r\n\r\n\r\nconst DashboardSideDrawer = props => {\r\n    let drawerClasses = \"tabs_side_drawer\";\r\n    if (props.show) {\r\n        drawerClasses = \"tabs_side_drawer open\";\r\n    }\r\n\r\n    const [show_product, setShow_product] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"dashboard-tabs\" defaultActiveKey=\"Dashboard\">\r\n                {/* Side Drawer Components */}\r\n                <div className={drawerClasses}>\r\n                    <Nav className=\"flex-column\" variant=\"pills\">\r\n                        {/* Links */}\r\n                        <Nav.Item style={styles.image_div}>\r\n                            <p>\r\n                                <Image src=\"muhalik.jpg\" roundedCircle thumbnail fluid style={styles.image} />\r\n                                <Nav.Link href=\"/index\" style={styles.muhalik}> {props.token} </Nav.Link>\r\n                            </p>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Dashboard\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faTachometerAlt} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Dashboard</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Vendors\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faPersonBooth} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Vendors</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Customers\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Customers</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link style={styles.nav_link} onClick={() => setShow_product(!show_product)}>\r\n                                    <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\"> Products </div>\r\n                                    <FontAwesomeIcon icon={show_product ? faChevronUp : faChevronDown} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        {show_product ?\r\n                            <div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"AllProducts\" onClick={props.click} style={styles.product_submenu_link} >\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> All Products </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"AddProduct\" onClick={props.click} style={styles.product_submenu_link} >\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faPlusCircle} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Add Product</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"ProducCategories\" onClick={props.click} style={styles.product_submenu_link}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Product Categories </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"ProductTags\" onClick={props.click} style={styles.product_submenu_link}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faTags} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Product Tags </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                                <div className=\"product_submenu\">\r\n                                    <Nav.Link eventKey=\"ProductFields\" onClick={props.click} style={styles.product_submenu_link}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Product Fields </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            : null}\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Inventory\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faWarehouse} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Inventory</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\">\r\n                                <Nav.Link eventKey=\"Discounts\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faTags} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Discounts</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\" >\r\n                                <Nav.Link eventKey=\"Commission\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faPercent} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Commission</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\" >\r\n                                <Nav.Link eventKey=\"Reports\" onClick={props.click} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faChartBar} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Reports</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                        <Nav.Item>\r\n                            <div className=\"nav_link\" >\r\n                                <Nav.Link onClick={props.click, props.logoutClickHandler} style={styles.nav_link}>\r\n                                    <FontAwesomeIcon icon={faChartBar} style={styles.fontawesome} />\r\n                                    <div className=\"mr-auto\">Logout</div>\r\n                                    <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </div>\r\n\r\n                <div className=\"tabs_side_drawer_tab_content\" >\r\n                    <Col sm={\"auto\"} style={{ padding: '0px' }}>\r\n                        <Tab.Content>\r\n                            <Tab.Pane eventKey=\"Dashboard\">\r\n                                <AdminDashboard />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Vendors\">\r\n                                <Vendors />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Customers\">\r\n                                <Customers />\r\n                            </Tab.Pane>\r\n                            {/* Product */}\r\n                            <Tab.Pane eventKey=\"AllProducts\">\r\n                                All Products\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"AddProduct\">\r\n                                <AddNew />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProducCategories\">\r\n                                <ProducCategories />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProductTags\">\r\n                                <ProductTags />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"ProductFields\">\r\n                                <ProductFields />\r\n                            </Tab.Pane>\r\n                            {/*  */}\r\n                            <Tab.Pane eventKey=\"Inventory\">\r\n                                <Inventory />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Discounts\">\r\n                                <Discounts />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Commision\">\r\n                                <Commision />\r\n                            </Tab.Pane>\r\n                            <Tab.Pane eventKey=\"Reports\">\r\n                                <Reports />\r\n                            </Tab.Pane>\r\n                        </Tab.Content>\r\n                    </Col>\r\n                </div>\r\n                {/* End of the Side Drawer Components */}\r\n            </Tab.Container>\r\n            <style jsx>\r\n                {`\r\n                    .nav_link {\r\n                        color: ${GlobalStyleSheet.body_color};\r\n                        border-top: 0.5px solid #434556;\r\n                        border-bottom: 0.5px solid #434556;\r\n                    }\r\n                    .nav_link:hover {\r\n                        background: #30313E;\r\n                    }\r\n                    .tabs_side_drawer {\r\n                        height: 100%;\r\n                        background: ${GlobalStyleSheet.admin_primry_color};\r\n                        box-shadow: 1px 0px 7px rgba(0, 0, 0, 0.5);\r\n                        position: fixed;\r\n                        top: 0;\r\n                        bottom: 1px;\r\n                        left: 0;\r\n                        overflow-y: auto;                        \r\n                        width: 80%;\r\n                        max-width: 400px;\r\n                        z-index: 200;\r\n                        transform: translateX(-150% );\r\n                        transition: transform 0.5s ease-out;\r\n                    }\r\n                    .tabs_side_drawer.open{\r\n                        transform: translateX(0);\r\n                    }\r\n                    .product_submenu {\r\n                        background: ${GlobalStyleSheet.admin_primry_color};\r\n                        border-top: 0.5px solid #434556;\r\n                        border-bottom: 0.5px solid #434556;\r\n                        margin: 0% 5% 0% 10%;\r\n                    }\r\n                    p {\r\n                        text-align: center; \r\n                        margin: 0px;\r\n                        padding: 0px;\r\n                    }\r\n                    label {\r\n                        margin-top: 4%;\r\n                        color: ${GlobalStyleSheet.body_color};\r\n                    }\r\n                    \r\n                    @media (min-width: 992px) {\r\n                        .tabs_side_drawer {\r\n                            display: none;\r\n                        }\r\n                        .tabs_side_drawer_tab_content {\r\n                            display: none;\r\n                        }\r\n                    }\r\n                `}\r\n            </style>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    image_div: {\r\n        background: 'white',\r\n        width: '100%',\r\n        borderRight: '0.5px solid gray',\r\n        padding: '2%'\r\n    },\r\n    image: {\r\n        width: '80px'\r\n    },\r\n    muhalik: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        fontSize: '16px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        background: 'none',\r\n        padding: '0px',\r\n        margin: '0px'\r\n    },\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px'\r\n    },\r\n    product_submenu_link: {\r\n        color: 'white',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '40px'\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        marginRight: '8%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    forword_fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        float: 'right',\r\n        width: '8px',\r\n        height: '8px',\r\n        maxHeight: '8px',\r\n        maxWidth: '8px',\r\n    },\r\n}\r\n\r\nexport default DashboardSideDrawer;","import { Image, Nav, Navbar, Dropdown, ButtonGroup, Form, FormControl, InputGroup, Button, Spinner, Tab, Row, Col, } from \"react-bootstrap\"\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faBars, faPowerOff, faChevronRight, faPlusCircle, faChevronDown, faChevronUp, faTachometerAlt, faPersonBooth, faHandsHelping, faUser, faUsers, faListAlt, faWarehouse, faTags, faPercent, faChartBar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport AdminDashboard from './dashboard-contents/admin-dashboard';\r\nimport Vendors from './dashboard-contents/vendors';\r\nimport Customers from './dashboard-contents/customers';\r\n// Products \r\nimport ProducCategories from './dashboard-contents/product-contents/product-categories'\r\nimport ProductTags from './dashboard-contents/product-contents/product-tags'\r\nimport ProductFields from './dashboard-contents/product-contents/product-fields'\r\n// \r\nimport AddNew from '../../vendor/dashboard/dashboard-contents/product-contents/add-new';\r\nimport Inventory from './dashboard-contents/inventory';\r\nimport Discounts from './dashboard-contents/discount';\r\nimport Commision from './dashboard-contents/commision';\r\nimport Reports from './dashboard-contents/reports';\r\n\r\nimport GlobalStyleSheet from '../../../../styleSheet';\r\nimport { removeTokenFromStorage } from '../../../../sdk/core/authentication-service';\r\n\r\nconst Dashboard = props => {\r\n    let wprapper_Casses = \"wrapper\";\r\n    if (props.show) {\r\n        wprapper_Casses = \"wrapper open\";\r\n    }\r\n\r\n    const [show_product, setShow_product] = React.useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <Tab.Container id=\"dashboard-tabs\" defaultActiveKey=\"Dashboard\"  >\r\n                <Row noGutters>\r\n                    {/* Show/Hide Tabs & Tabs-Content when screen Switches to Large/Medium,Small,Extra-Small Devices*/}\r\n                    <div className={wprapper_Casses} style={styles.wrapper_col}>\r\n                        <Nav className=\"flex-column\" variant=\"pills\" style={{ minWidth: '220px', maxWidth: '220px' }}>\r\n                            <Nav.Item style={styles.image_div}>\r\n                                <p>\r\n                                    <Image src=\"muhalik.jpg\" roundedCircle thumbnail fluid style={styles.image} />\r\n                                    <Nav.Link href=\"/index\" style={styles.muhalik}> {props.token} </Nav.Link>\r\n                                </p>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Dashboard\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faTachometerAlt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Dashboard </div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Vendors\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faPersonBooth} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Vendors</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"two\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faUsers} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Customers</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link style={styles.nav_link} onClick={() => setShow_product(!show_product)}>\r\n                                        <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\"> Products </div>\r\n                                        <FontAwesomeIcon icon={show_product ? faChevronUp : faChevronDown} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            {show_product ?\r\n                                <div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"AllProducts\" style={styles.product_submenu_link} >\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> All Products </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"AddProduct\" style={styles.product_submenu_link} >\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faPlusCircle} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Add Product</div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"ProductCategories\" style={styles.product_submenu_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Product Categories </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"ProductTags\" style={styles.product_submenu_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faTags} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Product Tags </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    <div className=\"product_submenu\">\r\n                                        <Nav.Link eventKey=\"ProductFields\" style={styles.product_submenu_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faProductHunt} style={styles.fontawesome} />\r\n                                            <div className=\"mr-auto\"> Product Fields </div>\r\n                                            <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                                : null\r\n                            }\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Inventory\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faWarehouse} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Inventory</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\">\r\n                                    <Nav.Link eventKey=\"Discounts\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faTags} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Discounts</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\" >\r\n                                    <Nav.Link eventKey=\"Commission\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faPercent} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Commission</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                            <Nav.Item>\r\n                                <div className=\"nav_link\" >\r\n                                    <Nav.Link eventKey=\"Reports\" style={styles.nav_link} onClick={() => setShow_product(false)}>\r\n                                        <FontAwesomeIcon icon={faChartBar} style={styles.fontawesome} />\r\n                                        <div className=\"mr-auto\">Reports</div>\r\n                                        <FontAwesomeIcon icon={faChevronRight} style={styles.forword_fontawesome} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </Nav.Item>\r\n                        </Nav>\r\n                        {/* End Tabs Side Drawer */}\r\n                    </div>\r\n                    {/* Toolbar & Tabs Contents */}\r\n                    <Col>\r\n                        {/* Toolbar */}\r\n                        <Navbar collapseOnSelect expand=\"lg\" style={styles.navbar} variant=\"dark\">\r\n                            {/* Show/Hide bar btn while screen switches to Large to Small,Medium,Extra-Small Devices */}\r\n                            <div className=\"side_tab_toogle_btn mr-auto\" style={styles.toolbar_btn_div}>\r\n                                <Button style={styles.toolbar_btn} onClick={props.drawerClickHandler}>\r\n                                    <FontAwesomeIcon icon={faBars} style={styles.toolbar_fontawesomer} />\r\n                                </Button>\r\n                            </div>\r\n                            {/* Bars Btn to Show/Hide Tabs Sde Drawer in Large Devices */}\r\n                            <div className=\"wrapper_btn\" style={styles.toolbar_btn_div}>\r\n                                <Button style={styles.toolbar_btn} onClick={props.wrapperBtnClickHandler}>\r\n                                    <FontAwesomeIcon icon={faBars} style={styles.toolbar_fontawesomer} />\r\n                                </Button>\r\n                            </div>\r\n                            {/* Search Bar */}\r\n                            <Form inline style={{ width: '85%' }} className=\"mr-auto\">\r\n                                <Form.Control\r\n                                    style={styles.search_bar}\r\n                                    type=\"text\"\r\n                                    size=\"sm\"\r\n                                    placeholder=\"Search here\"\r\n                                    aria-describedby=\"side_drawer_searchbar\"\r\n                                    name=\"side_drawer_searchbar\"\r\n                                />\r\n                                <InputGroup.Prepend>\r\n                                    <Button id=\"side_drawer_searchBtn\" style={styles.toolbar_btn}>\r\n                                        <FontAwesomeIcon icon={faSearch} style={styles.toolbar_fontawesomer} />\r\n                                    </Button>\r\n                                </InputGroup.Prepend>\r\n                            </Form>\r\n                            {/* Account Setting Dropdown */}\r\n                            <div className=\"account_settig_dropdown\">\r\n                                <Dropdown as={ButtonGroup} alignRight>\r\n                                    <Dropdown.Toggle size=\"sm\" split variant=\"light\" id=\"dropdown-split\" style={{ background: 'none', border: 'none' }} />\r\n                                    <Dropdown.Menu>\r\n                                        <Dropdown.Item href=\"#/action-1\">\r\n                                            <FontAwesomeIcon icon={faUser} style={styles.dropDown_fontawesome} />\r\n                                        My Profile\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-2\">\r\n                                            <FontAwesomeIcon icon={faSearch} style={styles.dropDown_fontawesome} />\r\n                                        Feedback\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Item href=\"#/action-3\">\r\n                                            <FontAwesomeIcon icon={faHandsHelping} style={styles.dropDown_fontawesome} />\r\n                                        Help?\r\n                                    </Dropdown.Item>\r\n                                        <Dropdown.Divider />\r\n                                        <Dropdown.Item onClick={props.logoutClickHandler}>\r\n                                            <FontAwesomeIcon icon={faPowerOff} style={styles.dropDown_fontawesome} />\r\n                                        Logout\r\n                                </Dropdown.Item>\r\n                                    </Dropdown.Menu>\r\n                                </Dropdown>\r\n                            </div>\r\n                        </Navbar>\r\n                        {/* End of Toolbar */}\r\n                        {/* Tab Content for Large Devices */}\r\n                        <div className=\"tab_content\">\r\n                            <Tab.Content style={{ height: `calc(100vh - 65px)`, overflowY: 'auto' }}>\r\n                                <Tab.Pane eventKey=\"Dashboard\">\r\n                                    <AdminDashboard />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Vendors\">\r\n                                    <Vendors />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Customers\">\r\n                                    <Customers />\r\n                                </Tab.Pane>\r\n                                {/* Product */}\r\n                                <Tab.Pane eventKey=\"AllProducts\">\r\n                                    All Products\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"AddProduct\">\r\n                                    <AddNew />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"ProductCategories\">\r\n                                    <ProducCategories />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"ProductTags\">\r\n                                    <ProductTags />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"ProductFields\">\r\n                                    <ProductFields />\r\n                                </Tab.Pane>\r\n                                {/*  */}\r\n                                <Tab.Pane eventKey=\"Inventory\">\r\n                                    <Inventory />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Discounts\">\r\n                                    <Discounts />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Commision\">\r\n                                    <Commision />\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"Reports\">\r\n                                    <Reports />\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                        </div>\r\n                        {/* End of Tab Content for Large Devices */}\r\n                    </Col>\r\n                    {/* End of the Toolbar & Tabs Components */}\r\n                </Row>\r\n            </Tab.Container>\r\n            <style jsx>\r\n                {`\r\n                .show_product {\r\n                    display: none;\r\n                }\r\n                .show_product.open {\r\n                    display: flex;\r\n                }\r\n                .wrapper {\r\n                    display: none;\r\n                }\r\n                .wrapper.open{\r\n                    backgroung:  ${GlobalStyleSheet.admin_primry_color};\r\n                    display: block;\r\n                    height: 100vh;\r\n                    overflow-y: auto;\r\n                }\r\n                .nav_link {\r\n                    background: ${GlobalStyleSheet.admin_primry_color};\r\n                    border-top: 0.5px solid #434556;\r\n                    border-bottom: 0.5px solid #434556;\r\n                    margin: 1.5px 0px;\r\n                }\r\n                .nav_link:hover {\r\n                    background: #30313E;\r\n                }\r\n                .product_submenu {\r\n                    background: ${GlobalStyleSheet.admin_primry_color};\r\n                    border-top: 0.5px solid #434556;\r\n                    border-bottom: 0.5px solid #434556;\r\n                    margin: 0% 5% 0% 10%;\r\n                }\r\n                .side_tab_toogle_btn {\r\n                    margin: 0%\r\n                }\r\n                p {\r\n                    text-align: center; \r\n                    margin: 0px;\r\n                }\r\n                @media (max-width: 991px) {\r\n                    .wrapper_btn {\r\n                        display: none\r\n                    }\r\n                    .wrapper {\r\n                      display: none;\r\n                    }\r\n                    .tab_content {\r\n                        display: none;\r\n                    }\r\n                    .account_settig_dropdown {\r\n                        display: none\r\n                    }\r\n                    .wrapper.open {\r\n                        display: none;\r\n                        height: 0vh\r\n                    }\r\n                }\r\n                @media (min-width: 992px) {\r\n                    .side_tab_toogle_btn {\r\n                        display: none;\r\n                    }\r\n                }\r\n            `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    image_div: {\r\n        background: 'white',\r\n        width: '100%',\r\n        borderRight: '0.5px solid gray',\r\n        padding: '2%'\r\n    },\r\n    image: {\r\n        width: '100px'\r\n    },\r\n    muhalik: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        fontSize: '16px',\r\n        border: 'none',\r\n        cursor: 'pointer',\r\n        background: 'none'\r\n    },\r\n    wrapper_col: {\r\n        background: `${GlobalStyleSheet.admin_primry_color}`,\r\n    },\r\n    navbar: {\r\n        borderBottom: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n        background: 'white',\r\n        padding: '1% 1%',\r\n    },\r\n    toolbar_btn_div: {\r\n        marginRight: '1%',\r\n    },\r\n    toolbar_btn: {\r\n        background: `${GlobalStyleSheet.admin_primry_color}`,\r\n        border: 'none',\r\n        width: '31px',\r\n        height: '31px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        padding: '0px',\r\n    },\r\n    toolbar_fontawesomer: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    },\r\n\r\n    search_bar: {\r\n        flex: '1',\r\n    },\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px'\r\n    },\r\n    product_submenu_link: {\r\n        color: 'white',\r\n        fontSize: '11px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '40px'\r\n    },\r\n\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        marginRight: '8%',\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    },\r\n    forword_fontawesome: {\r\n        color: `${GlobalStyleSheet.body_color}`,\r\n        width: '10px',\r\n        height: '10px',\r\n        maxHeight: '10px',\r\n        maxWidth: '10px',\r\n    },\r\n\r\n    dropDown_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        margin: '0px 20px 0px 0px',\r\n        width: '18px',\r\n        height: '18px',\r\n        maxHeight: '18px',\r\n        maxWidth: '18px',\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import GlobalStyleSheet from '../../../../styleSheet';\r\n\r\nconst AdminFooter = () => (\r\n    <div>\r\n        <div className=\"footer\">\r\n            <p className=\"fooeter_text text-center\">\r\n                Copyright@ 2020\r\n                    <span> Muhalik </span>\r\n                - Online Shopping Website\r\n            </p>\r\n        </div>\r\n        <style jsx>{`\r\n            .footer {\r\n                background: ${GlobalStyleSheet.primry_color};\r\n                position: absolute;\r\n                left: 0;\r\n                bottom: 0;\r\n                right: 0;\r\n            }\r\n            .fooeter_text {\r\n                margin: 10px;\r\n                font-size: smaller;\r\n                color: ${GlobalStyleSheet.primary_text_color};\r\n            }\r\n            span {\r\n                font-weight: bold;\r\n            }\r\n        `}</style>\r\n    </div>\r\n)\r\n\r\nexport default AdminFooter;","import Head from 'next/head';\r\nimport AdminToolbar from '../toolbar/admin-toolbar';\r\nimport AdminFooter from '../footer/admin-footer';\r\nconst AdminLayout = (props) => (\r\n    <div>\r\n        <AdminToolbar />\r\n        {props.children}\r\n        <AdminFooter />\r\n    </div>\r\n);\r\n\r\nexport default AdminLayout;\r\n","import { Navbar, Dropdown, ButtonGroup, Button, Form } from 'react-bootstrap';\r\nimport GlobalStyleSheet from '../../../../styleSheet';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSearch, faBars, faChevronRight, faTachometerAlt, faPersonBooth, faUsers, faListAlt, faWarehouse, faTags, faPercent, faChartBar } from '@fortawesome/free-solid-svg-icons';\r\nimport { faProductHunt } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst styles = {\r\n  background: {\r\n      background: `${GlobalStyleSheet.primry_color}`,\r\n  },\r\n  brand: {\r\n      color: `${GlobalStyleSheet.primary_text_color}`,\r\n      fontSize: 'medium',\r\n\r\n  },\r\n  form: {\r\n      border: `2px solid ${GlobalStyleSheet.primry_color}`,\r\n      width: '60%',\r\n      borderRadius: '25px',\r\n      padding: '0px 5px'\r\n  },\r\n  search_btn: {\r\n    background: `${GlobalStyleSheet.admin_primry_color}`,\r\n    border: 'none',\r\n},\r\n  search_fontawesome: {\r\n    color: `${GlobalStyleSheet.body_color}`,\r\n    width: '15px',\r\n    height: '15px',\r\n    maxHeight: '15px',\r\n    maxWidth: '15px',\r\n},\r\n}\r\n\r\nconst AdminToolbar = () => (\r\n  <div>\r\n    <Navbar collapseOnSelect expand=\"lg\" style={styles.background} variant=\"dark\">\r\n      <Navbar.Brand href=\"/\" className=\"mr-auto\" style={styles.brand}>Muhalik</Navbar.Brand>\r\n      {/* <Navbar.Brand href=\"#home\" className=\"mr-auto\" style={styles.brand}>Admin Dashboard</Navbar.Brand> */}\r\n      <Form.Row style={{ margin: '5px' }}>\r\n                                    <Form.Control\r\n                                        style={{ flex: '3' }}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search here\"\r\n                                        aria-describedby=\"searchBtn\"\r\n                                        name=\"searchBtn\"\r\n                                    />\r\n                                    <Button id=\"searchBtn\" style={styles.search_btn}>\r\n                                        <FontAwesomeIcon icon={faSearch} style={styles.search_fontawesome} />\r\n                                    </Button>\r\n                                </Form.Row>\r\n      <Dropdown as={ButtonGroup} alignRight>\r\n        <Dropdown.Toggle size=\"sm\" split variant=\"dark\" id=\"dropdown-split\" style={{background: 'none', border: 'none'}} />\r\n        <Dropdown.Menu>\r\n          <Dropdown.Item href=\"#/action-1\">Acount</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-2\">Feedback</Dropdown.Item>\r\n          <Dropdown.Item href=\"#/action-3\">Help?</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"#/action-3\">Signout</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n\r\n      </Dropdown>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nexport default AdminToolbar;\r\n\r\n{/* 563D7C E35300 */ }\r\n","import { Modal, Form, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nfunction AlertModal(props) {\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"alert-modal\"\r\n            centered\r\n        >\r\n            <div style={{ border: `1px solid ${props.color}`, borderRadius: '5px' }}>\r\n                <Modal.Header closeButton style={{ color: `${props.color}`, borderBottom: `1px solid ${props.color}` }}>\r\n                    <FontAwesomeIcon icon={props.iconName} style={{\r\n                        color: `${props.color}`,\r\n                        marginRight: '10px',\r\n                        width: '35px',\r\n                        height: '35px',\r\n                        maxHeight: '35px',\r\n                        maxWidth: '35px',\r\n                    }} ></FontAwesomeIcon>\r\n                    <Modal.Title id=\"alert-modal\">\r\n                        {props.header}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body >\r\n                    <Form.Label style={{ fontSize: '14px', padding: '0%', margin: '0%' }}>\r\n                        {props.message}\r\n                    </Form.Label>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button size=\"sm\" onClick={props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </div>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AlertModal;","import { Modal, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport React, { Component } from 'react';\r\n\r\nfunction AddNewFieldNameModal(props) {\r\n    const [value, setValue] = React.useState(\"\");\r\n    const [error, setError] = React.useState(\"\");\r\n\r\n    function handleAdd() {\r\n        if (value != \"\") {\r\n            console.log(\"handle Category:\", value)\r\n            return true;\r\n        } else {\r\n            setError('Please Enter Value')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            {...props}\r\n            size=\"md\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Add New Field\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form.Label style={{ fontSize: '14px', textAlign: 'center', width: '100%' }}>\r\n                    Your Request for Adding New Field Name will be send to Admin, Admin will Approve/Discard it.\r\n                </Form.Label>\r\n                <Form.Group>\r\n                    <InputGroup>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            size=\"sm\"\r\n                            placeholder=\"Enter Field Name\"\r\n                            name=\"sku\"\r\n                            value={value}\r\n                            onChange={(e) => setValue(e.target.value)}\r\n                            isInvalid={error}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            {error}\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Form.Group>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button size=\"sm\" className=\"mr-auto\" onClick={handleAdd ? props.onHide : null}>\r\n                    Add\r\n                </Button>\r\n                <Button size=\"sm\" onClick={props.onHide}>Cancel</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default AddNewFieldNameModal;","import React, { Component } from 'react';\r\nimport { Accordion, Form, InputGroup, Col, Button, Row, Card, Modal, Nav } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSlidersH } from '@fortawesome/free-solid-svg-icons';\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model';\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\n\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\n\r\nconst CustomFields = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Form.Label >Custome Fields</Form.Label>\r\n                    <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.accordin_fontawesome} />\r\n                    </Accordion.Toggle>\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body >\r\n                        {props.showCustomFields ? <Form.Label style={styles.label}>\r\n                            Please First Create Variations\r\n                        </Form.Label> :\r\n                            <Form.Row style={{ margin: '0.5% 1%', padding: '1% 2%', background: 'lightGray' }}>\r\n                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                    <Select\r\n                                        options={groupedOptions}\r\n                                        components={{ Group }}\r\n                                        value={props.customFieldNameSelected}\r\n                                        onChange={props.fieldNameHandler}\r\n                                    />\r\n                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                        Add New\r\n                                </Nav.Link>\r\n\r\n                                    <AddNewFieldNameModal\r\n                                        show={modalShow}\r\n                                        onHide={() => setModalShow(false)}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                    <InputGroup>\r\n                                        <Form.Control\r\n                                            type=\"text\"\r\n                                            placeholder=\"Enter Value\"\r\n                                            name=\"sku\"\r\n                                            value={props.value}\r\n                                            onChange={props.fieldValueHandler}\r\n                                        />\r\n                                    </InputGroup>\r\n                                </Form.Group>\r\n                                <Form.Label style={styles.label}>\r\n                                    {/* <span>For Multiple Values add | between values</span> */}\r\n                                    {props.isVariableProduct ?\r\n                                        <span>For Variable Products each Custom Field will be added to all variations</span>\r\n                                        : null\r\n                                    }\r\n                                    <span style={{ color: 'red' }}>\r\n                                        {props.error}</span>\r\n                                </Form.Label>\r\n                                <Button variant=\"outline-primary\" size=\"sm\" block style={{ margin: '2% 0px' }}\r\n                                    onClick={props.addFieldHandler}>Add Field</Button>\r\n                            </Form.Row>\r\n                        }\r\n\r\n\r\n                        {/* Map */}\r\n                        <div style={{ background: 'lightGray', margin: '0.5% 1%' }}>\r\n                            {props.customFieldsArray && props.customFieldsArray.map((data, index) =>\r\n                                <Form.Row style={{ padding: '1% 2%' }} key={index}>\r\n                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                        <Form.Control\r\n                                            as=\"select\"\r\n                                            size=\"sm\"\r\n                                            value={data.name}\r\n                                            onChange={() => data.name}\r\n                                        >\r\n                                            <option>{data.name}</option>\r\n                                        </Form.Control>\r\n                                        {/* <Select\r\n                                            options={groupedOptions}\r\n                                            components={{ Group }}\r\n                                        /> */}\r\n                                    </Form.Group>\r\n                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                        <InputGroup>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                size=\"sm\"\r\n                                                placeholder=\"Enter Value\"\r\n                                                name=\"sku\"\r\n                                                value={data.value}\r\n                                                onChange={() => data.value}\r\n                                            />\r\n                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                onClick={() => props.delete(index)}> delete</Button>\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                </Form.Row>\r\n                            )}\r\n                        </div>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n        </Accordion>\r\n\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%'\r\n    },\r\n    card_header: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    label: {\r\n        fontSize: '13px',\r\n    },\r\n    accordin_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default CustomFields;","\r\nimport product_size_options from '../../../../../../../sdk/consts/product-size-options'\r\nimport product_color_options from '../../../../../../../sdk/consts/product-color-options'\r\n\r\nimport { Form, Col, Row, Card, InputGroup, Button, Toast, Tab, Nav, Tabs, Accordion, Spinner, Dropdown } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faListAlt, faArrowAltCircleDown,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport ReactSelectMaterialUi from \"react-select-material-ui\";\r\nimport GlobalStyleSheet from '../../../../../../../styleSheet';\r\nimport MuhalikConfig from '../../../../../../../sdk/muhalik.config';\r\n\r\nimport Select, { components } from 'react-select';\r\nimport { groupedOptions } from '../../../../../../../sdk/consts/fields-data';\r\nimport AddNewFieldNameModal from './add-new-field-name-model'\r\n\r\nconst groupStyles = {\r\n    border: `1px solid ${GlobalStyleSheet.admin_primry_color}`,\r\n    borderRadius: '5px',\r\n    background: 'white',\r\n    color: `${GlobalStyleSheet.admin_primry_color}`,\r\n};\r\nconst coomponents = {\r\n    DropdownIndicator: null,\r\n};\r\nconst Group = props => (\r\n    <div style={groupStyles}>\r\n        <components.Group {...props} />\r\n    </div>\r\n);\r\n\r\nconst ProductData = props => {\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    let variations = true;\r\n    if (props.attributesArray == '') {\r\n        variations = false;\r\n    } else {\r\n        variations = true;\r\n    }\r\n\r\n    return (\r\n        <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n\r\n            <Card style={styles.card}>\r\n                <Card.Header style={styles.card_header}>\r\n                    <Row noGutters style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Col lg={3} md={3} sm={3} xs={4}>\r\n                            Product Data\r\n                        </Col>\r\n                        <Col lg={3} md={3} sm={5} xs={8}>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                name=\"product_type\"\r\n                                size=\"sm\"\r\n                                value={props.product_type_values}\r\n                                onChange={(e) => { props.onChange(e); props.productTypeHandler(e) }}\r\n                            >\r\n                                <option value='simple-product'> Simple Product </option>\r\n                                <option value=\"variable-prouct\"> Variable Product </option>\r\n                            </Form.Control>\r\n                        </Col>\r\n                        <div className=\"mr-auto\"></div>\r\n                        <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                        </Accordion.Toggle>\r\n                    </Row>\r\n\r\n                </Card.Header>\r\n                <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body style={{ padding: '0.5%', margin: '0px' }}>\r\n                        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Inventory\">\r\n                            <Row style={{ margin: '0px' }} noGutters>\r\n                                <Col lg=\"auto\" md=\"auto\" sm=\"auto\" xs=\"auto\" style={{ background: `${GlobalStyleSheet.admin_primry_color}` }}>\r\n                                    <Nav variant=\"pills\" className=\"flex-column\" style={{ margin: '0px' }}>\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Inventory\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faStoreAlt} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Inventory </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n\r\n                                        {!props.isVariableProduct ?\r\n                                            <Nav.Item>\r\n                                                <div className=\"nav_link\">\r\n                                                    <Nav.Link eventKey=\"General\" style={styles.nav_link}>\r\n                                                        <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.product_fontawesome} />\r\n                                                        <div className=\"linkName\"> General </div>\r\n                                                    </Nav.Link>\r\n                                                </div>\r\n                                            </Nav.Item>\r\n                                            :\r\n                                            <>\r\n                                                <Nav.Item>\r\n                                                    <div className=\"nav_link\">\r\n                                                        <Nav.Link eventKey=\"Attributes\" style={styles.nav_link}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n                                                            <div className=\"linkName\"> Attributes </div>\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Nav.Item>\r\n                                                <Nav.Item>\r\n                                                    <div className=\"nav_link\">\r\n                                                        <Nav.Link eventKey=\"Variations\" style={styles.nav_link}>\r\n                                                            <FontAwesomeIcon size=\"xs\" icon={faListAlt} style={styles.product_fontawesome} />\r\n                                                            <div className=\"linkName\"> Variations </div>\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Nav.Item>\r\n                                            </>\r\n                                        }\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Shipping\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faTruck} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Shipping </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n\r\n                                        <Nav.Item>\r\n                                            <div className=\"nav_link\">\r\n                                                <Nav.Link eventKey=\"Advanced\" style={styles.nav_link}>\r\n                                                    <FontAwesomeIcon size=\"xs\" icon={faTools} style={styles.product_fontawesome} />\r\n                                                    <div className=\"linkName\"> Advanced </div>\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </Nav.Item>\r\n                                        {/* <Nav.Item>\r\n                                    <div className=\"nav_link\">\r\n                                        <Nav.Link eventKey=\"Commission\" style={styles.nav_link}>\r\n                                            <FontAwesomeIcon size=\"xs\" icon={faDollarSign} style={styles.product_fontawesome} />\r\n                                            <div> Commission </div>\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </Nav.Item> */}\r\n                                    </Nav>\r\n                                </Col>\r\n                                <Col style={{ padding: '2%' }}>\r\n                                    <Tab.Content>\r\n                                        <Tab.Pane eventKey=\"General\">\r\n\r\n                                            {props.isVariableProduct ? null :\r\n                                                <>\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Price <span> * </span></Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Product Price\"\r\n                                                                    name=\"product_price\"\r\n                                                                    value={props.product_price_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_price_touched && props.product_price_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_price_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n                                                            <Form.Control type=\"number\"\r\n                                                                size=\"sm\"\r\n                                                                name=\"product_in_stock\"\r\n                                                                value={props.product_in_stock_values}\r\n                                                                onChange={props.onChange}\r\n                                                                isInvalid={props.product_in_stock_touched && props.product_in_stock_errors}\r\n                                                            />\r\n                                                            <Form.Control.Feedback type=\"invalid\">\r\n                                                                {props.product_in_stock_errors}\r\n                                                            </Form.Control.Feedback>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Brand Name</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Brand Name\"\r\n                                                                    name=\"product_brand_name\"\r\n                                                                    value={props.product_brand_name_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_brand_name_touched && props.product_brand_name_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_brand_name_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={12} md={12} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Image Link <span> * </span></Form.Label>\r\n                                                            {/* <CreatableSelect\r\n                                                                isMulti\r\n                                                                onChange={props.simpleProductImageLinkHandler}\r\n                                                                value={props.imageLink}\r\n                                                                placeholder=\"Select/Enter Size\"\r\n                                                            /> */}\r\n                                                            <CreatableSelect\r\n                                                                components={coomponents}\r\n                                                                inputValue={props.inputValue}\r\n                                                                isClearable\r\n                                                                isMulti\r\n                                                                menuIsOpen={false}\r\n                                                                onChange={props.simpleProductImageLinkHandler}\r\n                                                                onInputChange={props.simpleProductImageLinkInputChangeHandler}\r\n                                                                onKeyDown={props.simpleProductImageLinkhandleKeyDownHandler}\r\n                                                                placeholder=\"Type something and press enter...\"\r\n                                                                value={props.imageLink}\r\n                                                            />\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    {/*<Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Color</Form.Label>\r\n                                                    <CreatableSelect\r\n                                                        onChange={props.productColorChangeHandler}\r\n                                                        options={product_color_options}\r\n                                                        value={props.color}\r\n                                                        placeholder=\"Select/Enter Color\"\r\n                                                    />\r\n                                                </Form.Group>\r\n                                            </Form.Row> */}\r\n                                                    <Form.Row>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Warranty (months) </Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Product Warranty\"\r\n                                                                    name=\"product_warranty\"\r\n                                                                    value={props.product_warranty_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_warranty_touched && props.product_warranty_errors}\r\n                                                                />\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_warranty_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}> Warranty Type </Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Form.Control\r\n                                                                        as=\"select\"\r\n                                                                        name=\"warranty_type\"\r\n                                                                        size=\"sm\"\r\n                                                                        value={props.warranty_type_values}\r\n                                                                        onChange={props.onChange}\r\n                                                                        isInvalid={props.warranty_type_touched && props.warranty_type_errors}\r\n                                                                    >\r\n                                                                        <option>Waranty Type</option>\r\n                                                                        <option> No Warranty </option>\r\n                                                                        <option> Brand Warranty </option>\r\n                                                                        <option> Local Warranty </option>\r\n                                                                        <option> Local Seller Warranty </option>\r\n                                                                        <option> Non-Local Warranty </option>\r\n                                                                        <option> Internationsl Warranty </option>\r\n                                                                        <option> Internationsl Seller Warranty </option>\r\n                                                                        <option> International Manufacturer Warranty </option>\r\n\r\n                                                                    </Form.Control>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_warranty_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                            <Form.Label style={styles.label}>Product Discount</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Discount on on Product(%)\"\r\n                                                                    name=\"product_discount\"\r\n                                                                    value={props.product_discount_values}\r\n                                                                    onChange={props.onChange}\r\n                                                                    isInvalid={props.product_discount_touched && props.product_discount_errors}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' size=\"sm\">%</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.product_discount_errors}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                </>\r\n                                            }\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Inventory\">\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product SKU</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter SKU (Stock Keeping Unit)\"\r\n                                                            name=\"sku\"\r\n                                                            value={props.sku_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.sku_touched && props.sku_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.sku_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n\r\n\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Shipping\">\r\n                                            <Form.Group as={Row} noGutters>\r\n                                                <Form.Label style={styles.label}>Weight (kg)</Form.Label>\r\n                                                <Form.Control type=\"number\"\r\n                                                    name=\"product_weight\"\r\n                                                    size=\"sm\"\r\n                                                    value={props.product_weight_values}\r\n                                                    onChange={props.onChange}\r\n                                                    isInvalid={props.product_weight_touched && props.product_weight_errors}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {props.product_weight_errors}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                            <Form.Group as={Row} noGutters>\r\n                                                <Form.Label style={styles.label}>Dimensions (cm)</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            name=\"dimension_length\"\r\n                                                            size=\"sm\"\r\n                                                            value={props.dimension_length_values}\r\n                                                            onChange={props.onChange}\r\n                                                            placeholder=\"Length\"\r\n                                                            isInvalid={props.dimension_length_touched && props.dimension_length_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_length_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control\r\n                                                        type=\"number\"\r\n                                                        name=\"dimension_width\"\r\n                                                        size=\"sm\"\r\n                                                        value={props.dimension_width_values}\r\n                                                        placeholder=\"Width\"\r\n                                                        onChange={props.onChange}\r\n                                                        isInvalid={props.dimension_width_touched && props.dimension_width_errors}\r\n                                                    />\r\n                                                    <InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_width_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                        <Form.Control\r\n                                                            type=\"number\"\r\n                                                            name=\"dimension_height\"\r\n                                                            size=\"sm\"\r\n                                                            value={props.dimension_height_values}\r\n                                                            placeholder=\"Height\"\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.dimension_height_touched && props.dimension_height_errors}\r\n                                                        />\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.dimension_height_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup.Prepend>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Row>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Shipping Charges</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter Product Shipping Charges\"\r\n                                                            name=\"shipping_charges\"\r\n                                                            value={props.shipping_charges_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.shipping_charges_touched && props.shipping_charges_errors}\r\n                                                        />\r\n                                                        <InputGroup.Prepend>\r\n                                                            <Button variant='primary' size=\"sm\">Riyal</Button>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.shipping_charges_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} lg={6} md={6} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Product Handling Fee</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            size=\"sm\"\r\n                                                            placeholder=\"Enter Product Handling Fee\"\r\n                                                            name=\"handling_fee\"\r\n                                                            value={props.handling_fee_values}\r\n                                                            onChange={props.onChange}\r\n                                                            isInvalid={props.handling_fee_touched && props.handling_fee_errors}\r\n                                                        />\r\n                                                        <InputGroup.Prepend>\r\n                                                            <Button variant='primary' size=\"sm\">Riyal</Button>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control.Feedback type=\"invalid\">\r\n                                                            {props.handling_fee_errors}\r\n                                                        </Form.Control.Feedback>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n\r\n\r\n\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Attributes\">\r\n                                            <Form.Row >\r\n                                                <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Field Name</Form.Label>\r\n                                                    <Select\r\n                                                        options={groupedOptions}\r\n                                                        components={{ Group }}\r\n                                                        value={props.productAttributeNameSelected}\r\n                                                        onChange={props.attributeNameHandler}\r\n                                                    />\r\n                                                    <Nav.Link style={{ padding: '0%', margin: '0%', fontSize: '14px' }} onClick={() => setModalShow(true)}>\r\n                                                        Add New\r\n                                                    </Nav.Link>\r\n                                                    <AddNewFieldNameModal\r\n                                                        show={modalShow}\r\n                                                        onHide={() => setModalShow(false)}\r\n                                                    />\r\n                                                </Form.Group>\r\n                                                <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                    <Form.Label style={styles.label}>Field Value </Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            placeholder=\"Enter Value\"\r\n                                                            name=\"sku\"\r\n                                                            value={props.value}\r\n                                                            onChange={props.attributeValueHandler}\r\n                                                        />\r\n                                                        <Button variant=\"outline-primary\" style={{ marginLeft: '1%' }}\r\n                                                            onClick={props.addAttributeHandler}>Add</Button>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                                <Form.Label style={styles.label}>\r\n                                                    <span style={{ color: 'red' }}>{props.error}</span>\r\n                                                </Form.Label>\r\n                                            </Form.Row>\r\n                                            <Form.Row>\r\n                                                <Form.Label style={styles.label} className=\"mr-auto\">For Multiple Values add | between values</Form.Label>\r\n                                                <Button variant=\"outline-primary\" size=\"sm\"\r\n                                                    onClick={props.createVariationsHandler}>Create Variations</Button>\r\n                                            </Form.Row>\r\n                                            <hr />\r\n                                            {/* <Card style={{ background: 'lightGray', margin: '0.5% 1%' }}> */}\r\n\r\n                                            {props.attributesArray && props.attributesArray.map((data, index) =>\r\n                                                <Form.Row style={{ padding: '0%' }} key={index}>\r\n                                                    <Form.Group as={Col} lg={5} md={5} sm={12} xs={12}>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            size=\"sm\"\r\n                                                            value={data.productAttributeName}\r\n                                                            onChange={() => data.productAttributeName}\r\n                                                        >\r\n                                                            <option>{data.productAttributeName}</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group as={Col} lg={7} md={7} sm={12} xs={12}>\r\n                                                        <InputGroup>\r\n                                                            <Form.Control\r\n                                                                type=\"text\"\r\n                                                                size=\"sm\"\r\n                                                                placeholder=\"Enter Value\"\r\n                                                                name=\"sku\"\r\n                                                                value={data.productAttributeValue}\r\n                                                                onChange={() => data.productAttributeValue}\r\n                                                            />\r\n                                                            <Button variant=\"outline-primary\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                onClick={() => props.deleteAttributeHandler(index)}> delete</Button>\r\n                                                        </InputGroup>\r\n                                                    </Form.Group>\r\n                                                    {/* <Button variant=\"outline-primary\" size=\"sm\" block style={{ width: '100px' }}\r\n                                                    onClick={() => props.update(index, data.fieldName, data.fieldValue)}> update</Button> */}\r\n\r\n\r\n                                                </Form.Row>\r\n                                            )}\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Variations\">\r\n                                            {variations ?\r\n                                                <>\r\n                                                    <Form.Row>\r\n                                                        {/* Same Price */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Price</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Price\"\r\n                                                                    name=\"samePrice\"\r\n                                                                    value={props.samePriceInput}\r\n                                                                    onChange={props.variationsSamePriceChanged}\r\n                                                                    isInvalid={props.samePriceError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSamePriceHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.samePriceError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        {/* Same Stock */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Stock</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"number\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Stock\"\r\n                                                                    name=\"sameStock\"\r\n                                                                    value={props.sameStockInput}\r\n                                                                    onChange={props.variationsSameStockChanged}\r\n                                                                    isInvalid={props.sameStockError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSameStockHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.sameStockError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                        {/* Same Image Link */}\r\n                                                        <Form.Group as={Col} >\r\n                                                            <Form.Label style={styles.label}> Same Image</Form.Label>\r\n                                                            <InputGroup>\r\n                                                                <Form.Control\r\n                                                                    type=\"text\"\r\n                                                                    size=\"sm\"\r\n                                                                    placeholder=\"Enter Image Link\"\r\n                                                                    name=\"sameImgLinkInput\"\r\n                                                                    value={props.sameImgLinkInput}\r\n                                                                    onChange={props.variationsSameImgLinkChanged}\r\n                                                                    isInvalid={props.sameImgLinkError}\r\n                                                                />\r\n                                                                <InputGroup.Prepend>\r\n                                                                    <Button variant='primary' style={styles.label} onClick={props.variationsSameImgLinkHandler} size=\"sm\">Apply</Button>\r\n                                                                </InputGroup.Prepend>\r\n                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                    {props.sameImgLinkError}\r\n                                                                </Form.Control.Feedback>\r\n                                                            </InputGroup>\r\n                                                        </Form.Group>\r\n                                                    </Form.Row>\r\n                                                    <hr />\r\n                                                    {props.variationsArray && props.variationsArray.map((data, index) =>\r\n                                                        <div key={index} >\r\n                                                            <Accordion>\r\n                                                                <Row noGutters style={{ border: props.variationsErrorHandler(data) }}>\r\n                                                                    {data.items && data.items.map((d, i) =>\r\n                                                                        <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n                                                                            <Form.Control\r\n                                                                                type=\"text\"\r\n                                                                                size=\"sm\"\r\n                                                                                placeholder=\"Enter Value\"\r\n                                                                                name=\"sku\"\r\n                                                                                value={d.value}\r\n                                                                                onChange={() => data.productAttributeValue}\r\n                                                                            />\r\n                                                                        </Form.Group>\r\n                                                                    )}\r\n\r\n                                                                    <div className=\"mr-auto\"></div>\r\n                                                                    <Accordion.Toggle as={Form.Group} eventKey=\"0\">\r\n                                                                        <Button variant=\"outline-primary\" size=\"sm\" style={{ marginRight: '10px' }}>\r\n                                                                            <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                                        </Button>\r\n                                                                    </Accordion.Toggle>\r\n                                                                    <Form.Group style={{ float: 'right' }}>\r\n                                                                        <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                            onClick={() => props.deleteVariationHandler(index)}> delete</Button>\r\n                                                                    </Form.Group>\r\n                                                                </Row>\r\n\r\n                                                                <Accordion.Collapse eventKey=\"0\">\r\n                                                                    <div>\r\n                                                                        <Form.Row>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n                                                                                <Form.Label style={styles.label}>Product Price<span>*</span></Form.Label>\r\n                                                                                <InputGroup>\r\n                                                                                    <Form.Control\r\n                                                                                        type=\"number\"\r\n                                                                                        size=\"sm\"\r\n                                                                                        placeholder=\"Enter Product Price\"\r\n                                                                                        name=\"product_price\"\r\n                                                                                        value={data.price}\r\n                                                                                        onChange={(e) => props.variationPriceHandler(e, index)}\r\n                                                                                        isInvalid={data.price_error}\r\n                                                                                    />\r\n                                                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                                                        {data.price_error}\r\n                                                                                    </Form.Control.Feedback>\r\n                                                                                </InputGroup>\r\n                                                                            </Form.Group>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={6} xs={6}>\r\n                                                                                <Form.Label style={styles.label}>Product in Stock</Form.Label>\r\n                                                                                <Form.Control type=\"number\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    name=\"product_in_stock\"\r\n                                                                                    placeholder=\"Enter Product In Stock\"\r\n                                                                                    value={data.stock}\r\n                                                                                    onChange={(e) => props.variationStockHandler(e, index)}\r\n                                                                                />\r\n                                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                                </Form.Control.Feedback>\r\n                                                                            </Form.Group>\r\n                                                                            <Form.Group as={Col} lg={4} md={4} sm={12} xs={12}>\r\n                                                                                <Form.Label style={styles.label}>Image Link</Form.Label>\r\n                                                                                <Form.Control type=\"text\"\r\n                                                                                    size=\"sm\"\r\n                                                                                    name=\"image_link\"\r\n                                                                                    placeholder=\"Enter Image Link\"\r\n                                                                                    value={data.image_link}\r\n                                                                                    onChange={(e) => props.variationImageLinkHandler(e, index)}\r\n                                                                                    isInvalid={data.image_link_error}\r\n                                                                                />\r\n                                                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                                                    {data.image_link_error}\r\n                                                                                </Form.Control.Feedback>\r\n                                                                            </Form.Group>\r\n                                                                        </Form.Row>\r\n                                                                        <Form.Row>\r\n                                                                            {data.customField && data.customField.map((d, i) =>\r\n                                                                                <Form.Group as={Col} lg={3} md={3} sm={6} xs={6} key={i} >\r\n                                                                                    <Form.Label style={styles.label}>{d.name}</Form.Label>\r\n                                                                                    <InputGroup>\r\n                                                                                        <Form.Control\r\n                                                                                            type=\"text\"\r\n                                                                                            size=\"sm\"\r\n                                                                                            placeholder=\"Enter Value\"\r\n                                                                                            name=\"sku\"\r\n                                                                                            value={d.value}\r\n                                                                                            onChange={() => data.productAttributeValue}\r\n                                                                                        />\r\n                                                                                        <InputGroup.Prepend>\r\n                                                                                            <Button variant=\"outline-danger\" size=\"sm\" style={{ marginLeft: '1%' }}\r\n                                                                                                onClick={() => props.deleteVariationCustomFieldHandler(index, i)}> delete</Button>\r\n                                                                                        </InputGroup.Prepend>\r\n                                                                                    </InputGroup>\r\n                                                                                </Form.Group>\r\n                                                                            )}\r\n                                                                        </Form.Row>\r\n                                                                    </div>\r\n                                                                </Accordion.Collapse>\r\n                                                            </Accordion>\r\n                                                            <hr />\r\n                                                        </div>\r\n                                                    )}\r\n                                                    <Button variant=\"outline-primary\" size=\"sm\" block onClick={props.saveVariationsHandler}> Save Variations</Button>\r\n                                                </>\r\n                                                :\r\n                                                <div style={{ width: '100%', textAlign: 'center', marginTop: '10%' }}>\r\n                                                    <Form.Label>Please First add Attributes from Attributes Tab</Form.Label>\r\n                                                </div>\r\n                                            }\r\n                                        </Tab.Pane>\r\n\r\n\r\n                                        <Tab.Pane eventKey=\"Advanced\">\r\n                                            <Form.Row >\r\n                                                <Form.Label style={styles.label}>Purchase Note</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        size=\"sm\"\r\n                                                        placeholder=\"Enter Purchase Notes\"\r\n                                                        name=\"purchase_note\"\r\n                                                        value={props.purchase_note_values}\r\n                                                        onChange={props.onChange}\r\n                                                        isInvalid={props.purchase_note_touched && props.purchase_note_errors}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {props.purchase_note_errors}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Row>\r\n                                        </Tab.Pane>\r\n                                        {/* <Tab.Pane eventKey=\"Commission\">\r\n                                    Commission\r\n                                    </Tab.Pane> */}\r\n                                    </Tab.Content>\r\n                                </Col>\r\n                            </Row>\r\n                        </Tab.Container>\r\n                    </Card.Body>\r\n                </Accordion.Collapse>\r\n            </Card>\r\n            <style jsx>\r\n                {`\r\n                    span {\r\n                        color: red\r\n                    }\r\n                    @media (max-width: 991px) {\r\n                        .linkName {\r\n                            display: none\r\n                        }\r\n                    }\r\n                    \r\n                `}\r\n            </style>\r\n        </Accordion >\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '12px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n    },\r\n\r\n\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '15px',\r\n        background: 'lightgray'\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    submit_btn: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        marginTop: '3%',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    product_fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\n\r\nexport default ProductData;","\r\nimport React, { Component } from 'react';\r\nimport { Accordion, Form, Col, Row, Card, InputGroup, Button, Toast, Alert, Nav, Tabs, Spinner } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPlus, faKey, faSlidersH, faStoreAlt, faTruck, faTools, faDollarSign, faExclamationTriangle, faListAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nimport GlobalStyleSheet from '../../../../../../styleSheet';\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\r\nimport CustomFields from './add-new-contents/custom-fields';\r\nimport ProductData from './add-new-contents/product-data';\r\nimport product_size_options from '../../../../../../sdk/consts/product-size-options'\r\nimport product_color_options from '../../../../../../sdk/consts/product-color-options'\r\n\r\n// Option List for select Product Category (when offline)\r\nconst product_categories = [\r\n    { value: 'Shoe', label: 'Shoe' },\r\n    { value: 'Cloth', label: 'Cloth' },\r\n    { value: 'Shirt', label: 'Shirt' },\r\n    { value: 'Pant', label: 'Pant' }\r\n]\r\n\r\n// For React-Select\r\nconst components = {\r\n    DropdownIndicator: null,\r\n};\r\n// Model For React-Select\r\nconst createOption = (label) => ({\r\n    value: label,\r\n    label,\r\n});\r\n\r\n// Yup Schema for validation fields\r\nconst schema = yup.object({\r\n    product_name: yup.string().required(\"Enter Product Name\")\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n    product_description: yup.string()\r\n        .min(5, \"Must have at least 5 characters\")\r\n        .max(200, \"Can't be longer than 200 characters\"),\r\n    // Product Data\r\n    product_type: yup.string(),\r\n    // => Inventory\r\n    sku: yup.string()\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => General(Simple-Product)\r\n    product_price: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 1-1000000')\r\n        .max(1000000, 'Enter Between 1-1000000'),\r\n    product_in_stock: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(1, \"Must grater than 1 digit\")\r\n        .max(1000000, \"Can't be longer than 1000000\"),\r\n    product_brand_name: yup.string()\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n    product_image_link: yup.string(),\r\n    product_warranty: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-200')\r\n        .max(200, 'Enter Between 0-200'),\r\n    warranty_type: yup.string(),\r\n    product_discount: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => Attributes (Variable Product)\r\n    purchase_note: yup.string(),\r\n    // => Variations (Variable Product)\r\n    product_variations: yup.string(),\r\n    // => Shipping\r\n    product_weight: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_length: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_width: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    dimension_height: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    shipping_charges: yup.number().integer(\"Enter Only Numbers\")\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    handling_fee: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .min(0, \"Must grater than 0 digit\")\r\n        .max(100, \"Can't be longer than 100\"),\r\n    // => Advanve\r\n    purchase_note: yup.string(),\r\n    // Custom Fields\r\n    custom_fields: yup.string(),\r\n\r\n    product_category: yup.string(),\r\n    dangerous_goods: yup.string(),\r\n    product_tags: yup.string(),\r\n});\r\n\r\n\r\nclass AddNew extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            showToast: false,\r\n            showVariationsErrorAlert: false,\r\n            showSimpleProductPriceImgLinkErrorrAlert: false,\r\n            isVariableProduct: false,\r\n\r\n            product_categories_options: product_categories,\r\n            productCategories: '',\r\n            categoryError: 'no_error',\r\n            categoryErrorDiv: 'BorderDiv',\r\n\r\n            productTags: [],\r\n\r\n            warrantyType: 'Year',\r\n            inputValue: '',\r\n            simple_product_image_link: [],\r\n            simple_product_image_link: [],\r\n\r\n\r\n            image_linkError: 'no_error',\r\n            image_linkErrorDiv: 'BorderDiv',\r\n\r\n            // Product Attributes\r\n            productAttributesArray: [],\r\n            productAttributeName: '',\r\n            productAttributeValue: '',\r\n            productAttributeError: '',\r\n            productAttributeNameSelected: '',\r\n\r\n            variationsArray: [],\r\n            isVariationsSaved: false,\r\n            samePriceInput: '',\r\n            samePriceError: '',\r\n            sameStockInput: '',\r\n            sameStockError: '',\r\n            sameImgLinkInput: '',\r\n            sameImgLinkError: '',\r\n\r\n            // Custom Fields\r\n            customFieldsArray: [],\r\n            customFieldName: '',\r\n            customFieldValue: '',\r\n            customFieldError: '',\r\n            customFieldNameSelected: '',\r\n\r\n            // Dangerous Goods\r\n            dangerousGoodsArray: [],\r\n        };\r\n        this.handleProductTypeChange = this.handleProductTypeChange.bind(this);\r\n        this.handleAddCustomFieldBtnClick = this.handleAddCustomFieldBtnClick.bind(this);\r\n        // this.uploadProduct = this.uploadProduct.bind(this);\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/products-categories/get-all';\r\n        try {\r\n            const response = await axios.get(url);\r\n            this.setState({ product_categories_options: response.data.data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //  Submit data to api\r\n    async uploadProduct(data, currentComponent) {\r\n        console.log('data: ', data)\r\n        const url = MuhalikConfig.PATH + '/api/products/add';\r\n        await axios.post(url, {\r\n            data\r\n        }, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then(function (response) {\r\n            currentComponent.setState({ isLoading: false });\r\n            currentComponent.setState({ showToast: true });\r\n            return true;\r\n        }).catch(function (error) {\r\n            currentComponent.setState({ isLoading: false });\r\n            alert('Error: ', error.response.data.message);\r\n            return false;\r\n        });\r\n    }\r\n\r\n\r\n\r\n    handleProductTypeChange(e) {\r\n        if (e.target.value == 'variable-prouct') {\r\n            this.setState({ isVariableProduct: true });\r\n        }\r\n        else {\r\n            this.setState({ isVariableProduct: false });\r\n        }\r\n    }\r\n\r\n    // Product Data\r\n    // => Simple Product Image Link\r\n    handleSimpleProductImageLinkChange = (arr, actionMeta) => {\r\n        this.setState({ simple_product_image_link: arr, image_linkError: 'no_error', image_linkErrorDiv: 'BorderDiv' });\r\n    };\r\n    handleSimpleProductImageLinkInputChange = (arr) => {\r\n        this.setState({ inputValue: arr });\r\n    };\r\n    handleSimpleProductImage_linkKeyDown = (event) => {\r\n        const inputValue = this.state.inputValue;\r\n        const simple_product_image_link = this.state.simple_product_image_link;\r\n        if (!inputValue) return;\r\n        switch (event.key) {\r\n            case 'Enter':\r\n            case 'Tab':\r\n                this.setState({\r\n                    inputValue: '',\r\n                    simple_product_image_link: [...simple_product_image_link, createOption(inputValue)],\r\n                });\r\n                event.preventDefault();\r\n        }\r\n    };\r\n    // => End Of Simple Product Image Link\r\n\r\n    // => Product Attributes (Variable Product)\r\n    handleProductAttributeNameChange(e) {\r\n        this.setState({ productAttributeName: e.value })\r\n        this.setState({ productAttributeNameSelected: e })\r\n    }\r\n    handleProductAttributeValueChange = (e) => {\r\n        this.setState({ productAttributeValue: e.target.value })\r\n    }\r\n    handleAddProductAttributeClick = () => {\r\n        if (this.state.productAttributeName != '' && this.state.productAttributeValue != '') {\r\n            this.setState({ productAttributeError: '' })\r\n            const copyArray = Object.assign([], this.state.productAttributesArray);\r\n            copyArray.push({\r\n                productAttributeName: this.state.productAttributeName,\r\n                productAttributeValue: this.state.productAttributeValue,\r\n            })\r\n            this.setState({ productAttributeName: '' })\r\n            this.setState({ productAttributeValue: '' })\r\n            this.setState({ productAttributeNameSelected: '' })\r\n            this.setState({ productAttributesArray: copyArray })\r\n        } else {\r\n            this.setState({ productAttributeError: 'Enter Field Name and Value' });\r\n        }\r\n    }\r\n    handleCreateVariationsClick = () => {\r\n        var allArrays = [];\r\n        this.state.productAttributesArray.forEach(element => {\r\n            var trim = element.productAttributeValue.split(' ').join('');\r\n            var splitArray = trim.split('|');\r\n            allArrays.push(splitArray)\r\n        });\r\n\r\n        const array = this.allPossibleCases(allArrays)\r\n        var data = [];\r\n        array.forEach(element => {\r\n            const split = element.split('-');\r\n            let item = [];\r\n\r\n            split.forEach((e, i) => {\r\n                item.push({ name: this.state.productAttributesArray[i].productAttributeName, value: e })\r\n            });\r\n            data.push({ items: item, price: '', stock: '1', image_link: '', price_error: '', image_link_error: '', customField: [] })\r\n        });\r\n        // console.log(\"split Array: \", data)\r\n        this.setState({ variationsArray: data })\r\n    }\r\n    allPossibleCases(arr) {\r\n        if (arr.length == 1) {\r\n            return arr[0];\r\n        } else {\r\n            var result = [];\r\n            var allCasesOfRest = this.allPossibleCases(arr.slice(1));  // recur with the rest of array\r\n            for (var i = 0; i < allCasesOfRest.length; i++) {\r\n                for (var j = 0; j < arr[0].length; j++) {\r\n                    result.push(arr[0][j] + \"-\" + allCasesOfRest[i]);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n    handleUpdateProductAttributeClick = (index, name, value) => {\r\n        const copyArray = Object.assign([], this.state.productAttributesArray);\r\n        copyArray[index] = { productAttributeName: name, productAttributeValue: value };\r\n        this.setState({ productAttributesArray: copyArray });\r\n    }\r\n    handleDeleteProductAttributeClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.productAttributesArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ productAttributesArray: copyArray });\r\n    }\r\n    // => End Of Product Attributes\r\n\r\n    // => Product Variations (Variable Product)\r\n    //  // =>Same Price For All Variations\r\n    handleVariationsSamePriceChanged = (e) => {\r\n        if (e.target.value >= 0) {\r\n            this.setState({ samePriceInput: e.target.value })\r\n        }\r\n    }\r\n    handleVariationsSamePriceClick = (e) => {\r\n        if (this.state.samePriceInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.price = this.state.samePriceInput;\r\n\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ samePriceError: 'Enter Value' })\r\n        }\r\n    }\r\n    // // => Same Stock For All Variations\r\n    handleVariationsSameStockChanged = (e) => {\r\n        if (e.target.value >= 0) {\r\n            this.setState({ sameStockInput: e.target.value })\r\n        }\r\n    }\r\n    handleVariationsSameStockClick = () => {\r\n        if (this.state.sameStockInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.stock = this.state.sameStockInput;\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ sameStockError: 'Enter Value' })\r\n        }\r\n    }\r\n    // // => Same Image link For All Variations\r\n    handleVariationsSameImgLinkChanged = (e) => {\r\n        this.setState({ sameImgLinkInput: e.target.value })\r\n    }\r\n    handleVariationsSameImgLinkClick = () => {\r\n        if (this.state.sameImgLinkInput != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n            copyArray.forEach(element => {\r\n                element.image_link = this.state.sameImgLinkInput;\r\n            });\r\n            this.setState({ variationsArray: copyArray })\r\n        } else {\r\n            this.setState({ sameImgLinkError: 'Enter Value' })\r\n        }\r\n    }\r\n\r\n    handleVariationPriceChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        if (e.target.value >= 0) {\r\n            object.price = e.target.value;\r\n            copyArray[index] = object;\r\n            this.setState({ variationsArray: copyArray });\r\n        }\r\n    }\r\n    handleVariationProductInStockChang = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        if (e.target.value >= 0) {\r\n            object.stock = e.target.value;\r\n            copyArray[index] = object;\r\n            this.setState({ variationsArray: copyArray });\r\n        }\r\n    }\r\n    handleVariationImageLinkChange = (e, index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let object = copyArray[index];\r\n        object.image_link = e.target.value;\r\n        copyArray[index] = object;\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleDeleteProductVariationClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleDeleteVariationCustomFieldClick = (index, i) => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        copyArray[index].customField.splice(i, 1);\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleSaveVariationsClick = () => {\r\n        const copyArray = Object.assign([], this.state.variationsArray);\r\n        let flag = true;\r\n        copyArray.forEach(element => {\r\n            if (element.price == '' || element.image_link == '') {\r\n                flag = false;\r\n                if (element.price == '') {\r\n                    element.price_error = 'Enter price'\r\n                }\r\n                if (element.image_link == '') {\r\n                    element.image_link_error = 'Enter Image Link'\r\n                }\r\n            } else {\r\n                element.price_error = ''\r\n                element.image_link_error = ''\r\n            }\r\n        });\r\n        if (flag == true) {\r\n            this.setState({ isVariationsSaved: true })\r\n        }\r\n        this.setState({ variationsArray: copyArray });\r\n    }\r\n    handleVariationsErrorCheck = (data) => {\r\n        if (data.price_error != '' || data.image_link_error != '') {\r\n            return '1px solid red'\r\n        }\r\n        else {\r\n            return 'none'\r\n        }\r\n    }\r\n    // => End Of Product Variations\r\n    // End of Product Data\r\n\r\n\r\n\r\n    // Custom Fields\r\n    handleCustomFieldNameChange(e) {\r\n        this.setState({ customFieldName: e.value })\r\n        this.setState({ customFieldNameSelected: e })\r\n    }\r\n    handleCustomFieldValueChange = (e) => {\r\n        this.setState({ customFieldValue: e.target.value })\r\n    }\r\n    handleAddCustomFieldBtnClick = () => {\r\n        if (this.state.customFieldName != '' && this.state.customFieldValue != '') {\r\n            const copyArray = Object.assign([], this.state.variationsArray);\r\n\r\n            if (this.state.isVariableProduct == true) {\r\n                copyArray.forEach(element => {\r\n                    element.customField.push({\r\n                        name: this.state.customFieldName,\r\n                        value: this.state.customFieldValue\r\n                    });\r\n                    console.log(\"element.customField: \", element.customField);\r\n                });\r\n                this.setState({ variationsArray: copyArray })\r\n            } else {\r\n                this.state.customFieldsArray.push({\r\n                    name: this.state.customFieldName,\r\n                    value: this.state.customFieldValue,\r\n                })\r\n            }\r\n\r\n            this.setState({ customFieldError: '' })\r\n            this.setState({ customFieldName: '' })\r\n            this.setState({ customFieldValue: '' })\r\n            this.setState({ customFieldNameSelected: '' })\r\n        } else {\r\n            this.setState({ customFieldError: 'Enter Field Name and Value' });\r\n        }\r\n    }\r\n    updateCustomFieldsClick = (index, name, value) => {\r\n        const copyArray = Object.assign([], this.state.customFieldsArray);\r\n        copyArray[index] = { customFieldName: name, customFieldValue: value };\r\n        this.setState({ customFieldsArray: copyArray });\r\n    }\r\n    deleteCustomFieldsClick = (index) => {\r\n        const copyArray = Object.assign([], this.state.customFieldsArray);\r\n        copyArray.splice(index, 1);\r\n        this.setState({ customFieldsArray: copyArray });\r\n    }\r\n\r\n\r\n\r\n\r\n    // Product Category\r\n    handleProductCategoryChange = (arr) => {\r\n        this.setState({ productCategories: arr, categoryError: 'no_error', categoryErrorDiv: 'BorderDiv' });\r\n    }\r\n\r\n    // Dangerous Goods\r\n    handleDangerousGoodsChange = (e, name) => {\r\n        const copyArray = Object.assign([], this.state.dangerousGoodsArray);\r\n        if (e.target.checked) {\r\n            copyArray.push({ value: name });\r\n        } else {\r\n            copyArray.forEach((element, index) => {\r\n                if (element.value == name) {\r\n                    copyArray.splice(index, 1)\r\n                }\r\n            });\r\n        }\r\n        this.setState({ dangerousGoodsArray: copyArray });\r\n    }\r\n\r\n    // Product Tags\r\n    handleProductTagChange = (arr) => {\r\n        this.setState({ productTags: arr });\r\n    };\r\n\r\n    render() {\r\n        var showCustomFields = false;\r\n        if (this.state.variationsArray.length == 0 && this.state.isVariableProduct == true) {\r\n            showCustomFields = true;\r\n        }\r\n        else {\r\n            showCustomFields = false;\r\n        }\r\n\r\n        return (\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={{\r\n                    product_type: 'simple-product',\r\n                }}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    if (this.state.productCategories == '' || (this.state.simple_product_image_link == '' && values.product_type == 'simple-product')) {\r\n                        // if (this.state.customFieldNameArray == '') {\r\n                        //     this.setState({ categoryError: \"error\", categoryErrorDiv: 'RedBorderDiv' });\r\n                        // }\r\n                        if (this.state.productCategories == '') {\r\n                            this.setState({ categoryError: \"error\", categoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        if (this.state.simple_product_image_link == '' && values.product_type == 'simple-product') {\r\n                            this.setState({ showSimpleProductPriceImgLinkErrorrAlert: true, image_linkError: \"error\", image_linkErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        setSubmitting(false);\r\n                    } else if (this.state.isVariationsSaved == false && values.product_type == 'variable-prouct') {\r\n                        this.setState({ showVariationsErrorAlert: true });\r\n                    } else {\r\n                        resetForm();\r\n                        setSubmitting(true);\r\n                        this.setState({ isLoading: true });\r\n                        setTimeout(() => {\r\n                            let array = [];\r\n                            // this.state.productCategories.forEach(element => {\r\n                            //     array.push(element.value)\r\n                            // })\r\n                            values.product_category = this.state.productCategories;\r\n                            // array = [];\r\n                            // this.state.productTags.forEach(element => {\r\n                            //     array.push(element.value)\r\n                            // })\r\n                            values.product_tags = this.state.productTags;\r\n\r\n                            values.dangerous_goods = this.state.dangerousGoodsArray;\r\n\r\n                            if (values.product_type == 'simple-product') {\r\n                                // array = [];\r\n                                // this.state.simple_product_image_link.forEach(element => {\r\n                                //     array.push(element.value)\r\n                                // })\r\n                                values.product_image_link = this.state.simple_product_image_link;\r\n                                if (this.state.customFieldsArray != []) {\r\n                                    // array = []\r\n                                    // this.state.customFieldsArray.forEach(custom => {\r\n                                    //     var obj = {};\r\n                                    //     obj[custom.customFieldName] = custom.customFieldValue;\r\n                                    //     array.push(obj)\r\n                                    // });\r\n                                    values.custom_fields = this.state.customFieldsArray;\r\n                                }\r\n                            } else {\r\n                                array = [];\r\n                                this.state.variationsArray.forEach((element, index) => {\r\n                                    let item = []\r\n                                    element.items.forEach(e => {\r\n                                        item.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    element.customField.forEach(e => {\r\n                                        item.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    item.push({ name: 'price', value: element.price })\r\n                                    item.push({ name: 'stock', value: element.stock })\r\n                                    item.push({ name: 'image_link', value: element.image_link })\r\n                                    array.push({ item: item })\r\n                                })\r\n\r\n                                values.product_variations = array;\r\n                            }\r\n\r\n                            resetForm();\r\n\r\n                            if (this.uploadProduct(values, this)) {\r\n                                this.setState({\r\n                                    productCategories: '',\r\n                                    categoryError: 'no_error',\r\n                                    categoryErrorDiv: 'BorderDiv',\r\n                                    productTags: [],\r\n                                    warrantyType: 'Year',\r\n                                    inputValue: '',\r\n                                    simple_product_image_link: [],\r\n                                    image_linkError: 'no_error',\r\n                                    image_linkErrorDiv: 'BorderDiv',\r\n                                    isVariableProduct: false,\r\n                                    productAttributesArray: [],\r\n                                    productAttributeName: '',\r\n                                    productAttributeValue: '',\r\n                                    productAttributeError: '',\r\n                                    variationsArray: [],\r\n                                    isVariationsSaved: false,\r\n                                    customFieldsArray: [],\r\n                                    customFieldName: '',\r\n                                    customFieldValue: '',\r\n                                    customFieldError: '',\r\n                                });\r\n\r\n                            }\r\n                            setSubmitting(false);\r\n                        }, 500);\r\n                    }\r\n                }}\r\n            >\r\n                {\r\n                    ({\r\n                        handleSubmit, handleChange, values, touched, isValid, errors, handleBlur, isSubmitting\r\n                    }) => (\r\n                            <div>\r\n                                <Row style={styles.title_row} noGutters>\r\n                                    <FontAwesomeIcon icon={faPlus} style={styles.title_fontawesome} />\r\n                                    <div className=\"mr-auto\" style={styles.title}> Add New Product</div>\r\n                                </Row>\r\n                                <Form noValidate onSubmit={handleSubmit}>\r\n\r\n                                    {/* {this.state.showToast ? */}\r\n                                    <AlertModal\r\n                                        onHide={(e) => this.setState({ showToast: false })}\r\n                                        show={this.state.showToast}\r\n                                        header={'Success'}\r\n                                        message={'Product Uploaded Successfully'}\r\n                                        iconName={faThumbsUp}\r\n                                        color={\"#00b300\"}\r\n                                    />\r\n                                        : null\r\n                                    {/* } */}\r\n                                    {/* {this.state.showVariationsErrorAlert ? */}\r\n                                    <AlertModal\r\n                                        onHide={(e) => this.setState({ showVariationsErrorAlert: false })}\r\n                                        show={this.state.showVariationsErrorAlert}\r\n                                        header={'Error'}\r\n                                        message={'Please Add/Save Variations First'}\r\n                                        iconName={faExclamationTriangle}\r\n                                        color={\"#ff3333\"}\r\n                                    />\r\n                                        : null\r\n                                    {/* } */}\r\n                                    {/* {this.state.showSimpleProductPriceImgLinkErrorrAlert ? */}\r\n                                    <AlertModal\r\n                                        onHide={(e) => this.setState({ showSimpleProductPriceImgLinkErrorrAlert: false })}\r\n                                        show={this.state.showSimpleProductPriceImgLinkErrorrAlert}\r\n                                        header={'Error'}\r\n                                        message={'Enter Price/Image Link in General Tab First'}\r\n                                        iconName={faExclamationTriangle}\r\n                                        color={\"#ff3333\"}\r\n                                    />\r\n                                        : null\r\n                                    {/* } */}\r\n\r\n\r\n                                    <Row noGutters style={{ paddingTop: '2%' }}>\r\n                                        <Col lg={9} md={9} sm={12} xs={12}>\r\n                                            {/* Product Name */}\r\n                                            <Form.Group as={Row} style={styles.row}>\r\n                                                <Form.Label style={styles.label}>Product Name<span>*</span></Form.Label>\r\n                                                <InputGroup>\r\n                                                    <Form.Control\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Enter Product Name\"\r\n                                                        name=\"product_name\"\r\n                                                        value={values.product_name || ''}\r\n                                                        onChange={handleChange}\r\n                                                        isInvalid={touched.product_name && errors.product_name}\r\n                                                    />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.product_name}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            {/* End of Product Name */}\r\n\r\n                                            {/* Product Discription */}\r\n                                            <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                                <Form.Group as={Row} style={styles.row}>\r\n                                                    <Card style={styles.card}>\r\n                                                        <Card.Header style={styles.card_header}>\r\n                                                            <Form.Label >Product Discruption</Form.Label>\r\n                                                            <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                                <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                            </Accordion.Toggle>\r\n                                                        </Card.Header>\r\n                                                        <Accordion.Collapse eventKey=\"0\">\r\n                                                            <Card.Body>\r\n                                                                <Form.Group>\r\n                                                                    <Form.Control\r\n                                                                        as=\"textarea\"\r\n                                                                        placeholder=\"Enter Product Description\"\r\n                                                                        name=\"product_description\"\r\n                                                                        value={values.product_description || ''}\r\n                                                                        rows=\"7\"\r\n                                                                        onChange={handleChange}\r\n                                                                        isInvalid={touched.product_description && errors.product_description}\r\n                                                                    />\r\n                                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                                        {errors.product_description}\r\n                                                                    </Form.Control.Feedback>\r\n                                                                </Form.Group>\r\n                                                            </Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </Card>\r\n                                                </Form.Group>\r\n                                            </Accordion>\r\n                                            {/* Product Data Row */}\r\n                                            <Row style={styles.row}>\r\n                                                <ProductData\r\n                                                    productTypeHandler={this.handleProductTypeChange}\r\n                                                    isVariableProduct={this.state.isVariableProduct}\r\n\r\n                                                    product_type_values={values.product_type || ''}\r\n\r\n                                                    product_price_values={values.product_price || ''}\r\n                                                    product_price_touched={touched.product_price}\r\n                                                    product_price_errors={errors.product_price}\r\n\r\n                                                    product_in_stock_values={values.product_in_stock || ''}\r\n                                                    product_in_stock_touched={touched.product_in_stock}\r\n                                                    product_in_stock_errors={errors.product_in_stock}\r\n\r\n                                                    product_brand_name_values={values.product_brand_name || ''}\r\n                                                    product_brand_name_touched={touched.product_brand_name}\r\n                                                    product_brand_name_errors={errors.product_brand_name}\r\n\r\n                                                    imageLink={this.state.simple_product_image_link}\r\n                                                    simpleProductImageLinkHandler={this.handleSimpleProductImageLinkChange.bind(this)}\r\n                                                    inputValue={this.state.inputValue}\r\n                                                    simpleProductImageLinkInputChangeHandler={this.handleSimpleProductImageLinkInputChange.bind(this)}\r\n                                                    simpleProductImageLinkhandleKeyDownHandler={this.handleSimpleProductImage_linkKeyDown.bind(this)}\r\n                                                    simpleProductError={this.state.showSimpleProductPriceImgLinkErrorrAlert}\r\n\r\n                                                    product_warranty_values={values.product_warranty || ''}\r\n                                                    product_warranty_touched={touched.product_warranty}\r\n                                                    product_warranty_errors={errors.product_warranty}\r\n\r\n                                                    warranty_type_values={values.warranty_type || ''}\r\n                                                    warranty_type_touched={touched.warranty_type}\r\n                                                    warranty_type_errors={errors.warranty_type}\r\n\r\n                                                    product_discount_values={values.product_discount || ''}\r\n                                                    product_discount_touched={touched.product_discount}\r\n                                                    product_discount_errors={errors.product_discount}\r\n\r\n                                                    sku_values={values.sku || ''}\r\n                                                    sku_touched={touched.sku}\r\n                                                    sku_errors={errors.sku}\r\n\r\n                                                    product_weight_values={values.product_weight || ''}\r\n                                                    product_weight_touched={touched.product_weight}\r\n                                                    product_weight_errors={errors.product_weight}\r\n\r\n                                                    dimension_length_values={values.dimension_length || ''}\r\n                                                    dimension_length_touched={touched.dimension_length}\r\n                                                    dimension_length_errors={errors.dimension_length}\r\n\r\n                                                    dimension_width_values={values.dimension_width || ''}\r\n                                                    dimension_width_touched={touched.dimension_width}\r\n                                                    dimension_width_errors={errors.dimension_width}\r\n\r\n                                                    dimension_height_values={values.dimension_height || ''}\r\n                                                    dimension_height_touched={touched.dimension_height}\r\n                                                    dimension_height_errors={errors.dimension_height}\r\n\r\n                                                    shipping_charges_values={values.shipping_charges || ''}\r\n                                                    shipping_charges_touched={touched.shipping_charges}\r\n                                                    shipping_charges_errors={errors.shipping_charges}\r\n\r\n                                                    handling_fee_values={values.handling_fee || ''}\r\n                                                    handling_fee_touched={touched.handling_fee}\r\n                                                    handling_fee_errors={errors.handling_fee}\r\n\r\n                                                    purchase_note_values={values.purchase_note || ''}\r\n                                                    purchase_note_touched={touched.purchase_note}\r\n                                                    purchase_note_errors={errors.purchase_note}\r\n\r\n                                                    onChange={handleChange}\r\n                                                    touched={touched}\r\n                                                    errors={errors}\r\n\r\n                                                    productColorChangeHandler={this.handleProductColorChange}\r\n                                                    // size={this.state.size}\r\n                                                    productSizeChangeHandler={this.handleProductSizeChange}\r\n\r\n                                                    attributesArray={this.state.productAttributesArray}\r\n                                                    name={this.state.productAttributeName}\r\n                                                    value={this.state.productAttributeValue}\r\n                                                    productAttributeNameSelected={this.state.productAttributeNameSelected}\r\n                                                    attributeNameHandler={this.handleProductAttributeNameChange.bind(this)}\r\n                                                    attributeValueHandler={this.handleProductAttributeValueChange.bind(this)}\r\n                                                    addAttributeHandler={this.handleAddProductAttributeClick.bind(this)}\r\n                                                    update={this.handleUpdateProductAttributeClick.bind(this)}\r\n                                                    deleteAttributeHandler={this.handleDeleteProductAttributeClick.bind(this)}\r\n                                                    deleteVariationHandler={this.handleDeleteProductVariationClick.bind(this)}\r\n                                                    deleteVariationCustomFieldHandler={this.handleDeleteVariationCustomFieldClick.bind(this)}\r\n                                                    saveVariationsHandler={this.handleSaveVariationsClick.bind(this)}\r\n                                                    variationsErrorHandler={this.handleVariationsErrorCheck.bind(this)}\r\n                                                    error={this.state.productAttributeError}\r\n\r\n                                                    createVariationsHandler={this.handleCreateVariationsClick}\r\n                                                    variationsArray={this.state.variationsArray}\r\n                                                    variationPriceHandler={this.handleVariationPriceChange.bind(this)}\r\n                                                    variationStockHandler={this.handleVariationProductInStockChang.bind(this)}\r\n                                                    variationImageLinkHandler={this.handleVariationImageLinkChange.bind(this)}\r\n\r\n                                                    samePriceInput={this.state.samePriceInput}\r\n                                                    samePriceError={this.state.samePriceError}\r\n                                                    variationsSamePriceChanged={this.handleVariationsSamePriceChanged.bind(this)}\r\n                                                    variationsSamePriceHandler={this.handleVariationsSamePriceClick.bind(this)}\r\n\r\n\r\n\r\n                                                    sameStockInput={this.state.sameStockInput}\r\n                                                    sameStockError={this.state.sameStockError}\r\n                                                    variationsSameStockChanged={this.handleVariationsSameStockChanged.bind(this)}\r\n                                                    variationsSameStockHandler={this.handleVariationsSameStockClick.bind(this)}\r\n\r\n                                                    sameImgLinkInput={this.state.sameImgLinkInput}\r\n                                                    sameImgLinkError={this.state.sameImgLinkError}\r\n                                                    variationsSameImgLinkChanged={this.handleVariationsSameImgLinkChanged.bind(this)}\r\n                                                    variationsSameImgLinkHandler={this.handleVariationsSameImgLinkClick.bind(this)}\r\n                                                />\r\n                                            </Row>\r\n                                            {/* End of Product Data Row */}\r\n                                            {/* Custom Fields Row */}\r\n                                            <Form.Group as={Row} style={styles.row} >\r\n                                                <CustomFields\r\n                                                    customFieldsArray={this.state.customFieldsArray}\r\n                                                    isVariableProduct={this.state.isVariableProduct}\r\n                                                    name={this.state.customFieldName}\r\n                                                    value={this.state.customFieldValue}\r\n                                                    customFieldNameSelected={this.state.customFieldNameSelected}\r\n                                                    fieldNameHandler={this.handleCustomFieldNameChange.bind(this)}\r\n                                                    fieldValueHandler={this.handleCustomFieldValueChange.bind(this)}\r\n                                                    addFieldHandler={this.handleAddCustomFieldBtnClick.bind(this)}\r\n                                                    update={this.updateCustomFieldsClick.bind(this)}\r\n                                                    delete={this.deleteCustomFieldsClick.bind(this)}\r\n                                                    error={this.state.customFieldError}\r\n                                                    showCustomFields={showCustomFields}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            {/* End of Custom Fields Row */}\r\n                                        </Col>\r\n\r\n                                        <Col lg={3} md={3} sm={12} xs={12}>\r\n                                            {/* Product Category */}\r\n                                            <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                                <Form.Group as={Row} style={styles.row}>\r\n                                                    <Card style={styles.card}>\r\n                                                        <Card.Header style={styles.card_header}>\r\n                                                            <Form.Label >Product Categories</Form.Label>\r\n                                                            <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                                <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                            </Accordion.Toggle>\r\n                                                        </Card.Header>\r\n                                                        <Accordion.Collapse eventKey=\"0\">\r\n                                                            <Card.Body style={{ height: '250px' }}>\r\n                                                                <div className={this.state.categoryErrorDiv}>\r\n                                                                    <CreatableSelect\r\n                                                                        isMulti\r\n                                                                        onChange={this.handleProductCategoryChange}\r\n                                                                        options={this.state.product_categories_options}\r\n                                                                        value={this.state.productCategories}\r\n                                                                        placeholder=\"Select/Enter Category\"\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <label className={this.state.categoryError}>\r\n                                                                    Selet Category\r\n                                                        </label>\r\n                                                            </Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </Card>\r\n                                                </Form.Group>\r\n                                            </Accordion>\r\n                                            {/* End of Product ategory */}\r\n\r\n                                            {/* Dangerous Goods */}\r\n                                            <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                                <Form.Group as={Row} style={styles.row}>\r\n                                                    <Card style={styles.card}>\r\n                                                        <Card.Header style={styles.card_header}>\r\n                                                            <Form.Label >Dangerous Goods</Form.Label>\r\n                                                            <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                                <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                            </Accordion.Toggle>\r\n                                                        </Card.Header>\r\n                                                        <Accordion.Collapse eventKey=\"0\">\r\n                                                            <Card.Body>\r\n                                                                <Form.Check\r\n                                                                    name=\"not_specified\"\r\n                                                                    label=\"Not Specified\"\r\n                                                                    style={styles.label}\r\n                                                                    onChange={(e) => this.handleDangerousGoodsChange(e, 'Not Specified')}\r\n                                                                />\r\n                                                                <br></br>\r\n                                                                <Form.Check\r\n                                                                    name=\"ceramic\"\r\n                                                                    label=\"Ceramic\"\r\n                                                                    style={styles.label}\r\n                                                                    onChange={(e) => this.handleDangerousGoodsChange(e, 'Ceramic')}\r\n                                                                />\r\n                                                                <br></br>\r\n                                                                <Form.Check\r\n                                                                    name=\"glass\"\r\n                                                                    label=\"Glass\"\r\n                                                                    style={styles.label}\r\n                                                                    onChange={(e) => this.handleDangerousGoodsChange(e, 'Glass')}\r\n                                                                />\r\n                                                                <br></br>\r\n                                                                <Form.Check\r\n                                                                    name=\"metal\"\r\n                                                                    label=\"Metal\"\r\n                                                                    style={styles.label}\r\n                                                                    onChange={(e) => this.handleDangerousGoodsChange(e, 'Metal')}\r\n                                                                />\r\n                                                                <br></br>\r\n                                                                <Form.Check\r\n                                                                    name=\"plastic\"\r\n                                                                    label=\"Plastic\"\r\n                                                                    style={styles.label}\r\n                                                                    onChange={(e) => this.handleDangerousGoodsChange(e, 'Plastic')}\r\n                                                                />\r\n                                                            </Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </Card>\r\n                                                </Form.Group>\r\n                                            </Accordion>\r\n                                            {/* End ofDangerous Goods */}\r\n\r\n                                            {/* Product Tags */}\r\n                                            <Accordion style={{ width: '100%' }} defaultActiveKey=\"0\">\r\n                                                <Form.Group as={Row} style={styles.row}>\r\n                                                    <Card style={styles.card}>\r\n                                                        <Card.Header style={styles.card_header}>\r\n                                                            <Form.Label >Product Tags</Form.Label>\r\n                                                            <Accordion.Toggle as={Button} size=\"sm\" eventKey=\"0\" style={{ float: 'right', background: 'none' }}>\r\n                                                                <FontAwesomeIcon size=\"xs\" icon={faSlidersH} style={styles.variations_fontawesome} />\r\n                                                            </Accordion.Toggle>\r\n                                                        </Card.Header>\r\n                                                        <Accordion.Collapse eventKey=\"0\">\r\n                                                            <Card.Body style={{ height: '250px' }}>\r\n                                                                <CreatableSelect\r\n                                                                    isMulti\r\n                                                                    onChange={this.handleProductTagChange}\r\n                                                                    options={product_color_options}\r\n                                                                    value={this.state.productTags}\r\n                                                                    placeholder=\"Select/Enter Tags\"\r\n                                                                />\r\n                                                            </Card.Body>\r\n                                                        </Accordion.Collapse>\r\n                                                    </Card>\r\n                                                </Form.Group>\r\n                                            </Accordion>\r\n                                            {/* End of Product Tags */}\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n\r\n                                    {/* Form Submit Btn Row */}\r\n                                    <Form.Row style={styles.row}>\r\n                                        <Form.Group as={Col}>\r\n                                            <p style={styles.label}>Fields with <span> * </span> are mandatory.</p>\r\n                                            <p style={styles.label}>For adding new size, color, link: Enter text and hit Enter or Tab key</p>\r\n                                            <Button type=\"submit\" onSubmit={handleSubmit} disabled={this.state.isLoading} block style={styles.submit_btn}>\r\n                                                {this.state.isLoading ? 'Uploading' : 'Upload'}\r\n                                                {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                            </Button>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    {/* End of Form Submit Btn Row */}\r\n                                </Form>\r\n\r\n                                <style jsx>\r\n                                    {`\r\n                                        .no_error {\r\n                                            display: none;\r\n                                        }\r\n                                        .error{\r\n                                            margin-top: 4px;  \r\n                                            color: #DC3545;\r\n                                            font-size: 14px;\r\n                                            display: block;\r\n                                        }\r\n                                        .RedBorderDiv{\r\n                                            border: 0.5px solid #DC3545;\r\n                                            padding: 0.5px 0px 0.2px 0.5px;\r\n                                            width: 100%;\r\n                                        }\r\n                                        .BorderDiv{\r\n                                            border: none;\r\n                                            width: 100%;\r\n                                        }\r\n                                        span {\r\n                                            color: red;\r\n                                        }\r\n                                        .nav_link {\r\n                                            background: ${GlobalStyleSheet.admin_primry_color};\r\n                                            border-top: 0.5px solid #434556;\r\n                                            border-bottom: 0.5px solid #434556;\r\n                                            margin: 1.5px 0px;\r\n                                            border-radius: 4px\r\n                                        }\r\n                                        p {\r\n                                            text-align: center; \r\n                                            margin: 0px;\r\n                                        }\r\n                                    `}\r\n                                </style>\r\n                            </div>\r\n                        )\r\n                }\r\n            </Formik>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    title_row: {\r\n        borderBottom: '1px solid gray',\r\n        padding: '1.5% 4%'\r\n    },\r\n    title_fontawesome: {\r\n        color: 'gray',\r\n        marginRight: '3%',\r\n        width: '26px',\r\n        height: '26px',\r\n        maxHeight: '26px',\r\n        maxWidth: '26px',\r\n    },\r\n    title: {\r\n        color: 'gray'\r\n    },\r\n\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n    },\r\n\r\n\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        // color: '#6A7074',\r\n        fontSize: '14px',\r\n        background: 'lightgray'\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    submit_btn: {\r\n        // background: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginTop: '1%',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    product_fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default AddNew;","export const generalOptions = [\r\n    { value: 'Color', label: 'Color' },\r\n    { value: 'Size', label: 'Size' },\r\n    { value: 'Width', label: 'Width' },\r\n    { value: 'Length', label: 'Length' },\r\n    { value: 'Quality', label: 'Quality' },\r\n    { value: 'Camera', label: 'Camera' },\r\n];\r\n\r\nexport const laptop = [\r\n    { value: 'USB Type/ Post', label: 'USB Type/ Post' },\r\n    { value: 'Screen Resolution', label: 'Screen Resolution' },\r\n    { value: 'Displays Type', label: 'Displays Type' },\r\n    { value: 'Processor', label: 'Processor' },\r\n    { value: 'RAM', label: 'RAM' },\r\n    { value: 'ROM', label: 'ROM' },\r\n    { value: 'SSD', label: 'SSD' },\r\n    { value: 'Graphic Card', label: 'RAM' },\r\n    { value: 'Operating System', label: 'Operating System' },\r\n];\r\n\r\nexport const stateOptions = [\r\n    { value: 'AL', label: 'Alabama' },\r\n    { value: 'AK', label: 'Alaska' },\r\n    { value: 'AS', label: 'American Samoa' },\r\n    { value: 'AZ', label: 'Arizona' },\r\n    { value: 'AR', label: 'Arkansas' },\r\n    { value: 'CA', label: 'California' },\r\n    { value: 'CO', label: 'Colorado' },\r\n    { value: 'CT', label: 'Connecticut' },\r\n    { value: 'DE', label: 'Delaware' },\r\n    { value: 'DC', label: 'District Of Columbia' },\r\n    { value: 'FM', label: 'Federated States Of Micronesia' },\r\n    { value: 'FL', label: 'Florida' },\r\n    { value: 'GA', label: 'Georgia' },\r\n    { value: 'GU', label: 'Guam' },\r\n    { value: 'HI', label: 'Hawaii' },\r\n    { value: 'ID', label: 'Idaho' },\r\n    { value: 'IL', label: 'Illinois' },\r\n    { value: 'IN', label: 'Indiana' },\r\n    { value: 'IA', label: 'Iowa' },\r\n    { value: 'KS', label: 'Kansas' },\r\n    { value: 'KY', label: 'Kentucky' },\r\n    { value: 'LA', label: 'Louisiana' },\r\n    { value: 'ME', label: 'Maine' },\r\n    { value: 'MH', label: 'Marshall Islands' },\r\n    { value: 'MD', label: 'Maryland' },\r\n    { value: 'MA', label: 'Massachusetts' },\r\n    { value: 'MI', label: 'Michigan' },\r\n    { value: 'MN', label: 'Minnesota' },\r\n    { value: 'MS', label: 'Mississippi' },\r\n    { value: 'MO', label: 'Missouri' },\r\n    { value: 'MT', label: 'Montana' },\r\n    { value: 'NE', label: 'Nebraska' },\r\n    { value: 'NV', label: 'Nevada' },\r\n    { value: 'NH', label: 'New Hampshire' },\r\n    { value: 'NJ', label: 'New Jersey' },\r\n    { value: 'NM', label: 'New Mexico' },\r\n    { value: 'NY', label: 'New York' },\r\n    { value: 'NC', label: 'North Carolina' },\r\n    { value: 'ND', label: 'North Dakota' },\r\n    { value: 'MP', label: 'Northern Mariana Islands' },\r\n    { value: 'OH', label: 'Ohio' },\r\n    { value: 'OK', label: 'Oklahoma' },\r\n    { value: 'OR', label: 'Oregon' },\r\n    { value: 'PW', label: 'Palau' },\r\n    { value: 'PA', label: 'Pennsylvania' },\r\n    { value: 'PR', label: 'Puerto Rico' },\r\n    { value: 'RI', label: 'Rhode Island' },\r\n    { value: 'SC', label: 'South Carolina' },\r\n    { value: 'SD', label: 'South Dakota' },\r\n    { value: 'TN', label: 'Tennessee' },\r\n    { value: 'TX', label: 'Texas' },\r\n    { value: 'UT', label: 'Utah' },\r\n    { value: 'VT', label: 'Vermont' },\r\n    { value: 'VI', label: 'Virgin Islands' },\r\n    { value: 'VA', label: 'Virginia' },\r\n    { value: 'WA', label: 'Washington' },\r\n    { value: 'WV', label: 'West Virginia' },\r\n    { value: 'WI', label: 'Wisconsin' },\r\n    { value: 'WY', label: 'Wyoming' },\r\n];\r\n\r\nexport const groupedOptions = [\r\n    {\r\n        label: 'General',\r\n        options: generalOptions,\r\n    },\r\n    {\r\n        label: 'Laptop',\r\n        options: laptop,\r\n    },\r\n    ,\r\n    {\r\n        label: 'States',\r\n        options: stateOptions,\r\n    },\r\n];","// Option List for select Product Color\r\nconst product_color_options = [\r\n    // A\r\n    { value: 'Apricot', label: 'Apricot' },\r\n    { value: 'Aquamarine', label: 'Aquamarine' },\r\n    // B\r\n    { value: 'Black', label: 'Black' },\r\n    { value: 'Blue', label: 'Blue' },\r\n    { value: 'Bronze', label: 'Bronze' },\r\n    { value: 'Baby-Blue', label: 'Baby-Blue' },\r\n    { value: 'Blue-Green', label: 'Blue-Green' },\r\n    { value: 'Blue-Violet', label: 'Blue-Violet' },\r\n    // C\r\n    { value: 'Chocolate', label: 'Chocolate' },\r\n    { value: 'Coffee', label: 'Coffee' },\r\n    { value: 'Cyan', label: 'Cyan' },\r\n    // D\r\n    { value: 'Desert-Sand', label: 'Desert-Sand' },\r\n    // G\r\n    { value: 'Gray', label: 'Gray' },\r\n    { value: 'Green', label: 'Green' },\r\n    // I\r\n    { value: 'Indigo', label: 'Indigo' },\r\n    // L\r\n    { value: 'Lime', label: 'Lime' },\r\n    // M\r\n    { value: 'Magenta', label: 'Magenta' },\r\n    { value: 'Maroon', label: 'Maroon' },\r\n    // N\r\n    { value: 'Navy', label: 'Navy' },\r\n    { value: 'Navy-Blue', label: 'Navy-Blue' },\r\n    // O\r\n    { value: 'Orange', label: 'Orange' },\r\n    { value: 'Olive', label: 'Olive' },\r\n    // P\r\n    { value: 'Pink', label: 'Pink' },\r\n    { value: 'Peach', label: 'Peach' },\r\n    { value: 'Purple', label: 'Purple' },\r\n    // R\r\n    { value: 'Red', label: 'Chocolate' },\r\n    { value: 'Rose', label: 'Rose' },\r\n    { value: 'Red-Violet', label: 'Red-Violet' },\r\n    // S\r\n    { value: 'Silver', label: 'Silver' },\r\n    { value: 'Sky-Blue', label: 'Sky-Blue' },\r\n    // T\r\n    { value: 'Tan', label: 'Tan' },\r\n    { value: 'Teal', label: 'Teal' },\r\n    { value: 'Turquoise', label: 'Turquoise' },\r\n    // V\r\n    { value: 'Violet', label: 'Violet' },\r\n    // W\r\n    { value: 'White', label: 'White' },\r\n    // Y\r\n    { value: 'Yellow', label: 'Yellow' },\r\n]\r\n\r\nexport default product_color_options;","// Option List for select Product Size\r\nconst product_size_options = [\r\n    { value: 'X-S', label: 'X-Small' },\r\n    { value: 'S', label: 'Small' },\r\n    { value: 'M', label: 'Medium' },\r\n    { value: 'L', label: 'Large' },\r\n    { value: 'X-L', label: 'X-Large' },\r\n    { value: '10', label: '10' },\r\n    { value: '11', label: '11' },\r\n    { value: '12', label: '12' },\r\n    { value: '13', label: '13' },\r\n    { value: '14', label: '14' },\r\n    { value: '15', label: '15' },\r\n    { value: '16', label: '16' },\r\n    { value: '17', label: '17' },\r\n    { value: '18', label: '18' },\r\n    { value: '19', label: '19' },\r\n    { value: '20', label: '20' },\r\n    { value: '21', label: '20' },\r\n    { value: '22', label: '20' },\r\n    { value: '23', label: '20' },\r\n    { value: '24', label: '20' },\r\n    { value: '25', label: '20' },\r\n    { value: '26', label: '20' },\r\n    { value: '27', label: '20' },\r\n    { value: '28', label: '20' },\r\n    { value: '29', label: '20' },\r\n    { value: '30', label: '30' },\r\n    { value: '31', label: '31' },\r\n    { value: '32', label: '32' },\r\n    { value: '33', label: '33' },\r\n    { value: '34', label: '34' },\r\n    { value: '35', label: '35' },\r\n    { value: '36', label: '36' },\r\n    { value: '37', label: '37' },\r\n    { value: '38', label: '38' },\r\n    { value: '49', label: '49' },\r\n    { value: '40', label: '40' },\r\n    { value: '41', label: '41' },\r\n    { value: '42', label: '42' },\r\n    { value: '43', label: '43' },\r\n    { value: '44', label: '44' },\r\n    { value: '45', label: '45' },\r\n    { value: '46', label: '46' },\r\n    { value: '47', label: '47' },\r\n    { value: '48', label: '48' },\r\n    { value: '49', label: '49' },\r\n    { value: '50', label: '50' },\r\n    { value: '51', label: '51' },\r\n    { value: '52', label: '52' },\r\n    { value: '53', label: '53' },\r\n    { value: '54', label: '54' },\r\n    { value: '55', label: '55' },\r\n    { value: '56', label: '56' },\r\n    { value: '57', label: '57' },\r\n    { value: '58', label: '58' },\r\n    { value: '59', label: '59' },\r\n    { value: '60', label: '60' },\r\n    { value: '61', label: '61' },\r\n    { value: '62', label: '62' },\r\n    { value: '63', label: '63' },\r\n    { value: '64', label: '64' },\r\n    { value: '65', label: '65' },\r\n    { value: '66', label: '66' },\r\n    { value: '67', label: '67' },\r\n    { value: '67', label: '68' },\r\n    { value: '69', label: '69' },\r\n    { value: '70', label: '70' },\r\n    { value: '71', label: '71' },\r\n    { value: '72', label: '72' },\r\n    { value: '73', label: '73' },\r\n    { value: '74', label: '74' },\r\n    { value: '75', label: '75' },\r\n    { value: '76', label: '76' },\r\n    { value: '77', label: '77' },\r\n    { value: '78', label: '78' },\r\n    { value: '79', label: '79' },\r\n    { value: '80', label: '80' },\r\n    { value: '81', label: '81' },\r\n    { value: '82', label: '82' },\r\n    { value: '83', label: '83' },\r\n    { value: '84', label: '84' },\r\n    { value: '85', label: '85' },\r\n    { value: '86', label: '86' },\r\n    { value: '87', label: '87' },\r\n    { value: '88', label: '88' },\r\n    { value: '89', label: '89' },\r\n    { value: '90', label: '90' },\r\n    { value: '91', label: '91' },\r\n    { value: '92', label: '92' },\r\n    { value: '93', label: '93' },\r\n    { value: '94', label: '94' },\r\n    { value: '95', label: '95' },\r\n    { value: '96', label: '96' },\r\n    { value: '97', label: '97' },\r\n    { value: '98', label: '98' },\r\n    { value: '99', label: '99' },\r\n    { value: '100', label: '100' },\r\n\r\n]\r\n\r\nexport default product_size_options;\r\n","// export default AuthenticationService;\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n// import { useRouter } from 'next/router'\r\n// import Router from 'next/router'\r\n\r\nimport * as decode from 'jwt-decode'\r\nimport Router from 'next/router'\r\n\r\nconst AuthenticationService = () => (\r\n    <div></div>\r\n)\r\n\r\nexport async function saveTokenToStorage(token) {\r\n    await reactLocalStorage.set('token', token);\r\n}\r\n\r\nexport function getTokenFromStorage() {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        return decodedToken.data;\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function getUncodededTokenFromStorage() {\r\n    return reactLocalStorage.get('token');\r\n}\r\n\r\nexport function removeTokenFromStorage() {\r\n    try {\r\n        reactLocalStorage.remove('token');\r\n        Router.replace('/index');\r\n        Router.reload('/index');\r\n    } catch (error) {\r\n        console.log(\"error:\", error)\r\n    }\r\n}\r\n\r\nexport function chectAuth(rolee) {\r\n    try {\r\n        const token = reactLocalStorage.get('token');\r\n        const decodedToken = decode(token);\r\n        if (decodedToken.data.role == 'admin') {\r\n            return decodedToken.data.fullName;\r\n        } else if (decodedToken.data.role !== rolee) {\r\n            Router.replace('/index')\r\n        } else {\r\n            return decodedToken.data.fullName;\r\n        }\r\n    } catch (error) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default AuthenticationService;","// export default class MuhalikConfig {\r\nconst path = 'https://muhalik.herokuapp.com';\r\n// const path = 'http://localhost:5000';\r\n\r\n//     static getPath() {\r\n//       return MySouqConfig.path;\r\n//     }\r\n//   }\r\n\r\nconst MuhalikConfig = {\r\n    PATH: path,\r\n}\r\n\r\nexport default MuhalikConfig;","\r\n// export const GlobalStyleSheet = {\r\n//     // primry_color: '#563D7C',\r\n//     primry_color: '#28A745',\r\n//     primary_text_color: 'white',\r\n// }\r\n\r\nlet GlobalStyleSheet = {\r\n    // primry_color: '#563D7C',\r\n    primry_color: '#28A745',\r\n\r\n    admin_primry_color: '#373948',\r\n    primary_text_color: 'white',\r\n\r\n    // Body color\r\n    body_color: '#F1F1F1',\r\n    // body_color: '#DDE1E3',\r\n    // body_color: '#F0F0F0',\r\n\r\n    // Fontsize for all the labels of any form control (input, textbox etc):\r\n    form_label_fontsize: '13px',\r\n}\r\n\r\nexport default GlobalStyleSheet;\r\n\r\n\r\n// \"45: [Product upload page added]\"\r\n// \"46: [Admin/Vendor Dashboard Mobile View Toolbar Error Solved]\"\r\n// \"47: [Product upload connected to backend(produck modal updated)]\"\r\n// \"48: [Admin/Vendor Layout Updated]\"\"\r\n// 49: git commit -m \"49: [jwt_token added and route redirect added]\"\r\n//  50 [header set into post request]git commit -m \"\"\r\n// 51 git commit -m \"51: [routing-guard/toast added & login/signup/v-signup layout updated & index.js updated]\"\r\n// 52 git commit -m \"52: [Index.js updated, signup updated]\"\r\n// 53 git commit -m \"53: [vendor dashboard layout updated]\"\r\n// 54[add product updated(simple & variable product), layout changed]","module.exports = require(\"@fortawesome/free-brands-svg-icons\");","module.exports = require(\"@fortawesome/free-regular-svg-icons\");","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"axios\");","module.exports = require(\"formik\");","module.exports = require(\"isomorphic-unfetch\");","module.exports = require(\"jwt-decode\");","module.exports = require(\"next/head\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-bootstrap\");","module.exports = require(\"react-select\");","module.exports = require(\"react-select-material-ui\");","module.exports = require(\"react-select/creatable\");","module.exports = require(\"reactjs-localstorage\");","module.exports = require(\"styled-jsx/style\");","module.exports = require(\"yup\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AAFA;AAeA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAnBA;AAoBA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxBA;AA0BA;AAAA;AAAA;AACA;AACA;AA1BA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AApDA;AACA;AAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzv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;;;;;;;;;;;;;;;;;;;;;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1EA;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA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ACA;AACA;AACA;AACA;AAFA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1EA;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkaA;AACA;AArVA;AACA;AAsVA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA9BA;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAgEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA1EA;AAyHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAjIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAVA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkaA;AACA;AApVA;AACA;AAqVA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AAFA;AAIA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AA9BA;AAuCA;;;;;;;;;;;;;;;;;;;;ACvoGA;AACA;AAxGA;AACA;AAyGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAvBA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtzCA;AAmDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrjOA;AAAA;AAAA;AAAA;;AAAA;AA4SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAhFA;AA0FA;;;;;;;;;;;;;;;;;;;;;ACxaA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAJA;AAAA;AAAA;;AAAA;AACA;AA2BA;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AAAA;AACA;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAnBA;AACA;AA2BA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAOA;AAEA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA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;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzzBA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AAGA;AACA;AACA;AAFA;AACA;AACA;AAIA;AACA;AAGA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAIA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAIA;AAIA;AAGA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AApEA;AACA;AAuEA;AACA;AACA;AACA;AAFA;AAoGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtGA;AAuGA;AAAA;AAAA;AACA;AACA;AAzGA;AA0GA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AAvHA;AA+HA;AAAA;AAAA;AACA;AACA;AAjIA;AAkIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjJA;AAkJA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAvKA;AAsLA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AA1LA;AA2LA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA/LA;AAoMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAxMA;AAyMA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApNA;AAsNA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA1NA;AA2NA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AArOA;AAuOA;AAAA;AAAA;AACA;AACA;AAzOA;AA0OA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AApPA;AAsPA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA9PA;AA+PA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAvQA;AAwQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AA9QA;AA+QA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAnRA;AAoRA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAxRA;AAyRA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA9SA;AA+SA;AACA;AACA;AAEA;AACA;AACA;AACA;AAtTA;AAiUA;AAAA;AAAA;AACA;AACA;AAnUA;AAoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AA/VA;AAgWA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AApWA;AAqWA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAzWA;AA+WA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAjXA;AAoXA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhYA;AAmYA;AAAA;AAAA;AACA;AACA;AAnYA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AA/CA;AAiDA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAmBA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAyCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAiIA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAspBA;AAuBA;AACA;AAAA;AACA;AACA;AACA;AArGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAA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AA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnWA;AAAA;AAAA;AAAA;;AAAA;AAmZA;AACA;AAh5BA;AACA;AAi5BA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAxEA;AAiFA;;;;;;;;;;;;ACrlzrGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;ACxDA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;;;;;;;;;;;;ACZA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAbA;AAgBA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnCA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}