{"version":3,"file":"static/webpack/static\\development\\pages\\admin.js.739e7e28f8f3814dbed9.hot-update.js","sources":["webpack:///./src/pages/components/vendor/dashboard/dashboard-contents/product-contents/add-new.js"],"sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Accordion, Form, Col, Row, Card, InputGroup, Button, Toast, Alert, Nav, Tabs, Spinner } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n    faPlus, faArrowLeft, faExclamationTriangle,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faThumbsUp, faThumbsDown } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport CreatableSelect from 'react-select/creatable';\r\nimport Select from 'react-select';\r\n\r\nimport AlertModal from '../../../../alert-modal';\r\n\r\nimport GlobalStyleSheet from '../../../../../../styleSheet';\r\nimport TitleRow from '../../../../title-row';\r\nimport CardAccordion from '../../../../card_accordion';\r\n\r\nimport MuhalikConfig from '../../../../../../sdk/muhalik.config';\r\nimport { getUncodededTokenFromStorage } from '../../../../../../sdk/core/authentication-service';\r\nimport CustomFields from './add-new-contents/custom-fields';\r\nimport ProductData from './add-new-contents/product-data';\r\nimport product_size_options from '../../../../../../sdk/consts/product-size-options'\r\nimport product_color_options from '../../../../../../sdk/consts/product-color-options'\r\n// Option List for select Product Category (when offline)\r\nlet product_categories_options = [\r\n    { value: 'Shoe', label: 'Shoe' },\r\n    { value: 'Cloth', label: 'Cloth' },\r\n    { value: 'Shirt', label: 'Shirt' },\r\n    { value: 'Pant', label: 'Pant' }\r\n]\r\nconst product_sub_categories_options = [\r\n    { value: 'Sub Shoe', label: 'Sub Shoe' },\r\n    { value: 'Sub Cloth', label: 'Sub Cloth' },\r\n    { value: 'Sub Shirt', label: 'Sub Shirt' },\r\n]\r\n\r\n// For React-Select\r\nconst components = {\r\n    DropdownIndicator: null,\r\n};\r\n// Model For React-Select\r\nconst createOption = (label) => ({\r\n    value: label,\r\n    label,\r\n});\r\n\r\n\r\n\r\n// Yup Schema for validation fields\r\nconst schema = yup.object({\r\n    product_name: yup.string().required(\"Enter Product Name\")\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n\r\n    product_description: yup.string()\r\n        .min(5, \"Must have at least 5 characters\")\r\n        .max(200, \"Can't be longer than 200 characters\"),\r\n    // Product Data\r\n    product_type: yup.string(),\r\n    // => Inventory\r\n    sku: yup.string()\r\n        .min(0, 'Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => General(Simple-Product)\r\n    product_price: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 1-1000000')\r\n        .max(1000000, 'Enter Between 1-1000000'),\r\n    product_in_stock: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 1-1000000')\r\n        .max(1000000, \"Can't be longer than 1000000\"),\r\n    product_brand_name: yup.string()\r\n        .min(2, \"Must have at least 2 characters\")\r\n        .max(40, \"Can't be longer than 40 characters\"),\r\n    product_image_link: yup.string(),\r\n    product_warranty: yup.number().integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 1-1000')\r\n        .max(1000, 'Enter Between 0-1000'),\r\n    warranty_type: yup.string(),\r\n    product_discount: yup.number().integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-100')\r\n        .max(100, 'Enter Between 0-100'),\r\n    // => Attributes (Variable Product)\r\n    purchase_note: yup.string(),\r\n    // => Variations (Variable Product)\r\n    product_variations: yup.string(),\r\n    // => Shipping\r\n    product_weight: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, \"Can't be longer than 10000\"),\r\n    dimension_length: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, \"Can't be longer than 10000\"),\r\n    dimension_width: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, \"Can't be longer than 10000\"),\r\n    dimension_height: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, \"Can't be longer than 10000\"),\r\n    shipping_charges: yup.number(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, 'Enter Between 0-10000'),\r\n    handling_fee: yup.number()\r\n        .integer(\"Enter Only Numbers\")\r\n        .positive('Enter Between 0-10000')\r\n        .max(10000, \"Can't be longer than 1000\"),\r\n    // => Advanve\r\n    purchase_note: yup.string(),\r\n    // Custom Fields\r\n    custom_fields: yup.string(),\r\n\r\n    category_id: yup.string(),\r\n    sub_category_id: yup.string(),\r\n\r\n    dangerous_goods: yup.string(),\r\n    product_tags: yup.string(),\r\n});\r\n\r\n\r\nclass AddNew extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateProduct: this.props.isUpdateProduct,\r\n            _id: this.props._id,\r\n            isLoading: false,\r\n            showToast: false,\r\n            toastMessage: '',\r\n            showVariationsErrorAlert: false,\r\n            showSimpleProductPriceImgLinkErrorrAlert: false,\r\n            isVariableProduct: this.props.isVariableProduct,\r\n\r\n            productCategories: this.props.productCategories,\r\n            productSubCategories: this.props.productSubCategories,\r\n            category_id: '',\r\n            sub_category_id: '',\r\n            category_options: product_categories_options,\r\n            sub_category_list: product_sub_categories_options,\r\n            sub_category_options: [],\r\n\r\n            subCategoryDisabled: true,\r\n            categoryErrorDiv: 'BorderDiv',\r\n            subCategoryErrorDiv: 'BorderDiv',\r\n\r\n            productTags: this.props.productTags,\r\n\r\n            warrantyType: this.props.warrantyType,\r\n            inputValue: '',\r\n            simple_product_image_link: this.props.simple_product_image_link,\r\n\r\n            variationsArray: this.props.variationsArray,\r\n            isVariationsSaved: false,\r\n\r\n            // Custom Fields\r\n            customFieldsArray: [],\r\n\r\n            files: [],\r\n            imagePreviewArray: [],\r\n            // Dangerous Goods\r\n            dangerousGoodsArray: this.props.dangerousGoodsArray,\r\n        };\r\n        // this.handleProductTypeChange = this.handleProductTypeChange.bind(this);\r\n    }\r\n\r\n    // Getting Product Categories from DB\r\n    async componentDidMount() {\r\n        const url = MuhalikConfig.PATH + '/api/categories/categories';\r\n        const url_1 = MuhalikConfig.PATH + '/api/categories/fields';\r\n        const url_2 = MuhalikConfig.PATH + '/api/categories/tags';\r\n        const token = await getUncodededTokenFromStorage()\r\n\r\n        const currentComponent = this;\r\n        await axios.get(url, {\r\n            headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n        }).then((response) => {\r\n            currentComponent.setState({\r\n                category_options: response.data.category.docs,\r\n                sub_category_list: response.data.sub_category.docs\r\n            });\r\n        }).catch((error) => {\r\n            console.log('Caterories_1 Fetchig Error: ', error)\r\n        })\r\n\r\n        await axios.get(url_1, {\r\n            headers: { 'authorization': token }\r\n        }).then((response) => {\r\n            // console.log('fields:', response.data)\r\n        }).catch((error) => {\r\n            // console.log('fuck:', error)\r\n            // alert('fields Fetchig Error: ', error.response.data.message)\r\n        })\r\n        await axios.get(url_2, {\r\n            headers: { 'authorization': token }\r\n        }).then((response) => {\r\n            // console.log('tags:', response.data)\r\n        }).catch((error) => {\r\n            // alert('tags Fetchig Error: ', error)\r\n        })\r\n    }\r\n\r\n    async uploadProduct(values, currentComponent) {\r\n        console.log('values: ', values)\r\n        const formData = new FormData();\r\n        formData.append('product_name', values.product_name)\r\n        formData.append('product_description', values.product_description)\r\n        formData.append('product_type', values.product_type)\r\n        formData.append('sku', values.sku)\r\n        formData.append('product_price', values.product_price)\r\n        formData.append('product_in_stock', values.product_in_stock)\r\n        formData.append('product_brand_name', values.product_brand_name)\r\n        formData.append('product_image_link', '')\r\n        values.product_image_link && values.product_image_link.forEach(element => {\r\n            formData.append('myImage', element)\r\n        })\r\n        values.product_variations && values.product_variations.forEach((element, index) => {\r\n            let array = [];\r\n            element.image_link && element.image_link.forEach(file => {\r\n                formData.append('myImage', file)\r\n                array.push({ name: file.name })\r\n            })\r\n            element.image_link = array\r\n        })\r\n        formData.append('product_warranty', values.product_warranty)\r\n        formData.append('warranty_type', values.warranty_type)\r\n        formData.append('product_discount', values.product_discount)\r\n        formData.append('purchase_note', values.purchase_note)\r\n        formData.append('product_variations', JSON.stringify(values.product_variations))\r\n        formData.append('product_weight', values.product_weight)\r\n        formData.append('dimension_length', values.dimension_length)\r\n        formData.append('dimension_width', values.dimension_width)\r\n        formData.append('dimension_height', values.dimension_height)\r\n        formData.append('shipping_charges', values.shipping_charges)\r\n        formData.append('handling_fee', values.handling_fee)\r\n        formData.append('custom_fields', JSON.stringify(values.custom_fields))\r\n        formData.append('category_id', values.category_id)\r\n        formData.append('sub_category_id', values.sub_category_id)\r\n        formData.append('dangerous_goods', JSON.stringify(values.dangerous_goods))\r\n        formData.append('product_tags', JSON.stringify(values.product_tags))\r\n\r\n        if (this.state.isUpdateProduct == false) {\r\n            const url = MuhalikConfig.PATH + '/api/products/add'\r\n            const config = {\r\n                headers: {\r\n                    'content-type': 'multipart/form-data',\r\n                    'authorization': await getUncodededTokenFromStorage(),\r\n                }\r\n            };\r\n            axios.post(url, formData, config)\r\n                .then((response) => {\r\n                    currentComponent.setState({ isLoading: false });\r\n                    currentComponent.setState({ showToast: true, toastMessage: 'Product Uploaded Successfully' });\r\n                    return true;\r\n                }).catch((error) => {\r\n                    currentComponent.setState({ isLoading: false });\r\n                    alert('Product Upload failed');\r\n                    return false;\r\n                });\r\n        } else {\r\n            const url = MuhalikConfig.PATH + `/api/products/${this.state._id}`\r\n            await axios.put(url, {\r\n                data\r\n            }, {\r\n                headers: { 'authorization': await getUncodededTokenFromStorage() }\r\n            }).then(function (response) {\r\n                currentComponent.setState({ isLoading: false });\r\n                currentComponent.setState({ showToast: true, toastMessage: 'Product Updated Successfully' });\r\n                return true;\r\n            }).catch(function (error) {\r\n                currentComponent.setState({ isLoading: false });\r\n                alert('Product Update failed');\r\n                return false;\r\n            });\r\n        }\r\n    }\r\n\r\n    // Custom Fields\r\n    handleSaveCustomFieldsBtnClick() {\r\n        if (this.state.isVariableProduct == true) {\r\n            const copyArray = Object.assign([], this.state.variationsArray)\r\n            copyArray.forEach(element => {\r\n                this.state.customFieldsArray.forEach(e => {\r\n                    element.custom_fields.push({\r\n                        name: e.name,\r\n                        value: e.value\r\n                    });\r\n                })\r\n            });\r\n            this.setState({ variationsArray: copyArray, customFieldsArray: [] })\r\n        }\r\n    }\r\n\r\n\r\n    // Product Category\r\n    handleProductCategoryChange = (value) => {\r\n        let array = []\r\n        let _id = null\r\n        this.state.category_options.forEach(element => {\r\n            if (value.label == element.label) {\r\n                _id = element._id\r\n            }\r\n        })\r\n        this.state.sub_category_list.forEach(element => {\r\n            if (element.category_id == _id) {\r\n                array.push(element)\r\n            }\r\n        })\r\n        this.setState({\r\n            productCategories: value, sub_category_options: array,\r\n            subCategoryDisabled: false, categoryErrorDiv: 'BorderDiv',\r\n            category_id: _id\r\n        });\r\n    }\r\n    handleProductSubCategoryChange = (value) => {\r\n        let _id = null\r\n        this.state.sub_category_options.forEach(element => {\r\n            if (value.label == element.label) {\r\n                _id = element._id\r\n            }\r\n        })\r\n        this.setState({\r\n            productSubCategories: value,\r\n            subCategoryErrorDiv: 'BorderDiv',\r\n            sub_category_id: _id\r\n        });\r\n    }\r\n\r\n    // Dangerous Goods\r\n    handleDangerousGoodsChange = (e, name) => {\r\n        const copyArray = Object.assign([], this.state.dangerousGoodsArray);\r\n        if (e.target.checked) {\r\n            copyArray.push({ value: name });\r\n        } else {\r\n            copyArray.forEach((element, index) => {\r\n                if (element.value == name) {\r\n                    copyArray.splice(index, 1)\r\n                }\r\n            });\r\n        }\r\n        this.setState({ dangerousGoodsArray: copyArray });\r\n    }\r\n\r\n    // Product Tags\r\n    handleProductTagChange = (arr) => {\r\n        this.setState({ productTags: arr });\r\n    };\r\n\r\n\r\n    async fileSelectedHandler(e) {\r\n        await this.setState({ files: [...this.state.files, ...e.target.files] })\r\n\r\n        let array = []\r\n        this.state.files.forEach(element => {\r\n            array.push(URL.createObjectURL(element))\r\n        })\r\n\r\n        this.setState({ imagePreviewArray: array })\r\n    }\r\n    deleteImage = (index) => {\r\n        const copyArray = Object.assign([], this.state.files)\r\n        const imgCopyArray = Object.assign([], this.state.imagePreviewArray)\r\n        copyArray.splice(index, 1)\r\n        imgCopyArray.splice(index, 1)\r\n        this.setState({ files: copyArray, imagePreviewArray: imgCopyArray })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Formik\r\n                validationSchema={schema}\r\n                initialValues={\r\n                    this.props.isUpdateProduct ?\r\n                        {\r\n                            product_name: this.props.product_name,\r\n                            product_description: this.props.product_description,\r\n                            product_type: this.props.product_type,\r\n                            sku: this.props.sku,\r\n                            product_price: this.props.product_price,\r\n                            product_in_stock: this.props.product_in_stock,\r\n                            product_brand_name: this.props.product_brand_name,\r\n                            // product_image_link:this.props.product_image_link}\r\n                            product_warranty: this.props.product_warranty,\r\n                            warranty_type: this.props.warranty_type,\r\n                            product_discount: this.props.product_discount,\r\n                            purchase_note: this.props.purchase_note,\r\n                            // product_variations:this.props.product_variations}\r\n                            product_weight: this.props.product_weight,\r\n                            dimension_length: this.props.dimension_length,\r\n                            dimension_width: this.props.dimension_width,\r\n                            dimension_height: this.props.dimension_height,\r\n                            shipping_charges: this.props.shipping_charges,\r\n                            handling_fee: this.props.handling_fee,\r\n                        }\r\n                        :\r\n                        {\r\n                            product_type: 'simple-product',\r\n                            product_price: '',\r\n                            product_in_stock: '',\r\n                            product_name: '',\r\n                            product_description: '',\r\n                            sku: '',\r\n                            product_brand_name: '',\r\n                            product_image_link: '',\r\n                            product_warranty: '',\r\n                            warranty_type: '',\r\n                            product_discount: '',\r\n                            purchase_note: '',\r\n                            product_variations: [],\r\n                            product_weight: '',\r\n                            dimension_length: '',\r\n                            dimension_width: '',\r\n                            dimension_height: '',\r\n                            shipping_charges: '',\r\n                            handling_fee: '',\r\n                            custom_fields: [],\r\n                            category_id: '',\r\n                            sub_category_id: '',\r\n                            dangerous_goods: [],\r\n                            product_tags: [],\r\n                        }\r\n                }\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    if (this.state.productCategories == '' || this.state.productSubCategories == '') {\r\n                        if (this.state.productCategories == '') {\r\n                            this.setState({ categoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n                        if (this.state.productSubCategories == '') {\r\n                            this.setState({ subCategoryErrorDiv: 'RedBorderDiv' });\r\n                        }\r\n\r\n                        setSubmitting(false);\r\n                    } else if (values.product_type != 'variable-prouct' && (values.product_price == '' || values.product_in_stock == '' || this.state.files == '')) {\r\n                        this.setState({ showSimpleProductPriceImgLinkErrorrAlert: true });\r\n                    } else if (this.state.isVariationsSaved == false && values.product_type == 'variable-prouct') {\r\n                        this.setState({ showVariationsErrorAlert: true });\r\n                    } else {\r\n                        resetForm();\r\n                        setSubmitting(true);\r\n                        this.setState({ isLoading: true });\r\n                        setTimeout(() => {\r\n                            let array = [];\r\n                            values.category_id = this.state.category_id;\r\n                            values.sub_category_id = this.state.sub_category_id;\r\n                            values.product_tags = this.state.productTags;\r\n\r\n                            values.dangerous_goods = this.state.dangerousGoodsArray;\r\n\r\n                            if (!this.state.isVariableProduct) {\r\n                                values.product_image_link = this.state.files;\r\n                                values.custom_fields = this.state.customFieldsArray;\r\n                            } else {\r\n                                array = [];\r\n                                this.state.variationsArray.forEach((element, index) => {\r\n                                    let item = []\r\n                                    element.item.forEach(e => {\r\n                                        item.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    let item_1 = []\r\n                                    element.custom_fields.forEach(e => {\r\n                                        item_1.push({ name: e.name, value: e.value })\r\n                                    });\r\n                                    array.push({ item: item, custom_fields: item_1, price: element.price, stock: element.stock, image_link: element.image_link })\r\n                                })\r\n                                values.product_variations = array;\r\n                            }\r\n                            resetForm();\r\n\r\n                            if (this.uploadProduct(values, this)) {\r\n                                this.setState({\r\n                                    showVariationsErrorAlert: false,\r\n                                    showSimpleProductPriceImgLinkErrorrAlert: false,\r\n                                    isVariableProduct: false,\r\n\r\n                                    productCategories: '',\r\n                                    productSubCategories: '',\r\n\r\n                                    subCategoryDisabled: true,\r\n                                    subSubCategoryDisabled: true,\r\n\r\n                                    categoryErrorDiv: 'BorderDiv',\r\n                                    subCategoryErrorDiv: 'BorderDiv',\r\n                                    productTags: [],\r\n\r\n                                    warrantyType: '',\r\n                                    inputValue: '',\r\n                                    files: [],\r\n\r\n                                    variationsArray: [],\r\n                                    isVariationsSaved: false,\r\n\r\n                                    // Custom Fields\r\n                                    customFieldsArray: [],\r\n\r\n                                    // Dangerous Goods\r\n                                    dangerousGoodsArray: [],\r\n                                });\r\n                            }\r\n                            setSubmitting(false);\r\n                        }, 500);\r\n                    }\r\n                }}>\r\n                {({\r\n                    handleSubmit, handleChange, values, touched, isValid, errors, handleBlur, isSubmitting\r\n                }) => (\r\n                        <div>\r\n                            <TitleRow icon={faPlus} title={this.props.title} />\r\n                            {this.props.isUpdateProduct ?\r\n                                <Form.Row style={{ margin: ' 0% 2%', display: 'flex', alignItems: 'center' }} >\r\n                                    <Nav.Link style={{ fontSize: '14px' }} className=\"mr-auto\" onClick={this.props.back}>Back</Nav.Link>\r\n                                    <div className=\"mr-auto\" style={{ fontSize: '14px' }}> {this.props.product_name}</div>\r\n                                    <Nav.Link style={{ fontSize: '14px' }} onClick={this.props.view}> View </Nav.Link>\r\n                                    <Nav.Link style={{ fontSize: '14px' }} onClick={this.props.delete}> Delete </Nav.Link>\r\n                                </Form.Row>\r\n                                :\r\n                                null\r\n                            }\r\n                            <Form noValidate onSubmit={handleSubmit}>\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showToast: false })}\r\n                                    show={this.state.showToast}\r\n                                    header={'Success'}\r\n                                    message={this.state.toastMessage}\r\n                                    iconName={faThumbsUp}\r\n                                    color={\"#00b300\"}\r\n                                />\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showVariationsErrorAlert: false })}\r\n                                    show={this.state.showVariationsErrorAlert}\r\n                                    header={'Error'}\r\n                                    message={'Please Add/Save Variations First'}\r\n                                    iconName={faExclamationTriangle}\r\n                                    color={\"#ff3333\"}\r\n                                />\r\n                                <AlertModal\r\n                                    onHide={(e) => this.setState({ showSimpleProductPriceImgLinkErrorrAlert: false })}\r\n                                    show={this.state.showSimpleProductPriceImgLinkErrorrAlert}\r\n                                    header={'Error'}\r\n                                    message={'Enter Price/Stock/Image(s) in General Tab First'}\r\n                                    iconName={faExclamationTriangle}\r\n                                    color={\"#ff3333\"}\r\n                                />\r\n                                <Row noGutters style={{ paddingTop: '1%' }}>\r\n                                    <Col lg={9} md={9} sm={12} xs={12}>\r\n                                        {/* Product Name */}\r\n                                        <Form.Group as={Row} style={{ margin: '0.5% 2% 2% 2%', padding: '0%' }}>\r\n                                            <Form.Label style={styles.label}>Product Name<span>*</span></Form.Label>\r\n                                            <InputGroup>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Enter Product Name\"\r\n                                                    name=\"product_name\"\r\n                                                    value={values.product_name || ''}\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={errors.product_name && touched.product_name}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.product_name}\r\n                                                </Form.Control.Feedback>\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        {/* End of Product Name */}\r\n\r\n                                        {/* Product Discription */}\r\n                                        <CardAccordion title={'Product Discruption'}>\r\n                                            <Form.Group>\r\n                                                <Form.Control\r\n                                                    as=\"textarea\"\r\n                                                    placeholder=\"Enter Product Description\"\r\n                                                    name=\"product_description\"\r\n                                                    value={values.product_description || ''}\r\n                                                    rows=\"7\"\r\n                                                    onChange={handleChange}\r\n                                                    isInvalid={errors.product_description && touched.product_description}\r\n                                                />\r\n                                                <Form.Control.Feedback type=\"invalid\">\r\n                                                    {errors.product_description}\r\n                                                </Form.Control.Feedback>\r\n                                            </Form.Group>\r\n                                        </CardAccordion>\r\n                                        {/* Product Data Row */}\r\n                                        <ProductData\r\n                                            isUpdateProduct={this.props.isUpdateProduct}\r\n                                            productTypeHandler={e => {\r\n                                                if (e.target.value === 'variable-prouct') {\r\n                                                    this.setState({\r\n                                                        isVariableProduct: true\r\n                                                    })\r\n                                                } else {\r\n                                                    this.setState({\r\n                                                        isVariableProduct: false\r\n                                                    })\r\n                                                }\r\n                                            }}\r\n                                            isVariableProduct={this.state.isVariableProduct}\r\n\r\n                                            product_type_values={values.product_type}\r\n\r\n                                            product_price_values={values.product_price || ''}\r\n                                            product_price_errors={errors.product_price}\r\n                                            product_price_touched={touched.product_price}\r\n\r\n                                            product_in_stock_values={values.product_in_stock || ''}\r\n                                            product_in_stock_errors={errors.product_in_stock}\r\n\r\n                                            product_brand_name_values={values.product_brand_name || ''}\r\n                                            product_brand_name_errors={errors.product_brand_name}\r\n\r\n\r\n                                            fileSelectedHandler={this.fileSelectedHandler.bind(this)}\r\n                                            imagePreviewArray={this.state.imagePreviewArray}\r\n                                            deleteImage={this.deleteImage}\r\n\r\n                                            product_warranty_values={values.product_warranty || ''}\r\n                                            product_warranty_errors={errors.product_warranty}\r\n\r\n                                            warranty_type_values={values.warranty_type || ''}\r\n                                            warranty_type_errors={errors.warranty_type}\r\n\r\n                                            product_discount_values={values.product_discount || ''}\r\n                                            product_discount_errors={errors.product_discount}\r\n\r\n                                            sku_values={values.sku || ''}\r\n                                            sku_errors={errors.sku}\r\n\r\n                                            product_weight_values={values.product_weight || ''}\r\n                                            product_weight_errors={errors.product_weight}\r\n\r\n                                            dimension_length_values={values.dimension_length || ''}\r\n                                            dimension_length_errors={errors.dimension_length}\r\n\r\n                                            dimension_width_values={values.dimension_width || ''}\r\n                                            dimension_width_errors={errors.dimension_width}\r\n\r\n                                            dimension_height_values={values.dimension_height || ''}\r\n                                            dimension_height_errors={errors.dimension_height}\r\n\r\n                                            shipping_charges_values={values.shipping_charges || ''}\r\n                                            shipping_charges_errors={errors.shipping_charges}\r\n\r\n                                            handling_fee_values={values.handling_fee || ''}\r\n                                            handling_fee_errors={errors.handling_fee}\r\n\r\n                                            purchase_note_values={values.purchase_note || ''}\r\n                                            purchase_note_errors={errors.purchase_note}\r\n\r\n                                            onChange={handleChange}\r\n                                            errors={errors}\r\n\r\n                                            productColorChangeHandler={this.handleProductColorChange}\r\n                                            productSizeChangeHandler={this.handleProductSizeChange}\r\n\r\n                                            variationsArray={this.state.variationsArray}\r\n                                            setVariationsArray={(arr) => this.setState({ variationsArray: arr })}\r\n                                            setVariationsSaved={() => this.setState({ isVariationsSaved: true })}\r\n                                        />\r\n                                        {/* End of Product Data Row */}\r\n                                        {/* Custom Fields Row */}\r\n                                        <CardAccordion title={'Custom Fields'}>\r\n                                            <CustomFields\r\n                                                customFieldsArray={this.state.customFieldsArray}\r\n                                                setFieldsArrayHandler={(arr) => this.setState({ customFieldsArray: arr })}\r\n                                                isVariableProduct={this.state.isVariableProduct}\r\n                                                hideCustomFields={this.state.variationsArray == '' && this.state.isVariableProduct == true}\r\n                                                saveCustomFieldsHandler={this.handleSaveCustomFieldsBtnClick.bind(this)}\r\n                                            />\r\n                                        </CardAccordion>\r\n                                        {/* End of Custom Fields Row */}\r\n                                    </Col>\r\n\r\n                                    <Col lg={3} md={3} sm={12} xs={12}>\r\n                                        {/* Product Category */}\r\n                                        <CardAccordion title={'Product Categories'}>\r\n                                            <Form.Group>\r\n                                                <Form.Label style={styles.label}>Category</Form.Label>\r\n                                                <div className={this.state.categoryErrorDiv}>\r\n                                                    <Select\r\n                                                        id={'1'}\r\n                                                        instanceId={'1'}\r\n                                                        inputId={'1'}\r\n                                                        styles={GlobalStyleSheet.react_select_styles}\r\n                                                        onChange={this.handleProductCategoryChange}\r\n                                                        options={this.state.category_options}\r\n                                                        value={this.state.productCategories}\r\n                                                        isSearchable={true}\r\n                                                        isClearable={true}\r\n                                                        placeholder=\"Select Category\"\r\n                                                    />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label style={styles.label}>Sub Category</Form.Label>\r\n                                                <div className={this.state.subCategoryErrorDiv}>\r\n                                                    <Select\r\n                                                        id={'1'}\r\n                                                        instanceId={'1'}\r\n                                                        inputId={'1'}\r\n                                                        styles={GlobalStyleSheet.react_select_styles}\r\n                                                        onChange={this.handleProductSubCategoryChange}\r\n                                                        options={this.state.sub_category_options}\r\n                                                        value={this.state.productSubCategories}\r\n                                                        isSearchable={true}\r\n                                                        isClearable={true}\r\n                                                        placeholder=\"Select Sub Category\"\r\n                                                        isDisabled={this.state.subCategoryDisabled}\r\n                                                    />\r\n                                                </div>\r\n                                                <div style={{ minHeight: '150px' }}></div>\r\n                                            </Form.Group>\r\n                                        </CardAccordion>\r\n                                        {/* End of Product ategory */}\r\n\r\n                                        {/* Dangerous Goods */}\r\n                                        <CardAccordion title={'Dangerous Goods'}>\r\n                                            <Form.Check\r\n                                                name=\"not_specified\"\r\n                                                label=\"Not Specified\"\r\n                                                style={styles.label}\r\n                                                checked={this.state.dangerousGoodsArray && this.state.dangerousGoodsArray.forEach(element => {\r\n                                                    if (element.value == 'Not-Specified') {\r\n                                                        return true\r\n                                                    }\r\n                                                })}\r\n                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Not-Specified')}\r\n                                            />\r\n                                            <br></br>\r\n                                            <Form.Check\r\n                                                name=\"ceramic\"\r\n                                                label=\"Ceramic\"\r\n                                                style={styles.label}\r\n                                                checked={this.state.dangerousGoodsArray && this.state.dangerousGoodsArray.forEach(element => {\r\n                                                    if (element.value == 'Ceramic') {\r\n                                                        return true\r\n                                                    }\r\n                                                })}\r\n                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Ceramic')}\r\n                                            />\r\n                                            <br></br>\r\n                                            <Form.Check\r\n                                                name=\"glass\"\r\n                                                label=\"Glass\"\r\n                                                style={styles.label}\r\n                                                checked={this.state.dangerousGoodsArray && this.state.dangerousGoodsArray.forEach(element => {\r\n                                                    if (element.value == 'Glass') {\r\n                                                        return true\r\n                                                    }\r\n                                                })}\r\n                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Glass')}\r\n                                            />\r\n                                            <br></br>\r\n                                            <Form.Check\r\n                                                name=\"metal\"\r\n                                                label=\"Metal\"\r\n                                                style={styles.label}\r\n                                                checked={this.state.dangerousGoodsArray && this.state.dangerousGoodsArray.forEach(element => {\r\n                                                    if (element.value == 'Metal') {\r\n                                                        return true\r\n                                                    }\r\n                                                })}\r\n                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Metal')}\r\n                                            />\r\n                                            <br></br>\r\n                                            <Form.Check\r\n                                                name=\"plastic\"\r\n                                                label=\"Plastic\"\r\n                                                style={styles.label}\r\n                                                checked={this.state.dangerousGoodsArray && this.state.dangerousGoodsArray.forEach(element => {\r\n                                                    if (element.value == 'Plastic') {\r\n                                                        return true\r\n                                                    }\r\n                                                })}\r\n                                                onChange={(e) => this.handleDangerousGoodsChange(e, 'Plastic')}\r\n                                            />\r\n                                        </CardAccordion>\r\n                                        {/* End ofDangerous Goods */}\r\n\r\n                                        {/* Product Tags */}\r\n                                        <CardAccordion title={'Product Tags'}>\r\n                                            <CreatableSelect\r\n                                                id={'1'}\r\n                                                instanceId={'1'}\r\n                                                inputId={'1'}\r\n                                                isMulti\r\n                                                value={this.state.productTags}\r\n                                                components={{ DropdownIndicator: null }}\r\n                                                styles={GlobalStyleSheet.react_select_styles}\r\n                                                onChange={this.handleProductTagChange}\r\n                                                placeholder=\"Type and press enter\"\r\n                                            />\r\n                                            <div style={{ minHeight: '150px' }}></div>\r\n                                        </CardAccordion>\r\n                                        {/* End of Product Tags */}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                {/* Form Submit Btn Row */}\r\n                                <Row style={styles.row}>\r\n                                    <Button type=\"submit\" onSubmit={handleSubmit} disabled={this.state.isLoading} block>\r\n                                        {this.state.isLoading ? 'Uploading' : 'Upload'}\r\n                                        {this.state.isLoading ? <Spinner animation=\"grow\" size=\"sm\" /> : <div></div>}\r\n                                    </Button>\r\n                                </Row>\r\n                                {/* End of Form Submit Btn Row */}\r\n                            </Form>\r\n                            <style jsx>\r\n                                {`\r\n                                        .RedBorderDiv{\r\n                                            border: 0.5px solid #DC3545;\r\n                                            padding: 1px;\r\n                                            border-radius: 2px;\r\n                                            width: 100%;\r\n                                        }\r\n                                        .BorderDiv{\r\n                                            border: none;\r\n                                            width: 100%;\r\n                                        }\r\n                                        span {\r\n                                            color: red;\r\n                                        }\r\n                                        .nav_link {\r\n                                            background: ${GlobalStyleSheet.admin_primry_color};\r\n                                            border-top: 0.5px solid #434556;\r\n                                            border-bottom: 0.5px solid #434556;\r\n                                            margin: 1.5px 0px;\r\n                                            border-radius: 4px\r\n                                        }\r\n                                        p {\r\n                                            text-align: center; \r\n                                            margin: 0px;\r\n                                        }\r\n                                    `}\r\n                            </style>\r\n                        </div>\r\n                    )\r\n                }\r\n            </Formik >\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    nav_link: {\r\n        color: 'white',\r\n        fontSize: '13px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        height: '45px',\r\n    },\r\n    row: {\r\n        margin: '2%',\r\n        padding: '0%'\r\n    },\r\n    card: {\r\n        width: '100%',\r\n        border: '1px solid lightgray'\r\n    },\r\n    card_header: {\r\n        alignItems: 'center',\r\n        fontSize: `${GlobalStyleSheet.card_header_fontsize}`,\r\n        background: `${GlobalStyleSheet.card_header_background}`,\r\n    },\r\n    buttons: {\r\n        background: `${GlobalStyleSheet.primry_color}`,\r\n        border: 'none',\r\n        fontSize: '10px',\r\n    },\r\n    label: {\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n    },\r\n    term_condition_label: {\r\n        width: '100%',\r\n        fontSize: `${GlobalStyleSheet.form_label_fontsize}`,\r\n        paddingTop: '-10px',\r\n        marginTop: '-10px',\r\n    },\r\n    fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n    product_fontawesome: {\r\n        color: `${GlobalStyleSheet.primary_text_color}`,\r\n        marginRight: '10%',\r\n        width: '17px',\r\n        height: '17px',\r\n        maxHeight: '17px',\r\n        maxWidth: '17px',\r\n    },\r\n    variations_fontawesome: {\r\n        color: `${GlobalStyleSheet.admin_primry_color}`,\r\n        marginRight: '10%',\r\n        width: '15px',\r\n        height: '15px',\r\n        maxHeight: '15px',\r\n        maxWidth: '15px',\r\n    },\r\n}\r\nexport default AddNew;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AADA;AACA;AAGA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AACA;AAMA;AACA;AAIA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAIA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AAIA;AAIA;AAGA;AA1DA;AACA;AA0EA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8KA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAHA;AAKA;AACA;AAhMA;AAiMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AA7MA;AAgNA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AA5NA;AA+NA;AAAA;AAAA;AACA;AACA;AAjOA;AA8OA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAlPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AArCA;AACA;AAHA;AA0CA;AACA;AACA;;;;;;;;;AAEA;AACA;AACA;;AACA;AACA;;AADA;AAEA;;AACA;AAAA;;AACA;AACA;;;;AADA;;;AAAA;;AADA;AAGA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;;;AAEA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;AACA;;;AAAA;AACA;AAAA;AAAA;AADA;AAIA;AAEA;AACA;;;;;;;;;;AAEA;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;;AAIA;AACA;;;;AAFA;AACA;;AAHA;AACA;;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;AAEA;;AACA;AAAA;AAAA;AACA;AADA;;AAGA;AACA;;;;AADA;;;AAAA;;AAHA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;AAIA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AAyDA;;;;;;;AACA;AAAA;AAAA;AACA;;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;AASA;AAAA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBA;AA2BA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AA1BA;AA4BA;AACA;AAAA;AACA;AACA;AACA;AApIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqzEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6EA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAceA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtSA;AAAA;AAAA;AAAA;AAHA;AA+UA;;;;AA5sBA;AACA;AA8sBA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AAKA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAlDA;AA2DA;;;;A","sourceRoot":""}